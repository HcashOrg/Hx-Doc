(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{299:function(t,e,n){"use strict";n.r(e);var r=n(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"跨链模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨链模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 跨链模型")]),t._v(" "),n("p",[t._v("每个新的资产区块链接入，都是以插件模式实现的。普通节点可选择是否挂载跨链插件，Citizen 和 Senator 强制要求挂载所有跨链插件。")]),t._v(" "),n("p",[t._v("新增跨链插件流程如下：")]),t._v(" "),n("p",[t._v("1、Citizen 和 Senator 约定停机时间。")]),t._v(" "),n("p",[t._v("2、Citizen 和 Senator 在约定时间内分批次完成重启和加载插件。")]),t._v(" "),n("p",[t._v("3、所有 Senator 完成补充保证金的操作。")]),t._v(" "),n("p",[t._v("4、等约定时间到达后，发起新币种的初始化操作（创建多重签名地址，广播新币种相关参数，进行新币种喂价）。\n5、完成区块链升级。")]),t._v(" "),n("p",[t._v("6、选择挂载跨链插件的普通节点选择新插件，然后进行挂载。（普通节点可自选挂载哪种链的跨链插件，因此不影响共识）。")])])},[],!1,null,null,null);e.default=a.exports}}]);