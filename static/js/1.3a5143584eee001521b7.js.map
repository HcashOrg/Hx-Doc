{"version":3,"sources":["webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/video.js/dist/video.cjs.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///src/pages/home/Video.vue","webpack:///./src/pages/home/Video.vue?ac66","webpack:///./src/pages/home/Video.vue","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/es-abstract/helpers/sign.js"],"names":["implementation","__webpack_require__","module","exports","String","prototype","trim","keys","hasSymbols","Symbol","toStr","Object","toString","concat","Array","origDefineProperty","defineProperty","supportsDescriptors","obj","_","enumerable","value","x","e","arePropertyDescriptorsSupported","object","name","predicate","fn","call","configurable","writable","defineProperties","map","predicates","arguments","length","props","getOwnPropertySymbols","i","window","isFunction","parseHeaders","xtend","initParams","uri","options","callback","params","createXHR","_createXHR","Error","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","getBody","method","headers","url","rawRequest","getAllResponseHeaders","key","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","isEmpty","beforeSend","send","array","iterator","forEachArray","toUpperCase","keysShim","has","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","isObject","isArguments","isString","theKeys","TypeError","skipProto","push","j","skipConstructor","equalsConstructorPrototypeIfNotBuggy","$isNaN","Number","isNaN","a","isFinite","Infinity","_interopDefault","ex","match","document","tsml","safeParseTuple","vtt","version","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPAD","test","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","result","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","createElement","style","browser","freeze","_typeof","classCallCheck","instance","Constructor","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","taggedTemplateLiteralLoose","strings","raw","each","forEach","assign","target","_len","sources","_key","apply","source","isPlain","history","LogByTypeFactory","log","type","level","args","lvl","levels","lvlRegExp","RegExp","unshift","console","info","isArray","join","createLogger$1","logByType","createLogger","subname","all","off","debug","warn","error","DEFAULT","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","computedStyle","el","prop","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","str","throwIfWhitespace","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","height","width","findPosition","box","left","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","id","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","get","addEventListener","passiveEvents","on","guid","hash","handlersCopy","slice","m","n","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","this","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_e","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","replace","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","reduce","acc","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","list","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","set","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","toLowerCase","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","floor","h","gm","gh","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","default","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","scrollSetting","","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","number","modulo","remain","reviver","vue_esm","vue_video_player_default","Video","lang","progressControl","volumePanel","timeDivider","durationDisplay","fullscreenToggle","playerOptions1","watch","webHomeParam","deep","newVal","isZh","mounted","$t","onPlayerPlay","home_Video","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","staticStyle","margin-top","span","ref","$event","staticRenderFns","normalizeComponent","ssrContext","__webpack_exports__","isCallable","thisArg","receiver","len","forEachString","forEachObject","alert","confirm","prompt","define","getPolyfill","shim","boundTrim","autoKeyword","directionSetting","lr","rl","alignSetting","middle","findAlignSetting","cobj","isIE8","baseObj","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","findDirectionSetting","getCueAsHTML","convertCueToDOMTree","global","win","origKeys","originalKeys","GetIntrinsic","$TypeError","$SyntaxError","Property Descriptor","ES","Desc","Type","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","recordType","argumentName","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","region","alt","vals","vals0","integer","line","lineAlign","snapToLines","size","align","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","unescape","shouldAdd","current","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","nodeStack","pushNodes","nextTextNode","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","count","computeLinePos","axis","step","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decode","decodeURIComponent","encodeURIComponent","cuetext","overlay","paddedOverlay","margin","shouldCompute","decoder","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","leftWhitespace","rightWhitespace","S","ToString","CheckObjectCoercible","that","boundLength","boundArgs","Empty","$Object","$String","assertRecord","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","IsPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","getter","setter","polyfill","d","__esModule","customEventName","required","events","globalOptions","volumeMenuButton","globalEvents","reseted","initialize","beforeDestroy","$refs","$emit","__ob__","$nextTick","install","videoPlayer","_compiled","functional","_scopeId","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","esModule","row","clean","sa","callee","ThrowTypeError","getProto","getPrototypeOf","asyncGenIterator","TypedArray","Uint8Array","INTRINSICS","$ %Array%","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","DataView","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","reject","$ %Promise_resolve%","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","isPrimitive","ES5internalSlots","O","actualHint"],"mappings":"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","file":"static/js/1.3a5143584eee001521b7.js","sourcesContent":["'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/polyfill.js\n// module id = +86n\n// module chunks = 0 1","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/define-properties/index.js\n// module id = /ymf\n// module chunks = 0 1","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0 1","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/implementation.js\n// module id = 7ciz\n// module chunks = 0 1","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isFinite.js\n// module id = 9+gG\n// module chunks = 0 1","/**\n * @license\n * Video.js 6.13.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.13.0\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args, stringify) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n    if (type !== 'log') {\n\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    }\n\n    // Add console prefix after adding to history.\n    args.unshift(name + ':');\n\n    // Add a clone of the args at this point to history.\n    if (history) {\n      history.push([].concat(args));\n    }\n\n    // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n    if (!window.console) {\n      return;\n    }\n\n    // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n    var fn = window.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window.console.info || window.console.log;\n    }\n\n    // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n    // objects and arrays for those less-capable browsers.\n    if (stringify) {\n      args = args.map(function (a) {\n        if (isObject(a) || Array.isArray(a)) {\n          try {\n            return JSON.stringify(a);\n          } catch (x) {\n            return String(a);\n          }\n        }\n\n        // Cast to string before joining, so we get null and undefined explicitly\n        // included in output (as we would in a modern console).\n        return String(a);\n      }).join(' ');\n    }\n\n    // Old IE versions do not allow .apply() for console methods (they are\n    // reported as objects rather than functions).\n    if (!fn.apply) {\n      fn(args);\n    } else {\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    }\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  var logByType = void 0;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n  var log = function log() {\n    var stringify = log.stringify || IE_VERSION && IE_VERSION < 11;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args, stringify);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error('\"' + lvl + '\" in not a valid log level');\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp('.*' + fname + '.*').test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger$1('VIDEOJS');\nvar createLogger = log.createLogger;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode !== 'disabled') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        } else {\n          this.tech_.off('timeupdate', timeupdateHandler);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n\n\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    var updateDisplayHandler = bind(_this, _this.updateDisplay);\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n\n      if (window.addEventListener) {\n        window.addEventListener('orientationchange', updateDisplayHandler);\n      }\n      player.on('dispose', function () {\n        return window.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button type=\"button\" class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button type=\"button\" class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _this);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n\nvar BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? 'x-' + k.substring(1) : k;\n\n  BREAKPOINT_CLASSES[k] = 'vjs-layout-' + v;\n});\n\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // create logger\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.log = createLogger(_this.id_);\n\n    // Tracks when a tech changes the poster\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n    _this.responsive(_this.options_.responsive);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + camelTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this5.updateSourceCaches_(src);\n      };\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      }\n\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this5.techGet('currentSrc');\n\n            _this5.lastSource_.tech = techSrc;\n            _this5.updateSourceCaches_(techSrc);\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n    this.lastSource_ = { player: this.currentSource().src, tech: event.src };\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n\n\n  Player.prototype.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  };\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  };\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n\n\n  Player.prototype.breakpoints = function breakpoints(_breakpoints) {\n\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return assign(this.breakpoints_);\n  };\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n\n\n  Player.prototype.responsive = function responsive(value) {\n\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  };\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n\n\n  Player.prototype.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  };\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n\n\n  Player.prototype.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n\n  breakpoints: {},\n  responsive: false\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log;\nvideojs.createLogger = createLogger;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.cjs.js\n// module id = Dia2\n// module chunks = 0 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0 1","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/mod.js\n// module id = H1lJ\n// module chunks = 0 1","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0 1","<template>\r\n  <div class=\"videopage\">\r\n    <div class=\"video_content\">\r\n      <div class=\"wordtitle\">\r\n        {{$t(\"home.videoin\")}}\r\n      </div>\r\n      <div style=\"margin-top: 50px;\">\r\n        <el-row>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo1\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo2\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions1\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <!-- <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col> -->\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              {{$t('home.whatishx')}}\r\n            </div>\r\n            <div class=\"content\">{{$t('home.hxvideo1')}}</div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              {{$t('home.video2_title')}}\r\n            </div>\r\n            <div class=\"content\">{{$t('home.hxvideo2')}}</div>\r\n          </el-col>\r\n          <!-- <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              HX跨链机制是如何运作的?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              HX跨链机制是如何运作的?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col> -->\r\n        </el-row>\r\n      </div>\r\n      <!-- <div style=\"margin-top: 50px;\">\r\n        <el-row>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\" class=\"col_height\">\r\n            <div class=\"videoplay\">\r\n              <video-player id=\"playerVideo\" class=\"video-player vjs-custom-skin\" ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions\" @play=\"onPlayerPlay($event)\">\r\n              </video-player>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              什么是Hyper Exchange?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              HX跨链机制是如何运作的?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              HX跨链机制是如何运作的?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"title1\">\r\n              HX跨链机制是如何运作的?\r\n            </div>\r\n            <div class=\"content\">HX动画视频   第1集</div>\r\n          </el-col>\r\n        </el-row>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport VideoPlayer from 'vue-video-player'\r\nimport 'vue-video-player/src/custom-theme.css'\r\nimport 'video.js/dist/video-js.css'\r\nVue.use(VideoPlayer)\r\nexport default {\r\n  props: ['webHomeParam'],\r\n  data () {\r\n    return {\r\n      lang: 'zh',\r\n      playerOptions: {\r\n        autoplay: false, // 自动播放：true/false\r\n        controls: true, // 是否显示底部控制栏：true/false\r\n        width: 200, // 视频播放器显示的宽度\r\n        height: 200, // 视频播放器显示的高度\r\n        loop: false, // 是否循环播放:true/false\r\n        muted: false, // 设置默认播放音频：true/false\r\n        preload: 'metadata',\r\n        fluid: false, // 是否自适应布局,播放器将会有流体体积。换句话说，它将缩放以适应容器。如果<video>标签有“vjs-fluid”样式时，这个选项会自动设置为true。\r\n        inactivityTimeout: 0, // 闲置超时,值为0表示没有\r\n        language: 'en-US', // 语言，支持的语言在lang目录下\r\n        nativeControlsForTouch: false, // 是否使用浏览器原生的控件\r\n        sources: [{\r\n          src: '' // 你的videoUrl地址（必填）\r\n        }],\r\n        poster: '/static/img/hxbg.png',\r\n        notSupportedMessage: '', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n        controlBar: {\r\n          progressControl: true, // 进度条\r\n          volumePanel: false, // 音量控制\r\n          timeDivider: false, // 已播放时间\r\n          durationDisplay: false, // 总时长\r\n          remainingTimeDisplay: false, //  剩余时间\r\n          fullscreenToggle: true // 全屏按钮\r\n        }\r\n      },\r\n      playerOptions1: {\r\n        autoplay: false, // 自动播放：true/false\r\n        controls: true, // 是否显示底部控制栏：true/false\r\n        width: 200, // 视频播放器显示的宽度\r\n        height: 200, // 视频播放器显示的高度\r\n        loop: false, // 是否循环播放:true/false\r\n        muted: false, // 设置默认播放音频：true/false\r\n        preload: 'metadata',\r\n        fluid: false, // 是否自适应布局,播放器将会有流体体积。换句话说，它将缩放以适应容器。如果<video>标签有“vjs-fluid”样式时，这个选项会自动设置为true。\r\n        inactivityTimeout: 0, // 闲置超时,值为0表示没有\r\n        language: 'en-US', // 语言，支持的语言在lang目录下\r\n        nativeControlsForTouch: false, // 是否使用浏览器原生的控件\r\n        sources: [{\r\n          src: '' // 你的videoUrl地址（必填）\r\n        }],\r\n        poster: '/static/img/video2-bg-zh.png',\r\n        notSupportedMessage: '', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n        controlBar: {\r\n          progressControl: true, // 进度条\r\n          volumePanel: false, // 音量控制\r\n          timeDivider: false, // 已播放时间\r\n          durationDisplay: false, // 总时长\r\n          remainingTimeDisplay: false, //  剩余时间\r\n          fullscreenToggle: true // 全屏按钮\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    webHomeParam: {\r\n      deep: true,\r\n      handler: function (newVal) {\r\n        window.console.log('>>>>>' + this.webHomeParam.isZh)\r\n        if (this.webHomeParam.isZh) {\r\n          this.playerOptions.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/1-zh-small.mp4'\r\n          this.playerOptions.poster = '/static/img/video1-bg-zh.png'\r\n          this.playerOptions.language = 'zh-CN'\r\n          this.playerOptions1.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/2-zh-hd.mp4'\r\n          this.playerOptions1.poster = '/static/img/video2-bg-zh.png'\r\n          this.playerOptions1.language = 'zh-CN'\r\n        } else {\r\n          this.playerOptions.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/1-en-hd.mp4'\r\n          this.playerOptions.poster = '/static/img/video1-bg-en.png'\r\n          this.playerOptions.language = 'en-US'\r\n          this.playerOptions1.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/2-en-hd.mp4'\r\n          this.playerOptions1.poster = '/static/img/video2-bg-en.png'\r\n          this.playerOptions1.language = 'en-US'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.lang = localStorage.lang || 'zh'\r\n    this.playerOptions.notSupportedMessage = this.$t('home.videoin')\r\n    this.lang === 'zh' ? this.playerOptions.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/1-zh-small.mp4' : this.playerOptions.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/1-en-hd.mp4'\r\n    this.lang === 'zh' ? this.playerOptions.poster = '/static/img/video1-bg-zh.png' : this.playerOptions.poster = '/static/img/video1-bg-en.png'\r\n    this.playerOptions1.notSupportedMessage = this.$t('home.videoin')\r\n    this.lang === 'zh' ? this.playerOptions1.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/2-zh-hd.mp4' : this.playerOptions1.sources[0].src = 'https://hx-1254113200.cos.ap-shanghai.myqcloud.com/2-en-hd.mp4'\r\n    this.lang === 'zh' ? this.playerOptions1.poster = '/static/img/video2-bg-zh.png' : this.playerOptions1.poster = '/static/img/video2-bg-en.png'\r\n  },\r\n  methods: {\r\n    onPlayerPlay (player) {\r\n      console.log('播放')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.videopage {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: 100% 100%;\r\n  background-position: center center;\r\n  background: url(/static/img/videobg.png);\r\n}\r\n.videopage .video_content {\r\n  width: 1100px;\r\n  margin: 0 auto;\r\n}\r\n.videopage .main5_img {\r\n  width: 200px;\r\n  height: 200px;\r\n  margin-left: 500px;\r\n  background: url(/static/img/main5-1.png);\r\n  background-size: 100% 100%;\r\n  background-position: center center;\r\n}\r\n.videopage .wordtitle {\r\n  font-weight: bold;\r\n  color: white;\r\n  font-size: 30pt;\r\n  padding-top: 120px;\r\n}\r\n.videopage .col_height {\r\n  height: 210px;\r\n}\r\n.videopage .title1 {\r\n  font-size:18px;\r\n  font-family:NotoSansHans-Black;\r\n  font-weight:900;\r\n  color:rgba(255,255,255,1);\r\n  text-align: left;\r\n  padding-left: 33px;\r\n}\r\n.videopage .content {\r\n  font-size:12px;\r\n  font-family:MicrosoftYaHei;\r\n  font-weight:400;\r\n  color:rgba(255,255,255,1);\r\n  text-align: left;\r\n  padding-left: 33px;\r\n}\r\n.videopage .videoplay {\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/home/Video.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"videopage\"},[_c('div',{staticClass:\"video_content\"},[_c('div',{staticClass:\"wordtitle\"},[_vm._v(\"\\n      \"+_vm._s(_vm.$t(\"home.videoin\"))+\"\\n    \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"50px\"}},[_c('el-row',[_c('el-col',{staticClass:\"col_height\",attrs:{\"span\":6}},[_c('div',{staticClass:\"videoplay\"},[_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player vjs-custom-skin\",attrs:{\"id\":\"playerVideo1\",\"playsinline\":true,\"options\":_vm.playerOptions},on:{\"play\":function($event){return _vm.onPlayerPlay($event)}}})],1)]),_vm._v(\" \"),_c('el-col',{staticClass:\"col_height\",attrs:{\"span\":6}},[_c('div',{staticClass:\"videoplay\"},[_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player vjs-custom-skin\",attrs:{\"id\":\"playerVideo2\",\"playsinline\":true,\"options\":_vm.playerOptions1},on:{\"play\":function($event){return _vm.onPlayerPlay($event)}}})],1)])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"title1\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('home.whatishx'))+\"\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_vm._v(_vm._s(_vm.$t('home.hxvideo1')))])]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticClass:\"title1\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('home.video2_title'))+\"\\n          \")]),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_vm._v(_vm._s(_vm.$t('home.hxvideo2')))])])],1)],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-82f694b0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/home/Video.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-82f694b0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Video.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Video.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Video.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-82f694b0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Video.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/home/Video.vue\n// module id = null\n// module chunks = ","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/isNaN.js\n// module id = No8i\n// module chunks = 0 1","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/index.js\n// module id = PiFy\n// module chunks = 0 1","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0 1","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0 1","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/index.js\n// module id = TaKV\n// module chunks = 0 1","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/has/src/index.js\n// module id = XfW5\n// module chunks = 0 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0 1","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0 1","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/index.js\n// module id = bidq\n// module chunks = 0 1","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/assertRecord.js\n// module id = bvnS\n// module chunks = 0 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0 1","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0 1","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0 1","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/implementation.js\n// module id = eXcd\n// module chunks = 0 1","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/function-bind/implementation.js\n// module id = fRHV\n// module chunks = 0 1","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/helpers/isPrimitive.js\n// module id = fXO7\n// module chunks = 0 1","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/es5.js\n// module id = i7Em\n// module chunks = 0 1","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });\n\treturn polyfill;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/string.prototype.trim/shim.js\n// module id = ilki\n// module chunks = 0 1","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-video-player/dist/vue-video-player.js\n// module id = iqGf\n// module chunks = 0 1","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0 1","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0 1","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0 1","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-keys/isArguments.js\n// module id = t+1C\n// module chunks = 0 1","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/GetIntrinsic.js\n// module id = teQR\n// module chunks = 0 1","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0 1","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-to-primitive/es5.js\n// module id = wSG+\n// module chunks = 0 1","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es-abstract/helpers/sign.js\n// module id = xeqp\n// module chunks = 0 1"],"sourceRoot":""}