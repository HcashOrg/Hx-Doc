{
    "docs": [
        {
            "location": "/", 
            "text": "\u4e2d\u6587\u6587\u6863\n\n\nOverview\n\n\n\n\nWhat is HyperExchange?\n\n\nHyperExchange is designed to help the HCASH ecosystem achieve value through connecting blockchains together. Through injecting resources into its ecosystem from its developers and integrating resources from other chains, HyperExchange is able to build an \ninterlinked, bifocal\n dual-token and dual-chain ecosystem with HyperCash (HC) acting as the HCASH main chain, and the HyperExchange (HX) focusing on expanding the HCASH ecosystem. HyperExchange will enable accessibility among blockchain and non-blockchain networks, and will provide HC holders with benefits such as an increased weight of mining and more administrative decision-making power within the network. Besides cross-chain functionality, HyperExchange will have Turing Complete smart contract [5] functionality. In a cross-chain application scenario, the underlying blockchain virtual machine, and the SDK and RPC support multiple development languages, providing required flexibility configuration and the ability to exchange multiple assets.\n\n\nTogether, HC and HX will help HCASH build an interlinked, bifocal, dual-chain ecosystem that is highly secure, private and interconnected.\n\n\n\n\nWhat is HIOU\n\n\nAll the cross-chain assets will correspond to the assets on the HX chain after being deposited to the HX chain.We call that HIOU.On the HX chain, all transactions are done using HIOU and HX.\n\n\n\n\nWhat is FeeAcceptance\n\n\nOn the HX chain, almost all of the handling fees are charged with HX tokens.In this way, users who recharge across the chain need to obtain HX through some channels, which will be very inconvenient to use.\n\n\nTherefore, on the HX chain, we support the fee acceptance form, which is essentially an asset exchange form, except to uniformly convert HX from other currencies, and these HX are only used to pay the fee.Anyone can put up such an acceptance, and the user who wants to use it chooses the best price.\n\n\nIn this case, for example, if A user wants to transfer HXBTC, and he does not have HX, he can choose an acceptance form that supports HXBTC to pay the fee.During the transfer process, A user will pay an additional part of HXBTC to pay the handling fee.And the user who issued the acceptance sheet consumed HX and got HXBTC\n\n\n\n\nWhat is a HyperCash chain?\n\n\nAs one of its dual chains, HyperCash functions as an upgraded Hshare chain, focusing on non-interoperable blockchain features, such as advanced post-quantum and Zero Knowledge Proof technologies. This document aims to introduce HyperExchange. All subsequent information relating to HyperCash can be found in the \nHCASH technical official website\n.\n\n\n\n\nWhat is the Cross-chain?\n\n\nHyperExchange will be the first system to achieve network interoperability using a Blockchain Multi Tunnel (BMT) protocol, HyperExchange Axis, Indicator, smart contracts and other blockchain innovations. HyperExchange lays the foundation for building cross-chain distributed commercial applications in its ecosystem.", 
            "title": "Home"
        }, 
        {
            "location": "/#_1", 
            "text": "", 
            "title": "\u4e2d\u6587\u6587\u6863"
        }, 
        {
            "location": "/#overview", 
            "text": "", 
            "title": "Overview"
        }, 
        {
            "location": "/#what-is-hyperexchange", 
            "text": "HyperExchange is designed to help the HCASH ecosystem achieve value through connecting blockchains together. Through injecting resources into its ecosystem from its developers and integrating resources from other chains, HyperExchange is able to build an  interlinked, bifocal  dual-token and dual-chain ecosystem with HyperCash (HC) acting as the HCASH main chain, and the HyperExchange (HX) focusing on expanding the HCASH ecosystem. HyperExchange will enable accessibility among blockchain and non-blockchain networks, and will provide HC holders with benefits such as an increased weight of mining and more administrative decision-making power within the network. Besides cross-chain functionality, HyperExchange will have Turing Complete smart contract [5] functionality. In a cross-chain application scenario, the underlying blockchain virtual machine, and the SDK and RPC support multiple development languages, providing required flexibility configuration and the ability to exchange multiple assets.  Together, HC and HX will help HCASH build an interlinked, bifocal, dual-chain ecosystem that is highly secure, private and interconnected.", 
            "title": "What is HyperExchange?"
        }, 
        {
            "location": "/#what-is-hiou", 
            "text": "All the cross-chain assets will correspond to the assets on the HX chain after being deposited to the HX chain.We call that HIOU.On the HX chain, all transactions are done using HIOU and HX.", 
            "title": "What is HIOU"
        }, 
        {
            "location": "/#what-is-feeacceptance", 
            "text": "On the HX chain, almost all of the handling fees are charged with HX tokens.In this way, users who recharge across the chain need to obtain HX through some channels, which will be very inconvenient to use.  Therefore, on the HX chain, we support the fee acceptance form, which is essentially an asset exchange form, except to uniformly convert HX from other currencies, and these HX are only used to pay the fee.Anyone can put up such an acceptance, and the user who wants to use it chooses the best price.  In this case, for example, if A user wants to transfer HXBTC, and he does not have HX, he can choose an acceptance form that supports HXBTC to pay the fee.During the transfer process, A user will pay an additional part of HXBTC to pay the handling fee.And the user who issued the acceptance sheet consumed HX and got HXBTC", 
            "title": "What is FeeAcceptance"
        }, 
        {
            "location": "/#what-is-a-hypercash-chain", 
            "text": "As one of its dual chains, HyperCash functions as an upgraded Hshare chain, focusing on non-interoperable blockchain features, such as advanced post-quantum and Zero Knowledge Proof technologies. This document aims to introduce HyperExchange. All subsequent information relating to HyperCash can be found in the  HCASH technical official website .", 
            "title": "What is a HyperCash chain?"
        }, 
        {
            "location": "/#what-is-the-cross-chain", 
            "text": "HyperExchange will be the first system to achieve network interoperability using a Blockchain Multi Tunnel (BMT) protocol, HyperExchange Axis, Indicator, smart contracts and other blockchain innovations. HyperExchange lays the foundation for building cross-chain distributed commercial applications in its ecosystem.", 
            "title": "What is the Cross-chain?"
        }, 
        {
            "location": "/getting-started/beginner-guide/", 
            "text": "Beginner\ns Guide\n\n\nLast updated for v1.0.7\n\n\n\n\nWelcome To HyperExchange\n\n\nWelcome to HyperExchange! We are very glad to have you. As you may or may not already know, HyperExchange is different. There\ns a lot of new things to learn to fully grasp how things work. This documentation will attempt to make things a bit easier to understand.\n\n\nThis beginner\ns guide is a path to getting the HyperExchange software up and running. You can choose from multiple clients to get a node on the network and HyperExchange in your wallet. Specifically, you\nll learn how to install, setup, and use the HyperExchange applications; how to obtain HX; and how to create cross-chain transaction.\n\n\nNOTE: Using Testnet is highly recommended for learning how to use HyperExchange software without worrying about making mistakes or losing money. After setup your software with following guides, please visit Using Testnet Guide to learn how to launch your application onto hyperexchange\u2019s testnet.\n\n\n\n\nApplications\n\n\nBelow you\nll find a list of currently available applications, with a chart showing their compatibility with different operating systems.\n\n\n\n\n\n\nhx_node\n: hx_node Connect to the HX network via P2P, receive blocks from the network, broadcast locally signed transaction packets to network, hx_node provide API to other programs to call through websocket + HTTP RPC, work with middleware to handle cross-chain deposit and withdrawal operations. HX_node manage wallet file, which contains the encrypted user\u2019s private key. A wallet file can contain multiple private keys.\n\n\n\n\n\n\nmiddleware\n: Regularly collect data from BTC/LTC/ETH and other main chains,  and store it in database.\n\n\n\n\n\n\nHXIndicator\n: HXIndicator is a graphical user interface for hx wallet.\n\n\n\n\n\n\nhx_client\n: Connect through rpc to hx_node,hx_client provided  transaction signature function, and the signature is then broadcast to the hx_node,hx_client provides an API for other programs to call through HTTP RPC (hereinafter referred to as the wallet API).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhx_node\n\n\nmiddleware\n\n\nHXIndicator\n\n\nhx_client\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\nY\n\n\nY\n\n\nY\n\n\nY\n\n\n\n\n\n\nmacOS\n\n\nY\n\n\nY\n\n\nY\n\n\nY\n\n\n\n\n\n\nLinux\n\n\nY\n\n\nY\n\n\nN\n\n\nY\n\n\n\n\n\n\n\n\n\n\nUser Guides\n\n\n\n\nGeneral User\n\n\n\n\n\n\nDownload HXIndicator for your operating system from HX official website.Refer to part \nDownload and Install\n in \nHXIndicator Setup\n\n\nIf you have got hx of mainnet, you can refer \nUsing HXIndicator\n  to use HXIndicator. \n\n\nIf you are interested in testing public testnet, refer to \nUsing Public Testnet\n\n\n\n\n\n\nDeveloper User\n\n\n\n\n\n\nDownload HyperExchange soure code from github:\nhttps://github.com/HcashOrg/HyperExchange.git\n\n\nBuilding\n\n\nIf you want to deploy all hx\n application by docker(hx-node/hx-cli/middleware\n),please refer to \ndocker deploy\n\n\nDeploy private testnet\n\n\nIf you want to test deposit/withdraw/crosschain transfer and other functions in command console, please refer to \nHx-cli RPC Commands\n.\n\n\n\n\n\n\nInstallation Guides\n\n\nTo get started, choose an option for installations available for your operating system below:\n\n\n\n\nWindows\n\n\n\n\n\n\nHXIndicator Setup\n\n\n\n\n\n\nUbuntu\n\n\n\n\n\n\nhx-node Setup\n\n\nhx-client Startup\n\n\n\n\n\n\nMac OS\n\n\n\n\n\n\nHXIndicator can refer to \nHXIndicator Setup\n on Windows.\n\n\n\n\n\n\nNOTE:\n All of the following guides can be found in the navigation menu with the same names.\n\n\nGeneral Guides\n\n\nThe following guides are independent of the different applications:\n\n\n\n\nHyperExchange Features\n\n\nUsing Testnet\n\n\nObtaining HX\n\n\nUsing the Block Explorer", 
            "title": "Beginner's Guide"
        }, 
        {
            "location": "/getting-started/beginner-guide/#beginners-guide", 
            "text": "Last updated for v1.0.7", 
            "title": "Beginner's Guide"
        }, 
        {
            "location": "/getting-started/beginner-guide/#welcome-to-hyperexchange", 
            "text": "Welcome to HyperExchange! We are very glad to have you. As you may or may not already know, HyperExchange is different. There s a lot of new things to learn to fully grasp how things work. This documentation will attempt to make things a bit easier to understand.  This beginner s guide is a path to getting the HyperExchange software up and running. You can choose from multiple clients to get a node on the network and HyperExchange in your wallet. Specifically, you ll learn how to install, setup, and use the HyperExchange applications; how to obtain HX; and how to create cross-chain transaction.  NOTE: Using Testnet is highly recommended for learning how to use HyperExchange software without worrying about making mistakes or losing money. After setup your software with following guides, please visit Using Testnet Guide to learn how to launch your application onto hyperexchange\u2019s testnet.", 
            "title": "Welcome To HyperExchange"
        }, 
        {
            "location": "/getting-started/beginner-guide/#applications", 
            "text": "Below you ll find a list of currently available applications, with a chart showing their compatibility with different operating systems.    hx_node : hx_node Connect to the HX network via P2P, receive blocks from the network, broadcast locally signed transaction packets to network, hx_node provide API to other programs to call through websocket + HTTP RPC, work with middleware to handle cross-chain deposit and withdrawal operations. HX_node manage wallet file, which contains the encrypted user\u2019s private key. A wallet file can contain multiple private keys.    middleware : Regularly collect data from BTC/LTC/ETH and other main chains,  and store it in database.    HXIndicator : HXIndicator is a graphical user interface for hx wallet.    hx_client : Connect through rpc to hx_node,hx_client provided  transaction signature function, and the signature is then broadcast to the hx_node,hx_client provides an API for other programs to call through HTTP RPC (hereinafter referred to as the wallet API).        hx_node  middleware  HXIndicator  hx_client      Windows  Y  Y  Y  Y    macOS  Y  Y  Y  Y    Linux  Y  Y  N  Y", 
            "title": "Applications"
        }, 
        {
            "location": "/getting-started/beginner-guide/#user-guides", 
            "text": "General User    Download HXIndicator for your operating system from HX official website.Refer to part  Download and Install  in  HXIndicator Setup  If you have got hx of mainnet, you can refer  Using HXIndicator   to use HXIndicator.   If you are interested in testing public testnet, refer to  Using Public Testnet    Developer User    Download HyperExchange soure code from github: https://github.com/HcashOrg/HyperExchange.git  Building  If you want to deploy all hx  application by docker(hx-node/hx-cli/middleware ),please refer to  docker deploy  Deploy private testnet  If you want to test deposit/withdraw/crosschain transfer and other functions in command console, please refer to  Hx-cli RPC Commands .", 
            "title": "User Guides"
        }, 
        {
            "location": "/getting-started/beginner-guide/#installation-guides", 
            "text": "To get started, choose an option for installations available for your operating system below:   Windows    HXIndicator Setup    Ubuntu    hx-node Setup  hx-client Startup    Mac OS    HXIndicator can refer to  HXIndicator Setup  on Windows.    NOTE:  All of the following guides can be found in the navigation menu with the same names.", 
            "title": "Installation Guides"
        }, 
        {
            "location": "/getting-started/beginner-guide/#general-guides", 
            "text": "The following guides are independent of the different applications:   HyperExchange Features  Using Testnet  Obtaining HX  Using the Block Explorer", 
            "title": "General Guides"
        }, 
        {
            "location": "/getting-started/hx-features/", 
            "text": "HyperExchange Features\n\n\nHyperExchange takes the lead in implementing inter-blockchain value interconnection via a Blockchain Multi Tunnel (BMT) protocol.\nThe realisation of cross-chain functionality has significant implications for the field of blockchain technology as:\n\n\n\n\nIt allows value to be transmitted between blockchains;\n\n\nIt dissolves barriers between independent blockchains to provide a foundation for building a globally interoperable blockchain ecosystem;\n\n\nIt allows existing blockchains to expand beyond their constraints;\n\n\nIt connects existing internet infrastructure to blockchain systems.\n\n\n\n\n\n\n100% Reserve Ratio\n\n\nIn order to ensure the stability and safety of the HCASH ecosystem, the reserve amount of HyperExchange to HCASH will be kept at 100%. Each HIOU will have its corresponding asset (such as BTC, ETH, etc) placed into hot or cold multi-signature wallets [7] on the original chain. Those addresses will then be managed by a RPPOM consensus mechanism. This ensures that all assets on the HyperExchange network will not be modified or destroyed without reason, and that increases or decreases in assets always correspond to users\n deposit or withdrawal activities.\n\n\n\n\nEfficiency\n\n\nIn accordance with the RPPOM consensus mechanism, the HyperExchange network produces a block every 5 seconds, resulting in significantly faster transaction confirmation speeds. This is illustrated best when compared to BTC, which produces a block every 10 minutes, or LTC, which produces a block every 2.5 minutes. The performance of a BTC or LTC asset transfer or trading on the HyperExchange network is approximately 120 times that of the BTC network and 30 times that of the LTC network. \n\n\nOverall, HyperExchange\ns theoretical TPS (transactions per second) can reach 10,000, which is enough to carry high-load transactions on multiple chains.\n\n\nA table containing comparisons to the HyperExchange with other networks can be seen below:\n\n\n\n\n\n\n\n\nBlockchain\n\n\nBlock time\n\n\nSize of block\n\n\nTheoretical TPS\n\n\n\n\n\n\n\n\n\n\nHX\n\n\n5s\n\n\n20M\n\n\n10000\n\n\n\n\n\n\nBTC\n\n\n10 min\n\n\n1M\n\n\n7\n\n\n\n\n\n\nETH\n\n\n17s\n\n\nNo upper limit  (800 million gas)\n\n\n22\n\n\n\n\n\n\nLTC\n\n\n2.5 min\n\n\n1M\n\n\n28\n\n\n\n\n\n\nNEO\n\n\n20S\n\n\nNo upper limit\n\n\n1000\n\n\n\n\n\n\nEOS\n\n\n1.5S\n\n\nNo upper limit\n\n\nMillions\n\n\n\n\n\n\n\n\nFrom this table, we can see that the HyperExchange network has significantly improved performance over BTC, LTC, ETH, NEO [8] and other chains when comparing production rate, block size, and theoretical TPS.\n\n\nAlthough there is a gap when comparing the theoretical million-level TPS of EOS [9] to that of HyperExchange, EOS block producers require a very stable network connection between servers, meaning they have high-performance requirements. The block producing mechanism of EOS requires 21 block producers, each of whom produce blocks in order. It therefore has the risk of being exposed to DNS fraud and DDOS attacks.\n\n\nIn contrast, HyperExchanges server and network requirements are less demanding, more adaptable, and can easily interface with other blockchains. Also, its generation node is randomly selected from all Citizens, meaning it is more difficult to target. Therefore, the risk of network attacks can be circumvented to the greatest degree and partial nodes can be attacked completely without affecting the stability of the entire network.\n\n\n\n\nSmart Contracts\n\n\nBy using Turing-complete smart contracts, HyperExchange users can flexibly extend and customise complex business transactions and financial contracts. This can be done without modifying and updating the code of the original chain itself, and so, a dynamic expansion function with limitations is realised. For example, on the HyperExchange, smart contracts can be implemented, some of which include: token contracts, trading contracts, lock-up contracts, various DAPP [10] contracts, and so on. Limitations mean that not all code can run on the HyperExchange chain. Instead, they need to follow the criteria of smart contracts. For example, only pre-defined functions from libraries can be executed, and out-of-chain data, such as weather conditions and game results cannot be obtained directly.  Dynamic expansion refers to the fact that there is no need to modify the original chain\ns underlying code, nor does it require hard forking.\n\n\nWhen the operational environment changes, HyperExchange users can react accordingly by modifying smart contracts. For example, if a pending order changes, or if a change to the pending order contract logic needs to be made (such as changing the trading logic to a minimum transaction of 100 tokens, or setting a time-limit for trading, etc.), only smart contracts in the new transaction need to be modified.\n\n\nEach time a smart contract is executed on the HyperExchange blockchain, a separate lightweight execution environment is initialised. This can be executed easily, by searching for the corresponding contract bytecode on the chain and then conducting the execution, with native API also being able to be utilised. HyperExchange provides native APIs for common operations that improve the performance of smart contracts in most scenarios.\n\n\nEach smart contract stores its own independent state under \nstorage\n. The execution of any contract transaction which results in a data change in the state storage area of the smart contract (\nstorage\n change), does not retain the full backup of all historical \nstorage\n data, but only saves the current state of the \nstorage\n, along with the changed parameters. For example: if a \nstorage\n containing an array of three numbers \n1,2,3\n, and when it changes to an array of four numbers \n1,2,3,4\n, and then changes to an array of two numbers \n1,2\n, only the current value of \n1\n and \n2\n, and changes made will be recorded (the addition of 4, removal of 3 and subsequently 4).\n\n\nWith this setting, when a user wants to obtain the execution result of a smart contract, the current value of the \nstorage\n can easily be obtained without reading all data, which greatly reduces the user\ns workload and the data storage required by a node. This also saves system resources, improves the processing efficiency of the system, and calculates the gas on demand according to the actual change of \nstorage\n. At the same time, the user can also restore or roll back changes made to values in \nstorage\n.\n\n\n\n\nFee Flexibility\n\n\nThe transaction fee on the HyperExchange chain can be paid using HX and a variety of HIOU payments. If the user has any HX or HIOU, they can directly trade without having to worry about fees.\n\n\nThe exchange rate on the HyperExchange is not a fixed ratio but is determined by market dynamics. As the price of Hyper Assets fluctuate, the HIOU required to facilitate a transaction will also fluctuate accordingly.", 
            "title": "HyperExchange Features"
        }, 
        {
            "location": "/getting-started/hx-features/#hyperexchange-features", 
            "text": "HyperExchange takes the lead in implementing inter-blockchain value interconnection via a Blockchain Multi Tunnel (BMT) protocol.\nThe realisation of cross-chain functionality has significant implications for the field of blockchain technology as:   It allows value to be transmitted between blockchains;  It dissolves barriers between independent blockchains to provide a foundation for building a globally interoperable blockchain ecosystem;  It allows existing blockchains to expand beyond their constraints;  It connects existing internet infrastructure to blockchain systems.", 
            "title": "HyperExchange Features"
        }, 
        {
            "location": "/getting-started/hx-features/#100-reserve-ratio", 
            "text": "In order to ensure the stability and safety of the HCASH ecosystem, the reserve amount of HyperExchange to HCASH will be kept at 100%. Each HIOU will have its corresponding asset (such as BTC, ETH, etc) placed into hot or cold multi-signature wallets [7] on the original chain. Those addresses will then be managed by a RPPOM consensus mechanism. This ensures that all assets on the HyperExchange network will not be modified or destroyed without reason, and that increases or decreases in assets always correspond to users  deposit or withdrawal activities.", 
            "title": "100% Reserve Ratio"
        }, 
        {
            "location": "/getting-started/hx-features/#efficiency", 
            "text": "In accordance with the RPPOM consensus mechanism, the HyperExchange network produces a block every 5 seconds, resulting in significantly faster transaction confirmation speeds. This is illustrated best when compared to BTC, which produces a block every 10 minutes, or LTC, which produces a block every 2.5 minutes. The performance of a BTC or LTC asset transfer or trading on the HyperExchange network is approximately 120 times that of the BTC network and 30 times that of the LTC network.   Overall, HyperExchange s theoretical TPS (transactions per second) can reach 10,000, which is enough to carry high-load transactions on multiple chains.  A table containing comparisons to the HyperExchange with other networks can be seen below:     Blockchain  Block time  Size of block  Theoretical TPS      HX  5s  20M  10000    BTC  10 min  1M  7    ETH  17s  No upper limit  (800 million gas)  22    LTC  2.5 min  1M  28    NEO  20S  No upper limit  1000    EOS  1.5S  No upper limit  Millions     From this table, we can see that the HyperExchange network has significantly improved performance over BTC, LTC, ETH, NEO [8] and other chains when comparing production rate, block size, and theoretical TPS.  Although there is a gap when comparing the theoretical million-level TPS of EOS [9] to that of HyperExchange, EOS block producers require a very stable network connection between servers, meaning they have high-performance requirements. The block producing mechanism of EOS requires 21 block producers, each of whom produce blocks in order. It therefore has the risk of being exposed to DNS fraud and DDOS attacks.  In contrast, HyperExchanges server and network requirements are less demanding, more adaptable, and can easily interface with other blockchains. Also, its generation node is randomly selected from all Citizens, meaning it is more difficult to target. Therefore, the risk of network attacks can be circumvented to the greatest degree and partial nodes can be attacked completely without affecting the stability of the entire network.", 
            "title": "Efficiency"
        }, 
        {
            "location": "/getting-started/hx-features/#smart-contracts", 
            "text": "By using Turing-complete smart contracts, HyperExchange users can flexibly extend and customise complex business transactions and financial contracts. This can be done without modifying and updating the code of the original chain itself, and so, a dynamic expansion function with limitations is realised. For example, on the HyperExchange, smart contracts can be implemented, some of which include: token contracts, trading contracts, lock-up contracts, various DAPP [10] contracts, and so on. Limitations mean that not all code can run on the HyperExchange chain. Instead, they need to follow the criteria of smart contracts. For example, only pre-defined functions from libraries can be executed, and out-of-chain data, such as weather conditions and game results cannot be obtained directly.  Dynamic expansion refers to the fact that there is no need to modify the original chain s underlying code, nor does it require hard forking.  When the operational environment changes, HyperExchange users can react accordingly by modifying smart contracts. For example, if a pending order changes, or if a change to the pending order contract logic needs to be made (such as changing the trading logic to a minimum transaction of 100 tokens, or setting a time-limit for trading, etc.), only smart contracts in the new transaction need to be modified.  Each time a smart contract is executed on the HyperExchange blockchain, a separate lightweight execution environment is initialised. This can be executed easily, by searching for the corresponding contract bytecode on the chain and then conducting the execution, with native API also being able to be utilised. HyperExchange provides native APIs for common operations that improve the performance of smart contracts in most scenarios.  Each smart contract stores its own independent state under  storage . The execution of any contract transaction which results in a data change in the state storage area of the smart contract ( storage  change), does not retain the full backup of all historical  storage  data, but only saves the current state of the  storage , along with the changed parameters. For example: if a  storage  containing an array of three numbers  1,2,3 , and when it changes to an array of four numbers  1,2,3,4 , and then changes to an array of two numbers  1,2 , only the current value of  1  and  2 , and changes made will be recorded (the addition of 4, removal of 3 and subsequently 4).  With this setting, when a user wants to obtain the execution result of a smart contract, the current value of the  storage  can easily be obtained without reading all data, which greatly reduces the user s workload and the data storage required by a node. This also saves system resources, improves the processing efficiency of the system, and calculates the gas on demand according to the actual change of  storage . At the same time, the user can also restore or roll back changes made to values in  storage .", 
            "title": "Smart Contracts"
        }, 
        {
            "location": "/getting-started/hx-features/#fee-flexibility", 
            "text": "The transaction fee on the HyperExchange chain can be paid using HX and a variety of HIOU payments. If the user has any HX or HIOU, they can directly trade without having to worry about fees.  The exchange rate on the HyperExchange is not a fixed ratio but is determined by market dynamics. As the price of Hyper Assets fluctuate, the HIOU required to facilitate a transaction will also fluctuate accordingly.", 
            "title": "Fee Flexibility"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/", 
            "text": "HX distribute\n\n\n\n\nHX\n\n\nHX is a functional token on the HyperExchange chain, which is all obtained by the miners, Mineral award allocation: 20% development team, 30% Senator, 50% Citizen and its supporters, citizen could get no more than 20% bonus (50% of block award). The specific benefits of mining blocks are as follows:\n\n\n\n\n\n\n\n\nblock number\n\n\nperiod block reward\n\n\namount for this period(hundred million)\n\n\n\n\n\n\n\n\n\n\n6307200\n\n\n27\n\n\n1.7\n\n\n\n\n\n\n12614400\n\n\n25\n\n\n1.6\n\n\n\n\n\n\n18921600\n\n\n24\n\n\n1.5\n\n\n\n\n\n\n25228800\n\n\n22\n\n\n1.4\n\n\n\n\n\n\n31536000\n\n\n21\n\n\n1.3\n\n\n\n\n\n\n37843200\n\n\n19\n\n\n1.2\n\n\n\n\n\n\n44150400\n\n\n17\n\n\n1.1\n\n\n\n\n\n\nrest blocks\n\n\n2\n\n\n\n\n\n\n\n\n\n\n\n\nIncentive Systems\n\n\nThere are three types of incentives on the HyperExchange:\n\n\n\n\nBlock rewards;\n\n\nBlock transaction fees (including general and contract transaction fees) using HX; and\n\n\nWithdrawal of contract fees, including various types of asset HIOUs (HXBTC, HXLTC, HX, etc.), with a transaction fee of 0.01%, decided and changeable by Senator consensus. Senators receive 20% of the total contract withdrawal fee, with the remaining amount divided equally between all users based on the amount of HX they hold.\n\n\n\n\nTable: User Comparison Incentive Table\n\n\n\n\n\n\n\n\n\n\nTourist\n\n\nCitizen Supporter\n\n\nCitizen\n\n\nSenator\n\n\nRemarks\n\n\n\n\n\n\n\n\n\n\nCitizen Registration Fee\n\n\nNO\n\n\nNO\n\n\nNO\n\n\nNO\n\n\nTokens destroyed\n\n\n\n\n\n\nNormal Transaction Fee\n\n\nNO\n\n\nYES\n\n\nYES\n\n\nNO\n\n\nTransaction Fee in HX\n\n\n\n\n\n\nBlock Reward\n\n\nNO\n\n\nYES\n\n\nYES\n\n\nYES\n\n\nBlock Rewards in HX\n\n\n\n\n\n\nContract Transaction Fee\n\n\nNO\n\n\nYES\n\n\nYES\n\n\nNO\n\n\nTransaction Fee in HX\n\n\n\n\n\n\nContract withdrawal Fee (for side-chain Assets)\n\n\nYES\n\n\nYES\n\n\nYES\n\n\nYES\n\n\nTransaction Fee in HIOU\n\n\n\n\n\n\n\n\n**NOTICE: Citizen Supporter: this refers to users who participate in mining and obtain mining rewards by pledging assets with Citizens. After Citizens obtain their block rewards, a pre-set mining pool management fee will be deducted, and the remaining rewards will be distributed to all users who pledged their assets, according to their weighting.\n\n\nTourists\n\n\nAs a owner of the HyperExchange(at least have 10000hx), Tourists can obtain rewards from contract withdrawal fees. Typically, rewards are made every 100,000 blocks. Rewards are allocated based on the amount of HX held. The formula is as follows:\n\n\nSigma((The total amount of a single type of asset transaction fee-Citizen Rewards-SenatorRewards)/(Total amount of HX))\n\n\nTourists\n\n\nTourists can receive block rewards through pledged assets.\n\n\nCitizens\n\n\nIn the HyperExchange ecosystem, Tourists earn block rewards by becoming a Citizen or through pledging assets. A Tourist can pay 1,000 HX to register as a candidate Citizen. From here, the user can pledge their own assets or encourage other users to pledge their assets on the Candidate Citizens behalf. The user then has the ability to compete for the right to become a Citizen, which will enable them to participate in block production and to obtain block rewards.\n\n\nThe rewards for Citizens and Citizen Supporters are the corresponding percentage of rewards that come from the mining pool, block rewards, and contract withdrawal transaction fees.\n\n\nMining Pool Block Reward = Fixed Block Reward + Normal Transaction Fee Reward + Contract Transaction Fee Reward\n\n\nThe formula for block rewards received by a Citizen and its referred users is:\n\n\nCitizen Initiated User Block Reward=Mining Pool Block Reward \n(0%~20%)\n+Asset Collateral Reward=(Block Fixed Reward\n70%+NormalTransaction Fee Reward+Contract Processing Fee)\n(0%~20%)+AssetCollateral Reward\n\n\n*In order to incentivize Citizens, they will obtain 0-20% of the pool reward (the ratio is set by itself, the system default is 10%) as a mining pool management fee.\n\n\nA Citizens collateral rewards are evenly divided according to the weighting of their individually held collateral assets.  The formula is:\n\n\nAsset Collateral Reward = (Fixed block reward*70%) * (100%-80%) * HX weight of collateral asset\n\n\nCitizen Supporters can receive asset collateral rewards. \n\n\nTo hold Citizens accountable, penalties also need to be introduced. If a Citizen misses 5 blocks in a row, the chain reduces the Citizen\ns participation rate, which reduces the future probability that their node will be elected as a block node.\n\n\nSenators\n\n\nSenators equally share 30% of block rewards and get a 20% bonus reward from all contract withdrawal fees.", 
            "title": "HX Distribute"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#hx-distribute", 
            "text": "", 
            "title": "HX distribute"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#hx", 
            "text": "HX is a functional token on the HyperExchange chain, which is all obtained by the miners, Mineral award allocation: 20% development team, 30% Senator, 50% Citizen and its supporters, citizen could get no more than 20% bonus (50% of block award). The specific benefits of mining blocks are as follows:     block number  period block reward  amount for this period(hundred million)      6307200  27  1.7    12614400  25  1.6    18921600  24  1.5    25228800  22  1.4    31536000  21  1.3    37843200  19  1.2    44150400  17  1.1    rest blocks  2", 
            "title": "HX"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#incentive-systems", 
            "text": "There are three types of incentives on the HyperExchange:   Block rewards;  Block transaction fees (including general and contract transaction fees) using HX; and  Withdrawal of contract fees, including various types of asset HIOUs (HXBTC, HXLTC, HX, etc.), with a transaction fee of 0.01%, decided and changeable by Senator consensus. Senators receive 20% of the total contract withdrawal fee, with the remaining amount divided equally between all users based on the amount of HX they hold.   Table: User Comparison Incentive Table      Tourist  Citizen Supporter  Citizen  Senator  Remarks      Citizen Registration Fee  NO  NO  NO  NO  Tokens destroyed    Normal Transaction Fee  NO  YES  YES  NO  Transaction Fee in HX    Block Reward  NO  YES  YES  YES  Block Rewards in HX    Contract Transaction Fee  NO  YES  YES  NO  Transaction Fee in HX    Contract withdrawal Fee (for side-chain Assets)  YES  YES  YES  YES  Transaction Fee in HIOU     **NOTICE: Citizen Supporter: this refers to users who participate in mining and obtain mining rewards by pledging assets with Citizens. After Citizens obtain their block rewards, a pre-set mining pool management fee will be deducted, and the remaining rewards will be distributed to all users who pledged their assets, according to their weighting.", 
            "title": "Incentive Systems"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#tourists", 
            "text": "As a owner of the HyperExchange(at least have 10000hx), Tourists can obtain rewards from contract withdrawal fees. Typically, rewards are made every 100,000 blocks. Rewards are allocated based on the amount of HX held. The formula is as follows:  Sigma((The total amount of a single type of asset transaction fee-Citizen Rewards-SenatorRewards)/(Total amount of HX))", 
            "title": "Tourists"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#tourists_1", 
            "text": "Tourists can receive block rewards through pledged assets.", 
            "title": "Tourists"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#citizens", 
            "text": "In the HyperExchange ecosystem, Tourists earn block rewards by becoming a Citizen or through pledging assets. A Tourist can pay 1,000 HX to register as a candidate Citizen. From here, the user can pledge their own assets or encourage other users to pledge their assets on the Candidate Citizens behalf. The user then has the ability to compete for the right to become a Citizen, which will enable them to participate in block production and to obtain block rewards.  The rewards for Citizens and Citizen Supporters are the corresponding percentage of rewards that come from the mining pool, block rewards, and contract withdrawal transaction fees.  Mining Pool Block Reward = Fixed Block Reward + Normal Transaction Fee Reward + Contract Transaction Fee Reward  The formula for block rewards received by a Citizen and its referred users is:  Citizen Initiated User Block Reward=Mining Pool Block Reward  (0%~20%) +Asset Collateral Reward=(Block Fixed Reward 70%+NormalTransaction Fee Reward+Contract Processing Fee) (0%~20%)+AssetCollateral Reward  *In order to incentivize Citizens, they will obtain 0-20% of the pool reward (the ratio is set by itself, the system default is 10%) as a mining pool management fee.  A Citizens collateral rewards are evenly divided according to the weighting of their individually held collateral assets.  The formula is:  Asset Collateral Reward = (Fixed block reward*70%) * (100%-80%) * HX weight of collateral asset  Citizen Supporters can receive asset collateral rewards.   To hold Citizens accountable, penalties also need to be introduced. If a Citizen misses 5 blocks in a row, the chain reduces the Citizen s participation rate, which reduces the future probability that their node will be elected as a block node.", 
            "title": "Citizens"
        }, 
        {
            "location": "/getting-started/obtaining-hx-test/#senators", 
            "text": "Senators equally share 30% of block rewards and get a 20% bonus reward from all contract withdrawal fees.", 
            "title": "Senators"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/", 
            "text": "Using the Block Explorer\n\n\n\n\nOverview\n\n\nAll blocks/transactions/contracts on the hyperexchange blockchain are visible through the use of this block explorer.\n\n\n\n\nThe explorer of public testnet:\nhttp://explorer.hx.cash\n.\n\n\nThe explorer of mainnet:\nhttp://explorer.hx.cash\n.\n\n\n\n\nYou can enter Address/TxHash/Contract Address/Height in the search box to find more detailed information about them.\n\n\n\n\nHome\n\n\n\n\nBlockchain Info\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nTotal Supply\n\n\nThe total amount of HX\n\n\n\n\n\n\nTransactions\n\n\nTotal number of transactions on the hyperexchange blockchain\n\n\n\n\n\n\nBlock Height\n\n\nThe number of current block\n\n\n\n\n\n\nBlock Reward\n\n\nThe total reward for all blocks\n\n\n\n\n\n\n\n\n\n\n\n\nValue Info\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nPrice($)\n\n\nThe current price in dollars\n\n\n\n\n\n\nPrice(BTC)\n\n\nThe current price in BTC\n\n\n\n\n\n\nChange(24H)\n\n\nThe ups and downs of the day\n\n\n\n\n\n\n\n\n\n\n\n\nBlocks\n\n\n\n\nDisplays information for the last 10 blocks, if you want to more blocks information, please click \nMore\n.\n\n\n\n\n\n\nTransaction\n\n\n\n\nDisplays information for the last 10 transactions, if you want to more transactions information, please click \nMore\n.\n\n\n\n\n\n\nTransaction Statistics\n\n\n\n\nCount the number of transactions per hour in a day/per day in a week/per day in a month.\n\n\n\n\nBlocks\n\n\n\n\nIn this page, will show all blocks in hyperexchange blockchain.\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nHeight\n\n\nThe block number\n\n\n\n\n\n\nAge\n\n\nHow long ago the block was added to the blockchain\n\n\n\n\n\n\ntxn\n\n\nThe number of transactions in this block\n\n\n\n\n\n\nMiner\n\n\nCreator of this block\n\n\n\n\n\n\nReward\n\n\nThe number of HX rewards in this block\n\n\n\n\n\n\n\n\n\n\n\n\nAfter click \nHeight\n, will show detail information of this block,and all transactions of this block.\n\n\n\n\n\n\n\n\nTransactions\n\n\n\n\nIn this page, will show all transactioins in hyperexchange blockchain, Related transactions can be viewed according to transaction type:\nTransfer/Withdraw/Deposit/Contract/Reward/Acceptance/Other\n.\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nTxHash\n\n\nhash of this transaction\n\n\n\n\n\n\nBlock\n\n\nThe block number that contains the transaction\n\n\n\n\n\n\nTypes\n\n\ntype of this transaction\n\n\n\n\n\n\nAge\n\n\nHow long ago the transaction was added to the blockchain\n\n\n\n\n\n\nFrom\n\n\nThe sender of the transaction\n\n\n\n\n\n\nTo\n\n\nThe recipient of the transaction\n\n\n\n\n\n\nValue\n\n\ntransfer amount\n\n\n\n\n\n\nFee\n\n\nfee of this transaction\n\n\n\n\n\n\n\n\n\n\n\n\nAfter click TxHash, will show detail information of this transaction.\n\n\n\n\n\n\nContracts\n\n\n\n\nShow all contracts information on hyperexchange blockchain.\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nContract Address\n\n\naddress of the contract\n\n\n\n\n\n\nAuthor Address\n\n\naddress of the contract depolyer\n\n\n\n\n\n\nCallTimes\n\n\nThe number of times a contract is called\n\n\n\n\n\n\nCreate Time\n\n\nThe time the contract was created\n\n\n\n\n\n\nThe Last Time\n\n\nThe last time the contract was invoked\n\n\n\n\n\n\n\n\n\n\n\n\nAfter click one \nContract Adredss\n, will show detail information of this contract.\n\n\n\n\nColumn Explanation\n\n\n\n\n\n\n\n\nColumn\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nContract Address\n\n\naddress of the contract\n\n\n\n\n\n\nAuthor Address\n\n\naddress of the contract depolyer\n\n\n\n\n\n\nTransaction\n\n\nThe number of transactions associated with the contract\n\n\n\n\n\n\nCreate txn\n\n\nThe transaction that create this contract\n\n\n\n\n\n\nBalance\n\n\nBalance of this contract\n\n\n\n\n\n\n\n\n\n\nClick Transactions will show detail information of transactions associated with the contract.\n\n\n\n\nClick Api will show all the interface of this contract user can use.\n\n\n\n\n\n\nAfter click one \nAuthor Adredss\n, will show detail information of this address.", 
            "title": "Using the Block Explorer"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#using-the-block-explorer", 
            "text": "", 
            "title": "Using the Block Explorer"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#overview", 
            "text": "All blocks/transactions/contracts on the hyperexchange blockchain are visible through the use of this block explorer.   The explorer of public testnet: http://explorer.hx.cash .  The explorer of mainnet: http://explorer.hx.cash .   You can enter Address/TxHash/Contract Address/Height in the search box to find more detailed information about them.", 
            "title": "Overview"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#home", 
            "text": "Blockchain Info   Column Explanation     Column  Explanation      Total Supply  The total amount of HX    Transactions  Total number of transactions on the hyperexchange blockchain    Block Height  The number of current block    Block Reward  The total reward for all blocks       Value Info   Column Explanation     Column  Explanation      Price($)  The current price in dollars    Price(BTC)  The current price in BTC    Change(24H)  The ups and downs of the day       Blocks   Displays information for the last 10 blocks, if you want to more blocks information, please click  More .    Transaction   Displays information for the last 10 transactions, if you want to more transactions information, please click  More .    Transaction Statistics   Count the number of transactions per hour in a day/per day in a week/per day in a month.", 
            "title": "Home"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#blocks", 
            "text": "In this page, will show all blocks in hyperexchange blockchain.   Column Explanation     Column  Explanation      Height  The block number    Age  How long ago the block was added to the blockchain    txn  The number of transactions in this block    Miner  Creator of this block    Reward  The number of HX rewards in this block       After click  Height , will show detail information of this block,and all transactions of this block.", 
            "title": "Blocks"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#transactions", 
            "text": "In this page, will show all transactioins in hyperexchange blockchain, Related transactions can be viewed according to transaction type: Transfer/Withdraw/Deposit/Contract/Reward/Acceptance/Other .   Column Explanation     Column  Explanation      TxHash  hash of this transaction    Block  The block number that contains the transaction    Types  type of this transaction    Age  How long ago the transaction was added to the blockchain    From  The sender of the transaction    To  The recipient of the transaction    Value  transfer amount    Fee  fee of this transaction       After click TxHash, will show detail information of this transaction.", 
            "title": "Transactions"
        }, 
        {
            "location": "/getting-started/using-the-block-explorer/#contracts", 
            "text": "Show all contracts information on hyperexchange blockchain.   Column Explanation     Column  Explanation      Contract Address  address of the contract    Author Address  address of the contract depolyer    CallTimes  The number of times a contract is called    Create Time  The time the contract was created    The Last Time  The last time the contract was invoked       After click one  Contract Adredss , will show detail information of this contract.   Column Explanation     Column  Explanation      Contract Address  address of the contract    Author Address  address of the contract depolyer    Transaction  The number of transactions associated with the contract    Create txn  The transaction that create this contract    Balance  Balance of this contract      Click Transactions will show detail information of transactions associated with the contract.   Click Api will show all the interface of this contract user can use.    After click one  Author Adredss , will show detail information of this address.", 
            "title": "Contracts"
        }, 
        {
            "location": "/getting-started/public-testnet/", 
            "text": "Public Testnet Using Guide\n\n\nLast updated for v1.0.7\n\n\nWe will mainly talk about public testnets in this page so that every user can easily use HXIndicator.\n\n\nIn order to improve the stability of main chain, testnet is available for free trial by Hcash and community users who have interests. After testnet runs steadily for a while, the main chain will be officially released. Due to the complexity of the project and diversity of roles on the chain, we need to engage users to have some basic understanding of the Hyper Exchange project. Please read \nCross Chain\n and \nSmart Contract\n parts in \nAdvanced\n.\n\n\nTestnet will now offer the following features:\n\n\n\n\n\n\nBasic user registration and transfer function;\n\n\n\n\n\n\nPledge mining function testing;\n\n\n\n\nCitizen mining function;\n\n\nFee acceptance function;\n\n\nAsset exchange function on the chain (currently supporting HC, BTC, eth ,erc20 token and LTC);\n\n\nSmart contract function (there are asset exchange contracts on the chain, and IDE development tools will be introduced later).\n\n\n\n\nDownload and startup HXIndicator\n\n\nThe latest version of HXIndicator can be downloaded from official website:\n.\n\n\nStartup and setup\n\n\nOpening HXIndicator for the first time will display the following screen:\n\n\n\n\n\n\nThe default path is:%appdata%\\HXIndicator_test\\chaindata,you can select a path that you want to store the chaindata,make sure that path has enough disk space.\n\n\n\n\nThen click \nNext\n.\n\n\nSelect \nCreateWallet\n(If you are using a previously backed wallet file, select \nImportWallet\n).\n\n\n\n\nIf you select \nImportWallet\n,select a \nwallet.json\n file from your local path,after loading,input the password of this wallet,will display as below:\n\n\n\n\nThen click \nNext\n,after \nLOADING\n,Please setup the password.\n\n\n\n\nThen click \nNew Wallet\n,will display the main interface.\n\n\n\n\nIn the lower right corner of the interface,show the connection number and blcok number.\n\n\n\n\nIn the lower left corner of the interface,after click \n,list \nSetting\n/Lock/Console/Help\n\n\n\n\nSetting:set language and other parameter:\n\n\n\n\n\n\n\n\nSetting:Change password:\n\n\n\n\n\n\n\n\nSetting:Account \ndelete\n/\nexport\n,\nBackup wallet\n:\n\n\n\n\n\n\n\n\nLock:after click lock,the wallet will change to lock status:\n\n\n\n\n\n\n\n\nConsole:you can excute some commands here,such as,excute command \nhelp\n will show all commands that you can call:\n\n\n\n\n\n\n\n\nHelp:include \nAbout Us\n/\nUpdate\n\n\n\n\nCreate a new account\n\n\nClick \nNEW\n to create an account on asset page, enter your account name (it will check whether the registered account already existed on the blockchain).\n\n\n\n\nClick \nOK\n to backup wallet data, select a safe path, and click \nBackup\n.\n\n\n\n\n\n\nNow you will get a HX address.\n\n\n\n\nObtaining test HX coin\n\n\nVist \nfaucet website\n, input your hx address/e-mail/name.\n\n\n\n\nObtaining other asset test coin\n\n\nClick \ndeposit\n botton to get address of this asset,then visit btc and ltc faucet website to obtain testcoin.\n\n\n\n\nBTC faucet:\nhttps://testnet.manu.backend.hamburg/faucet\n\n\nLTC faucet:\nhttp://testnet.litecointools.com\n\n\nHyper Cash faucet\uff1a\nhttp://faucet.h.cash/\n\n\n\n\nDeposit\n\n\nFor HX assets, there is no need to top up.HX, which the user receives from the faucet or transfers via Indicator, can be used directly.\n\n\nFor other HIOU assets, if they are in other wallets, or if they are collected from the faucet, they need to be deposited to get into the HX chain.\n\n\n\n\nFirst, you can click the deposit button of the \nAssets\n page to get the deposit address.\n\n\n\n\n\n\n\n\nThe user deposit other assets by transferring from other account or by getting from faucet.\n\n\n\n\n\n\n\n\nAfter deposit is completed, the asset can be seen in the Indicator after waiting for 6 confirmation blocks.\n\n\n\n\nTransfer\n\n\n\n\nIn the \nAssets\n page, you can click the \ntransfer\n button on the right of each asset to transfer between the same asset.\n\n\n\n\n\n\n\n\nEnter \nFromAccount\n,\nCoin\n,\nToAddress\n,\nAmount\n,\nFee\n,\nMemo\n. Then click \nSend\n to confirm the transaction and enter the wallet password.\n\n\n\n\n\n\n\n\nA certain amount of HX shall be charged for the transfer. If there is no HX in the account, you can choose to use the fee acceptance to pay the fee.\n\n\nAs shown above, you can use HC to pay the fee, which shows the number of HC to be paid.\n\n\nif there are many fee acceptances on the chain, the wallet automatically picks the cheapest one.\n\n\n\n\nTransaction Records\n\n\nThe \nTransaction Records\n page can query all transactions related to the account and also provides some filter conditions for easy inquiry.\n\n\n\n\nAsset Exchange\n\n\nYou can see other users\n orders in the \nOrder Center\n page, and you can choose the right order to buy.If you want to create your own sales order, you need to create a pending contract, and the Indicator will automatically prompt you to register at about 0.02039HX.\nThe exchange is similar to an exchange except that it is executed by smart contracts.Therefore, users need the following steps to exchange assets:\n* top up the assets to be exchanged to the contract (click \nMY CONTRACT\n in the \nMy Orders\n page, and then click \nDEPOSIT\n button)\n\n\n\n\n\n\nset the exchange rate (click the \nSELL\n button in the \nMy Orders\n page).\n\n\n\n\n\n\n\n\nYou can see the order in the \nOrder Center\n page, and can choose the appropriate order to buy.\n\n\n\n\n\n\n\n\nwithdrawal of assets after exchange (assets which are not used after deposit or withdrawal to contract are displayed in the \nContract Balance\n, and users can withdraw at any time)\n\n\n\n\n\n\nMining\n\n\nHX\ns mining is different from existing mechanisms such as bitcoin or other POS.HX can use any asset to mine and gain HX benefits.It\ns easy to be an HX miner here, just two steps:\n* Become a registered user (click the \nMining\n submenu under the \nAccount\n menu, and click the \nREGISTER\n button on the interface, it will be successfully registered at the cost of 5HX)\n\n\n\n\n\n\nChoose a mining method\n(1)mortgage asset mining (click the \nMORTGAGE\n button in the \nMining\n interface and choose to pledge your asset to a citizen. At this time, the ownership of the asset is still your own and you can cancel it at any time.\n\n\n\n\n\n\n\n\n(2)pay 10000HX to be a citizen (currently the wallet is not supported, and the updated version will be support)\n\n\nThe difference between pledged assets to existing Citizen and to become Citizen is that Citizen is like a mining pool and can extract a certain proportion of the profits.\nWhen the Citizen comes out, all the pledgee, including Citizen, will get the benefit.As shown in the following figure, the user needs to collect the income by himself, and only after receiving the income can it enter the user\ns account and be used.", 
            "title": "Using Public Testnet"
        }, 
        {
            "location": "/getting-started/public-testnet/#public-testnet-using-guide", 
            "text": "Last updated for v1.0.7  We will mainly talk about public testnets in this page so that every user can easily use HXIndicator.  In order to improve the stability of main chain, testnet is available for free trial by Hcash and community users who have interests. After testnet runs steadily for a while, the main chain will be officially released. Due to the complexity of the project and diversity of roles on the chain, we need to engage users to have some basic understanding of the Hyper Exchange project. Please read  Cross Chain  and  Smart Contract  parts in  Advanced .  Testnet will now offer the following features:    Basic user registration and transfer function;    Pledge mining function testing;   Citizen mining function;  Fee acceptance function;  Asset exchange function on the chain (currently supporting HC, BTC, eth ,erc20 token and LTC);  Smart contract function (there are asset exchange contracts on the chain, and IDE development tools will be introduced later).", 
            "title": "Public Testnet Using Guide"
        }, 
        {
            "location": "/getting-started/public-testnet/#download-and-startup-hxindicator", 
            "text": "The latest version of HXIndicator can be downloaded from official website: .", 
            "title": "Download and startup HXIndicator"
        }, 
        {
            "location": "/getting-started/public-testnet/#startup-and-setup", 
            "text": "Opening HXIndicator for the first time will display the following screen:    The default path is:%appdata%\\HXIndicator_test\\chaindata,you can select a path that you want to store the chaindata,make sure that path has enough disk space.   Then click  Next .  Select  CreateWallet (If you are using a previously backed wallet file, select  ImportWallet ).   If you select  ImportWallet ,select a  wallet.json  file from your local path,after loading,input the password of this wallet,will display as below:   Then click  Next ,after  LOADING ,Please setup the password.   Then click  New Wallet ,will display the main interface.   In the lower right corner of the interface,show the connection number and blcok number.   In the lower left corner of the interface,after click  ,list  Setting /Lock/Console/Help   Setting:set language and other parameter:     Setting:Change password:     Setting:Account  delete / export , Backup wallet :     Lock:after click lock,the wallet will change to lock status:     Console:you can excute some commands here,such as,excute command  help  will show all commands that you can call:     Help:include  About Us / Update", 
            "title": "Startup and setup"
        }, 
        {
            "location": "/getting-started/public-testnet/#create-a-new-account", 
            "text": "Click  NEW  to create an account on asset page, enter your account name (it will check whether the registered account already existed on the blockchain).   Click  OK  to backup wallet data, select a safe path, and click  Backup .    Now you will get a HX address.", 
            "title": "Create a new account"
        }, 
        {
            "location": "/getting-started/public-testnet/#obtaining-test-hx-coin", 
            "text": "Vist  faucet website , input your hx address/e-mail/name.", 
            "title": "Obtaining test HX coin"
        }, 
        {
            "location": "/getting-started/public-testnet/#obtaining-other-asset-test-coin", 
            "text": "Click  deposit  botton to get address of this asset,then visit btc and ltc faucet website to obtain testcoin.   BTC faucet: https://testnet.manu.backend.hamburg/faucet  LTC faucet: http://testnet.litecointools.com  Hyper Cash faucet\uff1a http://faucet.h.cash/", 
            "title": "Obtaining other asset test coin"
        }, 
        {
            "location": "/getting-started/public-testnet/#deposit", 
            "text": "For HX assets, there is no need to top up.HX, which the user receives from the faucet or transfers via Indicator, can be used directly.  For other HIOU assets, if they are in other wallets, or if they are collected from the faucet, they need to be deposited to get into the HX chain.   First, you can click the deposit button of the  Assets  page to get the deposit address.     The user deposit other assets by transferring from other account or by getting from faucet.     After deposit is completed, the asset can be seen in the Indicator after waiting for 6 confirmation blocks.", 
            "title": "Deposit"
        }, 
        {
            "location": "/getting-started/public-testnet/#transfer", 
            "text": "In the  Assets  page, you can click the  transfer  button on the right of each asset to transfer between the same asset.     Enter  FromAccount , Coin , ToAddress , Amount , Fee , Memo . Then click  Send  to confirm the transaction and enter the wallet password.     A certain amount of HX shall be charged for the transfer. If there is no HX in the account, you can choose to use the fee acceptance to pay the fee.  As shown above, you can use HC to pay the fee, which shows the number of HC to be paid.  if there are many fee acceptances on the chain, the wallet automatically picks the cheapest one.", 
            "title": "Transfer"
        }, 
        {
            "location": "/getting-started/public-testnet/#transaction-records", 
            "text": "The  Transaction Records  page can query all transactions related to the account and also provides some filter conditions for easy inquiry.", 
            "title": "Transaction Records"
        }, 
        {
            "location": "/getting-started/public-testnet/#asset-exchange", 
            "text": "You can see other users  orders in the  Order Center  page, and you can choose the right order to buy.If you want to create your own sales order, you need to create a pending contract, and the Indicator will automatically prompt you to register at about 0.02039HX.\nThe exchange is similar to an exchange except that it is executed by smart contracts.Therefore, users need the following steps to exchange assets:\n* top up the assets to be exchanged to the contract (click  MY CONTRACT  in the  My Orders  page, and then click  DEPOSIT  button)    set the exchange rate (click the  SELL  button in the  My Orders  page).     You can see the order in the  Order Center  page, and can choose the appropriate order to buy.     withdrawal of assets after exchange (assets which are not used after deposit or withdrawal to contract are displayed in the  Contract Balance , and users can withdraw at any time)", 
            "title": "Asset Exchange"
        }, 
        {
            "location": "/getting-started/public-testnet/#mining", 
            "text": "HX s mining is different from existing mechanisms such as bitcoin or other POS.HX can use any asset to mine and gain HX benefits.It s easy to be an HX miner here, just two steps:\n* Become a registered user (click the  Mining  submenu under the  Account  menu, and click the  REGISTER  button on the interface, it will be successfully registered at the cost of 5HX)    Choose a mining method\n(1)mortgage asset mining (click the  MORTGAGE  button in the  Mining  interface and choose to pledge your asset to a citizen. At this time, the ownership of the asset is still your own and you can cancel it at any time.     (2)pay 10000HX to be a citizen (currently the wallet is not supported, and the updated version will be support)  The difference between pledged assets to existing Citizen and to become Citizen is that Citizen is like a mining pool and can extract a certain proportion of the profits.\nWhen the Citizen comes out, all the pledgee, including Citizen, will get the benefit.As shown in the following figure, the user needs to collect the income by himself, and only after receiving the income can it enter the user s account and be used.", 
            "title": "Mining"
        }, 
        {
            "location": "/getting-started/private-testnet/", 
            "text": "Private Testnet Using Guide\n\n\nLast updated for v1.0.7\n\n\nIn this page. We mainly talk about  \nprivate testnet\n that every developer could easily deploy .\n\n\nPREREQUISITES\n\n\nWe assume that you have both \nwitness_node\n and \ncli_wallet\n already compliled (or downloaded from the offical respository).you have deployed hx middleware successfully.if not yet,please refer \nMiddleware Startup\n to deploy.\n\n\nFOLDER STRUCTURE\n\n\nCreate a new folder (we will refer to it as \n[Testnet-Home]\n) in any location you like and copy \nwitness_node\n and \ncli_wallet\n there. The \n[Testnet-Home]\n folder will contain all files and folders related to the testnet.\n\n\nOpen a Command Prompt window and switch the current directory to \n[Testnet-Home]\n.\n\n\nTHE GENESIS FILE\n\n\nThe genesis file defines the initial state of the network.Please find it as below:\n\n\n\n\nDefault genesis\n\n\n\n\nThe graphene code base has a default genesis block integrated that has all witnesses, committee members and funds and a single account called \nnathan\n available from a single private key:\n\n\n5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\n\n\n\nRead below to find how to use this key, and go ahead to learn about how to define your own genesis file\n\n\n\n\nCustomization of the genesis file\n\n\n\n\nWe create a new genesis json file named my-genesis.json by running this command:\n\n\n$ witness_node --create-genesis-json=my-genesis.json\n\n\n\nThe \nmy-genesis.json\n file will be created in the \n[Testnet-Home]\n folder. Once this task is done, the witness node will terminate on its own.\n\n\nIf you want to customize the network\u2019s initial state, edit the newly created \nmy-genesis.json\n file. This allows you to control things such as:\n\n\n\n\nThe accounts that exist at genesis, their names and public keys\n\n\nAssets and their initial status (including core asset)\n\n\nInitial values of chain parameters (including fees)\n\n\n\n\nExample File:\n\n\n{\n  \"initial_timestamp\": \"2018-07-31T02:35:00\",\n  \"max_core_supply\": \"840000000000000\",\n  \"initial_parameters\": {\n\"current_fees\": {\n  \"parameters\": [[\n  0,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  1,{\n\"fee\": 500\n  }\n],[\n  2,{\n\"fee\": 0\n  }\n],[\n  3,{\n\"fee\": 2000\n  }\n],[\n  4,{\n\"fee\": 0\n  }\n],[\n  5,{\n\"basic_fee\": 500000,\n\"premium_fee\": 200000,\n\"price_per_kbyte\": 100\n  }\n],[\n  6,{\n\"fee\": 200000000,\n\"price_per_kbyte\": 100\n  }\n],[\n  7,{\n\"fee\": 300000\n  }\n],[\n  8,{\n\"membership_annual_fee\": 200000,\n\"membership_lifetime_fee\": 1000000\n  }\n],[\n  9,{\n\"fee\": 50000\n  }\n],[\n  10,{\n\"fee\": 50000\n  }\n],[\n  11,{\n\"fee\": 50000\n  }\n],[\n  12,{\n\"fee\": 50000\n  }\n],[\n  13,{\n\"symbol3\": 50000000,\n\"symbol4\": 30000000,\n\"long_symbol\": 500000,\n\"price_per_kbyte\": 10\n  }\n],[\n  14,{\n\"fee\": 50000,\n\"price_per_kbyte\": 10\n  }\n],[\n  15,{\n\"fee\": 50000\n  }\n],[\n  16,{\n\"fee\": 50000\n  }\n],[\n  17,{\n\"fee\": 2000,\n\"price_per_kbyte\": 100\n  }\n],[\n  18,{\n\"fee\": 2000\n  }\n],[\n  19,{\n\"fee\": 100\n  }\n],[\n  20,{\n\"fee\": 10000\n  }\n],[\n  21,{\n\"fee\": 50000\n  }\n],[\n  22,{\n\"fee\": 100\n  }\n],[\n  23,{\n\"fee\": 100\n  }\n],[\n  24,{\n\"fee\": 400000\n  }\n],[\n  25,{\n\"fee\": 2000\n  }\n],[\n  26,{\n\"fee\": 0\n  }\n],[\n  27,{\n\"fee\": 0\n  }\n],[\n  28,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  29,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  30,{\n\"fee\": 100\n  }\n],[\n  31,{\n\"fee\": 100\n  }\n],[\n  32,{\n\"fee\": 100\n  }\n],[\n  33,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  34,{\n\"fee\": 0\n  }\n],[\n  35,{\n\"fee\": 300000\n  }\n],[\n  36,{\n\"fee\": 2000\n  }\n],[\n  37,{\n\"fee\": 100\n  }\n],[\n  38,{\n\"fee\": 350000\n  }\n],[\n  39,{\n\"fee\": 100\n  }\n],[\n  40,{\n\"fee\": 2000\n  }\n],[\n  41,{\n\"fee\": 450000\n  }\n],[\n  42,{\n\"fee\": 100,\n\"price_per_kbyte\": 10\n  }\n],[\n  43,{\n\"fee\": 100\n  }\n],[\n  44,{}\n],[\n  45,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  46,{\n\"fee\": 2000\n  }\n],[\n  47,{\n\"fee\": 2000\n  }\n],[\n  48,{\n\"fee\": 500,\n\"price_per_output\": 500\n  }\n],[\n  49,{\n\"fee\": 500,\n\"price_per_output\": 500\n  }\n],[\n  50,{\n\"fee\": 500\n  }\n],[\n  51,{}\n],[\n  52,{\n\"fee\": 2000\n  }\n],[\n  53,{}\n],[\n  54,{\n\"fee\": 100\n  }\n],[\n  55,{\n\"fee\": 2000\n  }\n],[\n  56,{\n\"fee\": 2000\n  }\n],[\n  57,{\n\"fee\": 2000\n  }\n],[\n  58,{\n\"fee\": 2000\n  }\n],[\n  59,{\n\"fee\": 2000\n  }\n],[\n  60,{\n\"fee\": 2000\n  }\n],[\n  61,{\n\"fee\": 2000\n  }\n],[\n  62,{\n\"fee\": 2000\n  }\n],[\n  63,{\n\"fee\": 2000\n  }\n],[\n  64,{\n\"fee\": 2000\n  }\n],[\n  65,{\n\"fee\": 2000\n  }\n],[\n  66,{\n\"fee\": 2000\n  }\n],[\n  67,{\n\"fee\": 2000\n  }\n],[\n  68,{\n\"fee\": 2000\n  }\n],[\n  69,{\n\"fee\": 2000\n  }\n],[\n  70,{\n\"fee\": 2000\n  }\n],[\n  71,{\n\"fee\": 2000\n  }\n],[\n  72,{\n\"fee\": 2000\n  }\n],[\n  73,{\n\"fee\": 2000\n  }\n],[\n  74,{\n\"fee\": 2000\n  }\n],[\n  75,{\n\"fee\": 2000\n  }\n],[\n  76,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  77,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  78,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  79,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  80,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  81,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  82,{\n\"fee\": 2000\n  }\n],[\n  83,{\n\"fee\": 2000\n  }\n],[\n  84,{\n\"fee\": 2000\n  }\n],[\n  85,{\n\"fee\": 2000\n  }\n],[\n  86,{\n\"fee\": 2000\n  }\n],[\n  87,{\n\"fee\": 2000\n  }\n],[\n  88,{\n\"fee\": 2000\n  }\n],[\n  89,{\n\"fee\": 2000\n  }\n]\n  ],\n  \"scale\": 10000\n},\n\"block_interval\": 5,\n\"maintenance_interval\": 900,\n\"maintenance_skip_slots\": 3,\n\"committee_proposal_review_period\": 1209600,\n\"maximum_transaction_size\": 2048,\n\"maximum_block_size\": 2048000000,\n\"maximum_time_until_expiration\": 86400,\n\"maximum_proposal_lifetime\": 2419200,\n\"maximum_asset_whitelist_authorities\": 10,\n\"maximum_asset_feed_publishers\": 10,\n\"maximum_miner_count\": 1001,\n\"maximum_guard_count\": 15,\n\"minimum_guard_count\": 7,\n\"maximum_authority_membership\": 10,\n\"reserve_percent_of_fee\": 2000,\n\"network_percent_of_fee\": 2000,\n\"lifetime_referrer_percent_of_fee\": 3000,\n\"cashback_vesting_period_seconds\": 31536000,\n\"cashback_vesting_threshold\": 10000,\n\"count_non_member_votes\": true,\n\"allow_non_member_whitelists\": false,\n\"miner_pay_per_block\": 1000,\n\"worker_budget_per_day\": 50000000,\n\"max_predicate_opcode\": 1,\n\"fee_liquidation_threshold\": 10000,\n\"accounts_per_fee_scale\": 1000,\n\"account_fee_scale_bitshifts\": 4,\n\"max_authority_depth\": 2,\n\"min_pay_back_balance\": 50000000,\n\"min_pay_back_balance_other_asset\": [],\n\"extensions\": []\n  },\n  \"initial_accounts\": [{\n  \"name\": \"miner0\",\n  \"owner_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\n  \"active_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner1\",\n  \"owner_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\n  \"active_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner2\",\n  \"owner_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\n  \"active_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner3\",\n  \"owner_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\n  \"active_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner4\",\n  \"owner_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\n  \"active_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner5\",\n  \"owner_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\n  \"active_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner6\",\n  \"owner_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\n  \"active_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner7\",\n  \"owner_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\n  \"active_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner8\",\n  \"owner_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\n  \"active_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner9\",\n  \"owner_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\n  \"active_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner10\",\n  \"owner_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\n  \"active_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner11\",\n  \"owner_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\n  \"active_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner12\",\n  \"owner_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\n  \"active_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner13\",\n  \"owner_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\n  \"active_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner14\",\n  \"owner_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\n  \"active_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner15\",\n  \"owner_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\n  \"active_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner16\",\n  \"owner_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\n  \"active_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner17\",\n  \"owner_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\n  \"active_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner18\",\n  \"owner_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\n  \"active_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner19\",\n  \"owner_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\n  \"active_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner20\",\n  \"owner_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\n  \"active_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner21\",\n  \"owner_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\n  \"active_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner22\",\n  \"owner_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\n  \"active_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner23\",\n  \"owner_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\n  \"active_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner24\",\n  \"owner_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\n  \"active_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard0\",\n  \"owner_key\": \"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\n  \"active_key\": \"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard1\",\n  \"owner_key\": \"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\n  \"active_key\": \"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard2\",\n  \"owner_key\": \"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\n  \"active_key\": \"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard3\",\n  \"owner_key\": \"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\n  \"active_key\": \"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard4\",\n  \"owner_key\": \"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\n  \"active_key\": \"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard5\",\n  \"owner_key\": \"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\n  \"active_key\": \"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard6\",\n  \"owner_key\": \"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\n  \"active_key\": \"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"nathan\",\n  \"owner_key\": \"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\n  \"active_key\": \"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\n  \"is_lifetime_member\": false\n}\n  ],\n  \"initial_assets\": [],\n  \"initial_balances\": [{\n  \"owner\": \"HXFAbAx7yuxt725qSZvfwWqkdCwp9ZnUama\",\n  \"asset_symbol\": \"HX\",\n  \"amount\": \"620000000000000\"\n}\n  ],\n  \"initial_vesting_balances\": [],\n  \"initial_active_miners\": 25,\n  \"initial_miner_candidates\": [{\n  \"owner_name\": \"miner0\",\n  \"block_signing_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\"\n},{\n  \"owner_name\": \"miner1\",\n  \"block_signing_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\"\n},{\n  \"owner_name\": \"miner2\",\n  \"block_signing_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\"\n},{\n  \"owner_name\": \"miner3\",\n  \"block_signing_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\"\n},{\n  \"owner_name\": \"miner4\",\n  \"block_signing_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\"\n},{\n  \"owner_name\": \"miner5\",\n  \"block_signing_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\"\n},{\n  \"owner_name\": \"miner6\",\n  \"block_signing_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\"\n},{\n  \"owner_name\": \"miner7\",\n  \"block_signing_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\"\n},{\n  \"owner_name\": \"miner8\",\n  \"block_signing_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\"\n},{\n  \"owner_name\": \"miner9\",\n  \"block_signing_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\"\n},{\n  \"owner_name\": \"miner10\",\n  \"block_signing_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\"\n},{\n  \"owner_name\": \"miner11\",\n  \"block_signing_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\"\n},{\n  \"owner_name\": \"miner12\",\n  \"block_signing_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\"\n},{\n  \"owner_name\": \"miner13\",\n  \"block_signing_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\"\n},{\n  \"owner_name\": \"miner14\",\n  \"block_signing_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\"\n},{\n  \"owner_name\": \"miner15\",\n  \"block_signing_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\"\n},{\n  \"owner_name\": \"miner16\",\n  \"block_signing_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\"\n},{\n  \"owner_name\": \"miner17\",\n  \"block_signing_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\"\n},{\n  \"owner_name\": \"miner18\",\n  \"block_signing_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\"\n},{\n  \"owner_name\": \"miner19\",\n  \"block_signing_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\"\n},{\n  \"owner_name\": \"miner20\",\n  \"block_signing_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\"\n},{\n  \"owner_name\": \"miner21\",\n  \"block_signing_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\"\n},{\n  \"owner_name\": \"miner22\",\n  \"block_signing_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\"\n},{\n  \"owner_name\": \"miner23\",\n  \"block_signing_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\"\n},{\n  \"owner_name\": \"miner24\",\n  \"block_signing_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\"\n}\n  ],\n  \"initial_guard_candidates\": [{\n  \"owner_name\": \"guard0\"\n},{\n  \"owner_name\": \"guard1\"\n},{\n  \"owner_name\": \"guard2\"\n},{\n  \"owner_name\": \"guard3\"\n},{\n  \"owner_name\": \"guard4\"\n},{\n  \"owner_name\": \"guard5\"\n},{\n  \"owner_name\": \"guard6\"\n}\n  ],\n  \"initial_worker_candidates\": [],\n  \"initial_chain_id\": \"aa34045518f1469a28fa4578240d5f039afa9959c0b95ce3b39674efa691fb21\",\n  \"immutable_parameters\": {\n\"min_guard_count\": 7,\n\"min_miner_count\": 25,\n\"num_special_accounts\": 0,\n\"num_special_assets\": 0\n  }\n}\n\n\n\nGET THE BLOCKCHAIN ID\n\n\nThe blockchain id is a hash of the genesis state. All transaction signatures are only valid for a single blockchain id. So editing the genesis file will change your blockchain id, and make you unable to sync with all existing chains .\n\n\nRun this command:\n\n\nwitness_node --data-dir=data   # to use the default genesis, or\nwitness_node --data-dir=data --genesis-json=my-genesis.json   # your own genesis block\n\n\n\nand when a message like this shows up:\n\n\n3501235ms th_a main.cpp:165 main] Started witness node on a chain with 0 blocks.\n3501235ms th_a main.cpp:166 main] Chain ID is 8b7bd36a146a03d0e5d0a971e286098f41230b209d96f92465cd62bd64294824\n\n\n\n\u2026 it means the initialization is completed. Use ctrl-c to close witness node.\n\n\nAs a result, you should get two items:\n\n\n\n\nA directory named \ndata\n has been created with a file named \nconfig.ini\n located in it.\n\n\nYour blockchain id is now known - it\u2019s displayed in the message above.\n\n\n\n\n**NOTE:Note that your blockchain id will be different than the one used in the above example. Copy this id somewhere as you will be needing it later on.\n\n\nWITNESS CONFIGURATION\n\n\ntrack-address = \"HXFynbZPgLeF5GfMXs9CCuEAreLGWSU4HK6\"\ntrack-address = \"HX7vBsFkAtgmhULMkHNkDVLoSR3kGbEfDvi\"\n\n# Endpoint for P2P node to listen on\n# p2p-endpoint =\n\n# P2P nodes to connect to on startup (may specify multiple times)\n# seed-node =\n\n# JSON array of P2P nodes to connect to on startup\n# seed-nodes =\n\n# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.\n# checkpoint =\n\n# Endpoint for websocket RPC to listen on\n# rpc-endpoint =\n\n# Endpoint for TLS websocket RPC to listen on\n# rpc-tls-endpoint =\n\n# The TLS certificate file for this server\n# server-pem =\n\n# Password for this certificate\n# server-pem-password =\n\n# File to read Genesis State from\ngenesis-json = \"E:\\link_mytest\\genesis.json\"\n\n# Block signing key to use for init mineres, overrides genesis file\n# dbg-init-key =\n\n# JSON file specifying API permissions\napi-access = \"E:\\link_mytest\\api-access.json\"\n\n# Miner in this node would not pack contract trx which gas price to low\n# min_gas_price =\n\n# Enable block production, even if the chain is stale.\nenable-stale-production = true\n\n# Percent of miners (0-99) that must be participating in order to produce blocks\nrequired-participation = false\n\n# ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n\nminer-id = \"1.6.1\"\nminer-id = \"1.6.2\"\nminer-id = \"1.6.3\"\nminer-id = \"1.6.4\"\nminer-id = \"1.6.5\"\nminer-id = \"1.6.6\"\nminer-id = \"1.6.7\"\nminer-id = \"1.6.8\"\nminer-id = \"1.6.9\"\nminer-id = \"1.6.10\"\nminer-id = \"1.6.11\"\nminer-id = \"1.6.12\"\nminer-id = \"1.6.13\"\nminer-id = \"1.6.14\"\nminer-id = \"1.6.15\"\nminer-id = \"1.6.16\"\nminer-id = \"1.6.17\"\nminer-id = \"1.6.18\"\nminer-id = \"1.6.19\"\nminer-id = \"1.6.20\"\nminer-id = \"1.6.21\"\nminer-id = \"1.6.22\"\nminer-id = \"1.6.23\"\nminer-id = \"1.6.24\"\nminer-id = \"1.6.25\"\n\n# Tuple of [PublicKey, WIF private key] (just append)\nprivate-key = [[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvtXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]]\n\ncrosschain-ip = 117.78.44.37\n\ncrosschain-port = 5005\n\n#  chain-type for crosschains  (e.g. [\"BTC\"], quotes are required,  specify one times)\nchain-type = [\"BTC\",\"LTC\",\"UB\",\"HC\"]\n\n# Account ID to track history for (may specify multiple times)\n# track-account =\n\n# Keep only those operations in memory that are related to account history tracking\n# partial-operations =\n\n# Maximum number of operations per account will be kept in memory\n# max-ops-per-account =\n\n# address to track history for (may specify multiple times)\n# track-address =\n\n# guard-id =\n\n# declare an appender named \"stderr\" that writes messages to the console\n[log.console_appender.stderr]\nstream=std_error\n\n# declare an appender named \"p2p\" that writes messages to p2p.log\n[log.file_appender.p2p]\nfilename=logs/p2p/p2p.log\n# filename can be absolute or relative to this config file\n\n# route any messages logged to the default logger to the \"stderr\" logger we\n# declared above, if they are info level are higher\n[logger.default]\nlevel=info\nappenders=stderr\n\n# route messages sent to the \"p2p\" logger to the p2p appender declared above\n[logger.p2p]\nlevel=info\nappenders=p2p\n\n\n\nSTART WITNESS-NODE\n\n\nwitness_node --data-dir=data\n\n\n\nCLI USAGE\n\n\nWe are now ready to connect the CLI to your testnet witness node. Keep your witness node running and in another Command Prompt window run this command:\n\n\ncli_wallet --wallet-file=my-wallet.json --chain-id=8b7bd36a146a03d0e5d0a971e286098f41230b209d96f92465cd62bd64294824 --server-rpc-endpoint=ws://127.0.0.1:8090\n\n\n\n**NOTE:\nMake sure to replace the above blockchain id 8b7bd36a\n4294824 with your own blockchain id. The blockchain id passed to the CLI needs to match the id generated and used by the witness node.\n\n\nIf you get the set_password prompt, it means your CLI has successfully connected to the testnet witness node.\n\n\n\n\nCreate a new wallet\n\n\n\n\nFirst you need to create a new password for your wallet. This password is used to encrypt all the private keys in the wallet. For this tutorial we will use the password \nsupersecret\n but obviously you are free to come up with your own combination of letters and numbers. Use this command to create the password:\n\n\n set_password supersecret\n\n\n\nNow you can unlock the newly created wallet:\n\n\nunlock supersecret\n\n\n\n\n\nImport Miner/Guard accounts.\n\n\n\n\nIf you want to produce block,please import miner account in \n\"initial_accounts\"\n (\naccount name in my-genesis.json,private key in config.ini\n) of my-genesis.json file.\n\n\n\n\nGet HX For Testing\n\n\n\n\nOn Hyper Exchange chain, balance is kept in account. To import an account into your wallet, all you need to know is its name and its private key.  We will now import into the wallet an account called \nnathan\n using the import_key command:\n\n\nimport_key nathan 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\n\n\n\n**NOTE:\nNote that \nnathan\n happens to be the account name defined in the genesis file. If you had edited your \nmy-genesies.json\n file just after it was created, you could have put a different name there. Also, note that \n5KQwrPbwdL...P79zkvFD3\n is the private key defined in the \nconfig.ini\n file.\n\n\nNow you have got enough HX, If you want to use HX in another account, please transfer from account \nnathan\n to another account.", 
            "title": "Using Private Testnet"
        }, 
        {
            "location": "/getting-started/private-testnet/#private-testnet-using-guide", 
            "text": "Last updated for v1.0.7  In this page. We mainly talk about   private testnet  that every developer could easily deploy .", 
            "title": "Private Testnet Using Guide"
        }, 
        {
            "location": "/getting-started/private-testnet/#prerequisites", 
            "text": "We assume that you have both  witness_node  and  cli_wallet  already compliled (or downloaded from the offical respository).you have deployed hx middleware successfully.if not yet,please refer  Middleware Startup  to deploy.", 
            "title": "PREREQUISITES"
        }, 
        {
            "location": "/getting-started/private-testnet/#folder-structure", 
            "text": "Create a new folder (we will refer to it as  [Testnet-Home] ) in any location you like and copy  witness_node  and  cli_wallet  there. The  [Testnet-Home]  folder will contain all files and folders related to the testnet.  Open a Command Prompt window and switch the current directory to  [Testnet-Home] .", 
            "title": "FOLDER STRUCTURE"
        }, 
        {
            "location": "/getting-started/private-testnet/#the-genesis-file", 
            "text": "The genesis file defines the initial state of the network.Please find it as below:   Default genesis   The graphene code base has a default genesis block integrated that has all witnesses, committee members and funds and a single account called  nathan  available from a single private key:  5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3  Read below to find how to use this key, and go ahead to learn about how to define your own genesis file   Customization of the genesis file   We create a new genesis json file named my-genesis.json by running this command:  $ witness_node --create-genesis-json=my-genesis.json  The  my-genesis.json  file will be created in the  [Testnet-Home]  folder. Once this task is done, the witness node will terminate on its own.  If you want to customize the network\u2019s initial state, edit the newly created  my-genesis.json  file. This allows you to control things such as:   The accounts that exist at genesis, their names and public keys  Assets and their initial status (including core asset)  Initial values of chain parameters (including fees)   Example File:  {\n  \"initial_timestamp\": \"2018-07-31T02:35:00\",\n  \"max_core_supply\": \"840000000000000\",\n  \"initial_parameters\": {\n\"current_fees\": {\n  \"parameters\": [[\n  0,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  1,{\n\"fee\": 500\n  }\n],[\n  2,{\n\"fee\": 0\n  }\n],[\n  3,{\n\"fee\": 2000\n  }\n],[\n  4,{\n\"fee\": 0\n  }\n],[\n  5,{\n\"basic_fee\": 500000,\n\"premium_fee\": 200000,\n\"price_per_kbyte\": 100\n  }\n],[\n  6,{\n\"fee\": 200000000,\n\"price_per_kbyte\": 100\n  }\n],[\n  7,{\n\"fee\": 300000\n  }\n],[\n  8,{\n\"membership_annual_fee\": 200000,\n\"membership_lifetime_fee\": 1000000\n  }\n],[\n  9,{\n\"fee\": 50000\n  }\n],[\n  10,{\n\"fee\": 50000\n  }\n],[\n  11,{\n\"fee\": 50000\n  }\n],[\n  12,{\n\"fee\": 50000\n  }\n],[\n  13,{\n\"symbol3\": 50000000,\n\"symbol4\": 30000000,\n\"long_symbol\": 500000,\n\"price_per_kbyte\": 10\n  }\n],[\n  14,{\n\"fee\": 50000,\n\"price_per_kbyte\": 10\n  }\n],[\n  15,{\n\"fee\": 50000\n  }\n],[\n  16,{\n\"fee\": 50000\n  }\n],[\n  17,{\n\"fee\": 2000,\n\"price_per_kbyte\": 100\n  }\n],[\n  18,{\n\"fee\": 2000\n  }\n],[\n  19,{\n\"fee\": 100\n  }\n],[\n  20,{\n\"fee\": 10000\n  }\n],[\n  21,{\n\"fee\": 50000\n  }\n],[\n  22,{\n\"fee\": 100\n  }\n],[\n  23,{\n\"fee\": 100\n  }\n],[\n  24,{\n\"fee\": 400000\n  }\n],[\n  25,{\n\"fee\": 2000\n  }\n],[\n  26,{\n\"fee\": 0\n  }\n],[\n  27,{\n\"fee\": 0\n  }\n],[\n  28,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  29,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  30,{\n\"fee\": 100\n  }\n],[\n  31,{\n\"fee\": 100\n  }\n],[\n  32,{\n\"fee\": 100\n  }\n],[\n  33,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  34,{\n\"fee\": 0\n  }\n],[\n  35,{\n\"fee\": 300000\n  }\n],[\n  36,{\n\"fee\": 2000\n  }\n],[\n  37,{\n\"fee\": 100\n  }\n],[\n  38,{\n\"fee\": 350000\n  }\n],[\n  39,{\n\"fee\": 100\n  }\n],[\n  40,{\n\"fee\": 2000\n  }\n],[\n  41,{\n\"fee\": 450000\n  }\n],[\n  42,{\n\"fee\": 100,\n\"price_per_kbyte\": 10\n  }\n],[\n  43,{\n\"fee\": 100\n  }\n],[\n  44,{}\n],[\n  45,{\n\"fee\": 2000,\n\"price_per_kbyte\": 10\n  }\n],[\n  46,{\n\"fee\": 2000\n  }\n],[\n  47,{\n\"fee\": 2000\n  }\n],[\n  48,{\n\"fee\": 500,\n\"price_per_output\": 500\n  }\n],[\n  49,{\n\"fee\": 500,\n\"price_per_output\": 500\n  }\n],[\n  50,{\n\"fee\": 500\n  }\n],[\n  51,{}\n],[\n  52,{\n\"fee\": 2000\n  }\n],[\n  53,{}\n],[\n  54,{\n\"fee\": 100\n  }\n],[\n  55,{\n\"fee\": 2000\n  }\n],[\n  56,{\n\"fee\": 2000\n  }\n],[\n  57,{\n\"fee\": 2000\n  }\n],[\n  58,{\n\"fee\": 2000\n  }\n],[\n  59,{\n\"fee\": 2000\n  }\n],[\n  60,{\n\"fee\": 2000\n  }\n],[\n  61,{\n\"fee\": 2000\n  }\n],[\n  62,{\n\"fee\": 2000\n  }\n],[\n  63,{\n\"fee\": 2000\n  }\n],[\n  64,{\n\"fee\": 2000\n  }\n],[\n  65,{\n\"fee\": 2000\n  }\n],[\n  66,{\n\"fee\": 2000\n  }\n],[\n  67,{\n\"fee\": 2000\n  }\n],[\n  68,{\n\"fee\": 2000\n  }\n],[\n  69,{\n\"fee\": 2000\n  }\n],[\n  70,{\n\"fee\": 2000\n  }\n],[\n  71,{\n\"fee\": 2000\n  }\n],[\n  72,{\n\"fee\": 2000\n  }\n],[\n  73,{\n\"fee\": 2000\n  }\n],[\n  74,{\n\"fee\": 2000\n  }\n],[\n  75,{\n\"fee\": 2000\n  }\n],[\n  76,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  77,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  78,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  79,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  80,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  81,{\n\"fee\": 2000,\n\"price_per_kbyte\": 1000\n  }\n],[\n  82,{\n\"fee\": 2000\n  }\n],[\n  83,{\n\"fee\": 2000\n  }\n],[\n  84,{\n\"fee\": 2000\n  }\n],[\n  85,{\n\"fee\": 2000\n  }\n],[\n  86,{\n\"fee\": 2000\n  }\n],[\n  87,{\n\"fee\": 2000\n  }\n],[\n  88,{\n\"fee\": 2000\n  }\n],[\n  89,{\n\"fee\": 2000\n  }\n]\n  ],\n  \"scale\": 10000\n},\n\"block_interval\": 5,\n\"maintenance_interval\": 900,\n\"maintenance_skip_slots\": 3,\n\"committee_proposal_review_period\": 1209600,\n\"maximum_transaction_size\": 2048,\n\"maximum_block_size\": 2048000000,\n\"maximum_time_until_expiration\": 86400,\n\"maximum_proposal_lifetime\": 2419200,\n\"maximum_asset_whitelist_authorities\": 10,\n\"maximum_asset_feed_publishers\": 10,\n\"maximum_miner_count\": 1001,\n\"maximum_guard_count\": 15,\n\"minimum_guard_count\": 7,\n\"maximum_authority_membership\": 10,\n\"reserve_percent_of_fee\": 2000,\n\"network_percent_of_fee\": 2000,\n\"lifetime_referrer_percent_of_fee\": 3000,\n\"cashback_vesting_period_seconds\": 31536000,\n\"cashback_vesting_threshold\": 10000,\n\"count_non_member_votes\": true,\n\"allow_non_member_whitelists\": false,\n\"miner_pay_per_block\": 1000,\n\"worker_budget_per_day\": 50000000,\n\"max_predicate_opcode\": 1,\n\"fee_liquidation_threshold\": 10000,\n\"accounts_per_fee_scale\": 1000,\n\"account_fee_scale_bitshifts\": 4,\n\"max_authority_depth\": 2,\n\"min_pay_back_balance\": 50000000,\n\"min_pay_back_balance_other_asset\": [],\n\"extensions\": []\n  },\n  \"initial_accounts\": [{\n  \"name\": \"miner0\",\n  \"owner_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\n  \"active_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner1\",\n  \"owner_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\n  \"active_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner2\",\n  \"owner_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\n  \"active_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner3\",\n  \"owner_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\n  \"active_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner4\",\n  \"owner_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\n  \"active_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner5\",\n  \"owner_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\n  \"active_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner6\",\n  \"owner_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\n  \"active_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner7\",\n  \"owner_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\n  \"active_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner8\",\n  \"owner_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\n  \"active_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner9\",\n  \"owner_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\n  \"active_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner10\",\n  \"owner_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\n  \"active_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner11\",\n  \"owner_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\n  \"active_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner12\",\n  \"owner_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\n  \"active_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner13\",\n  \"owner_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\n  \"active_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner14\",\n  \"owner_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\n  \"active_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner15\",\n  \"owner_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\n  \"active_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner16\",\n  \"owner_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\n  \"active_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner17\",\n  \"owner_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\n  \"active_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner18\",\n  \"owner_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\n  \"active_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner19\",\n  \"owner_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\n  \"active_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner20\",\n  \"owner_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\n  \"active_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner21\",\n  \"owner_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\n  \"active_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner22\",\n  \"owner_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\n  \"active_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner23\",\n  \"owner_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\n  \"active_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"miner24\",\n  \"owner_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\n  \"active_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard0\",\n  \"owner_key\": \"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\n  \"active_key\": \"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard1\",\n  \"owner_key\": \"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\n  \"active_key\": \"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard2\",\n  \"owner_key\": \"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\n  \"active_key\": \"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard3\",\n  \"owner_key\": \"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\n  \"active_key\": \"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard4\",\n  \"owner_key\": \"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\n  \"active_key\": \"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard5\",\n  \"owner_key\": \"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\n  \"active_key\": \"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"guard6\",\n  \"owner_key\": \"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\n  \"active_key\": \"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\n  \"is_lifetime_member\": true\n},{\n  \"name\": \"nathan\",\n  \"owner_key\": \"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\n  \"active_key\": \"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\n  \"is_lifetime_member\": false\n}\n  ],\n  \"initial_assets\": [],\n  \"initial_balances\": [{\n  \"owner\": \"HXFAbAx7yuxt725qSZvfwWqkdCwp9ZnUama\",\n  \"asset_symbol\": \"HX\",\n  \"amount\": \"620000000000000\"\n}\n  ],\n  \"initial_vesting_balances\": [],\n  \"initial_active_miners\": 25,\n  \"initial_miner_candidates\": [{\n  \"owner_name\": \"miner0\",\n  \"block_signing_key\": \"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\"\n},{\n  \"owner_name\": \"miner1\",\n  \"block_signing_key\": \"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\"\n},{\n  \"owner_name\": \"miner2\",\n  \"block_signing_key\": \"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\"\n},{\n  \"owner_name\": \"miner3\",\n  \"block_signing_key\": \"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\"\n},{\n  \"owner_name\": \"miner4\",\n  \"block_signing_key\": \"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\"\n},{\n  \"owner_name\": \"miner5\",\n  \"block_signing_key\": \"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\"\n},{\n  \"owner_name\": \"miner6\",\n  \"block_signing_key\": \"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\"\n},{\n  \"owner_name\": \"miner7\",\n  \"block_signing_key\": \"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\"\n},{\n  \"owner_name\": \"miner8\",\n  \"block_signing_key\": \"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\"\n},{\n  \"owner_name\": \"miner9\",\n  \"block_signing_key\": \"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\"\n},{\n  \"owner_name\": \"miner10\",\n  \"block_signing_key\": \"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\"\n},{\n  \"owner_name\": \"miner11\",\n  \"block_signing_key\": \"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\"\n},{\n  \"owner_name\": \"miner12\",\n  \"block_signing_key\": \"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\"\n},{\n  \"owner_name\": \"miner13\",\n  \"block_signing_key\": \"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\"\n},{\n  \"owner_name\": \"miner14\",\n  \"block_signing_key\": \"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\"\n},{\n  \"owner_name\": \"miner15\",\n  \"block_signing_key\": \"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\"\n},{\n  \"owner_name\": \"miner16\",\n  \"block_signing_key\": \"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\"\n},{\n  \"owner_name\": \"miner17\",\n  \"block_signing_key\": \"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\"\n},{\n  \"owner_name\": \"miner18\",\n  \"block_signing_key\": \"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\"\n},{\n  \"owner_name\": \"miner19\",\n  \"block_signing_key\": \"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\"\n},{\n  \"owner_name\": \"miner20\",\n  \"block_signing_key\": \"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\"\n},{\n  \"owner_name\": \"miner21\",\n  \"block_signing_key\": \"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\"\n},{\n  \"owner_name\": \"miner22\",\n  \"block_signing_key\": \"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\"\n},{\n  \"owner_name\": \"miner23\",\n  \"block_signing_key\": \"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\"\n},{\n  \"owner_name\": \"miner24\",\n  \"block_signing_key\": \"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\"\n}\n  ],\n  \"initial_guard_candidates\": [{\n  \"owner_name\": \"guard0\"\n},{\n  \"owner_name\": \"guard1\"\n},{\n  \"owner_name\": \"guard2\"\n},{\n  \"owner_name\": \"guard3\"\n},{\n  \"owner_name\": \"guard4\"\n},{\n  \"owner_name\": \"guard5\"\n},{\n  \"owner_name\": \"guard6\"\n}\n  ],\n  \"initial_worker_candidates\": [],\n  \"initial_chain_id\": \"aa34045518f1469a28fa4578240d5f039afa9959c0b95ce3b39674efa691fb21\",\n  \"immutable_parameters\": {\n\"min_guard_count\": 7,\n\"min_miner_count\": 25,\n\"num_special_accounts\": 0,\n\"num_special_assets\": 0\n  }\n}", 
            "title": "THE GENESIS FILE"
        }, 
        {
            "location": "/getting-started/private-testnet/#get-the-blockchain-id", 
            "text": "The blockchain id is a hash of the genesis state. All transaction signatures are only valid for a single blockchain id. So editing the genesis file will change your blockchain id, and make you unable to sync with all existing chains .  Run this command:  witness_node --data-dir=data   # to use the default genesis, or\nwitness_node --data-dir=data --genesis-json=my-genesis.json   # your own genesis block  and when a message like this shows up:  3501235ms th_a main.cpp:165 main] Started witness node on a chain with 0 blocks.\n3501235ms th_a main.cpp:166 main] Chain ID is 8b7bd36a146a03d0e5d0a971e286098f41230b209d96f92465cd62bd64294824  \u2026 it means the initialization is completed. Use ctrl-c to close witness node.  As a result, you should get two items:   A directory named  data  has been created with a file named  config.ini  located in it.  Your blockchain id is now known - it\u2019s displayed in the message above.   **NOTE:Note that your blockchain id will be different than the one used in the above example. Copy this id somewhere as you will be needing it later on.", 
            "title": "GET THE BLOCKCHAIN ID"
        }, 
        {
            "location": "/getting-started/private-testnet/#witness-configuration", 
            "text": "track-address = \"HXFynbZPgLeF5GfMXs9CCuEAreLGWSU4HK6\"\ntrack-address = \"HX7vBsFkAtgmhULMkHNkDVLoSR3kGbEfDvi\"\n\n# Endpoint for P2P node to listen on\n# p2p-endpoint =\n\n# P2P nodes to connect to on startup (may specify multiple times)\n# seed-node =\n\n# JSON array of P2P nodes to connect to on startup\n# seed-nodes =\n\n# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.\n# checkpoint =\n\n# Endpoint for websocket RPC to listen on\n# rpc-endpoint =\n\n# Endpoint for TLS websocket RPC to listen on\n# rpc-tls-endpoint =\n\n# The TLS certificate file for this server\n# server-pem =\n\n# Password for this certificate\n# server-pem-password =\n\n# File to read Genesis State from\ngenesis-json = \"E:\\link_mytest\\genesis.json\"\n\n# Block signing key to use for init mineres, overrides genesis file\n# dbg-init-key =\n\n# JSON file specifying API permissions\napi-access = \"E:\\link_mytest\\api-access.json\"\n\n# Miner in this node would not pack contract trx which gas price to low\n# min_gas_price =\n\n# Enable block production, even if the chain is stale.\nenable-stale-production = true\n\n# Percent of miners (0-99) that must be participating in order to produce blocks\nrequired-participation = false\n\n# ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n\nminer-id = \"1.6.1\"\nminer-id = \"1.6.2\"\nminer-id = \"1.6.3\"\nminer-id = \"1.6.4\"\nminer-id = \"1.6.5\"\nminer-id = \"1.6.6\"\nminer-id = \"1.6.7\"\nminer-id = \"1.6.8\"\nminer-id = \"1.6.9\"\nminer-id = \"1.6.10\"\nminer-id = \"1.6.11\"\nminer-id = \"1.6.12\"\nminer-id = \"1.6.13\"\nminer-id = \"1.6.14\"\nminer-id = \"1.6.15\"\nminer-id = \"1.6.16\"\nminer-id = \"1.6.17\"\nminer-id = \"1.6.18\"\nminer-id = \"1.6.19\"\nminer-id = \"1.6.20\"\nminer-id = \"1.6.21\"\nminer-id = \"1.6.22\"\nminer-id = \"1.6.23\"\nminer-id = \"1.6.24\"\nminer-id = \"1.6.25\"\n\n# Tuple of [PublicKey, WIF private key] (just append)\nprivate-key = [[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvtXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]]\n\ncrosschain-ip = 117.78.44.37\n\ncrosschain-port = 5005\n\n#  chain-type for crosschains  (e.g. [\"BTC\"], quotes are required,  specify one times)\nchain-type = [\"BTC\",\"LTC\",\"UB\",\"HC\"]\n\n# Account ID to track history for (may specify multiple times)\n# track-account =\n\n# Keep only those operations in memory that are related to account history tracking\n# partial-operations =\n\n# Maximum number of operations per account will be kept in memory\n# max-ops-per-account =\n\n# address to track history for (may specify multiple times)\n# track-address =\n\n# guard-id =\n\n# declare an appender named \"stderr\" that writes messages to the console\n[log.console_appender.stderr]\nstream=std_error\n\n# declare an appender named \"p2p\" that writes messages to p2p.log\n[log.file_appender.p2p]\nfilename=logs/p2p/p2p.log\n# filename can be absolute or relative to this config file\n\n# route any messages logged to the default logger to the \"stderr\" logger we\n# declared above, if they are info level are higher\n[logger.default]\nlevel=info\nappenders=stderr\n\n# route messages sent to the \"p2p\" logger to the p2p appender declared above\n[logger.p2p]\nlevel=info\nappenders=p2p", 
            "title": "WITNESS CONFIGURATION"
        }, 
        {
            "location": "/getting-started/private-testnet/#start-witness-node", 
            "text": "witness_node --data-dir=data", 
            "title": "START WITNESS-NODE"
        }, 
        {
            "location": "/getting-started/private-testnet/#cli-usage", 
            "text": "We are now ready to connect the CLI to your testnet witness node. Keep your witness node running and in another Command Prompt window run this command:  cli_wallet --wallet-file=my-wallet.json --chain-id=8b7bd36a146a03d0e5d0a971e286098f41230b209d96f92465cd62bd64294824 --server-rpc-endpoint=ws://127.0.0.1:8090  **NOTE:\nMake sure to replace the above blockchain id 8b7bd36a 4294824 with your own blockchain id. The blockchain id passed to the CLI needs to match the id generated and used by the witness node.  If you get the set_password prompt, it means your CLI has successfully connected to the testnet witness node.   Create a new wallet   First you need to create a new password for your wallet. This password is used to encrypt all the private keys in the wallet. For this tutorial we will use the password  supersecret  but obviously you are free to come up with your own combination of letters and numbers. Use this command to create the password:   set_password supersecret  Now you can unlock the newly created wallet:  unlock supersecret   Import Miner/Guard accounts.   If you want to produce block,please import miner account in  \"initial_accounts\"  ( account name in my-genesis.json,private key in config.ini ) of my-genesis.json file.   Get HX For Testing   On Hyper Exchange chain, balance is kept in account. To import an account into your wallet, all you need to know is its name and its private key.  We will now import into the wallet an account called  nathan  using the import_key command:  import_key nathan 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3  **NOTE:\nNote that  nathan  happens to be the account name defined in the genesis file. If you had edited your  my-genesies.json  file just after it was created, you could have put a different name there. Also, note that  5KQwrPbwdL...P79zkvFD3  is the private key defined in the  config.ini  file.  Now you have got enough HX, If you want to use HX in another account, please transfer from account  nathan  to another account.", 
            "title": "CLI USAGE"
        }, 
        {
            "location": "/wallets/hxindicator-setup/", 
            "text": "HyperExchange Indicator Setup Guide\n\n\nLast updated for v1.0.7.\n\n\n\n\nHXIndicator\n is a graphical user interface for HyperExchange wallet. When this application launches, it automatically starts its own instance of the command line tools \nhx_node\n and \nhx_client\n in the background.\n\n\n\n\nBlockchain Download\n\n\nHXIndicator needs to download a full copy of the HyperExchange blockchain before it can be used. This means that maybe a large download must be completed and a large amount of storage space must be be available on the PC where Hyperexchange is intalled.\n\n\nReserve enough disk space please.\n\n\n\n\n\n\nDownload and Install\n\n\nThe latest version of HXIndicator can be downloaded from official website\nhttp://www.hx.cash/\n.\n\n\n\n\nWindows\n\n\n\n\n\n\n\n\nDownload the Windows installer \nHXIndicator.exe\n.\n\n\n\n\n\n\nDouble click the installer and follow the instructions. This will install and automatically start up hx_node to download the HyperExchange blockchain and set up your wallet.\n\n\n\n\n\n\nPlease adds a shortcut to HyperExchange on your desktop to make it for easier to find next time.\n\n\n\n\n\n\n\n\nmacOS\n\n\n\n\n\n\n\n\nDownload the \nHXIndicator.dmg\n file.\n\n\n\n\n\n\nDouble click the \nHXIndicator.dmg\n file .\n\n\n\n\n\n\nDrag the HXIndicator into the link to your Applications folder within the disk image.\n\n\n\n\n\n\n\n\nLinux\n\n\n\n\nNot support now.\n\n\n\n\nOpen and Set Up HXIndicator on Windows/MAC OS\n\n\nOpening HXIndicator for the first time will display the following screen:\n\n\n\n\n\n\nThe default path is:%AppData%\\HXIndicator_1.1.0\\chaindata,you can select a path that you want to store the chaindata,make sure that path has enough disk space.\n\n\n\n\nThen click \nNext\n.\n\n\nSelect \nCreateWallet\n(If you are using a previously backed wallet file, select \nImportWallet\n).\n\n\n\n\nIf you select \nImportWallet\n,select a \nwallet.json\n file from your local path,after loading,input the password of this wallet,will display as below:\n\n\n\n\nThen click \nNext\n,after \nLOADING\n,Please setup the password.\n\n\n\n\nThen click \nNew Wallet\n,will display the main interface.\n\n\n\n\nIn the lower right corner of the interface,show the connection number and blcok number.\n\n\n\n\nIn the lower left corner of the interface,after click \n,list \nSetting\n/Lock/Console/Help\n\n\n\n\nSetting:set language and other parameter:\n\n\n\n\n\n\n\n\nSetting:Change password, View the default data path and configuration file path:\n\n\n\n\n\n\n\n\nSetting:Account \ndelete\n/\nexport\n,\nBackup wallet\n:\n\n\n\n\n\n\n\n\nLock:after click lock,the wallet will change to lock status:\n\n\n\n\n\n\n\n\nConsole:you can excute some commands here,such as,excute command \nhelp\n will show all commands that you can call:\n\n\n\n\n\n\n\n\nHelp:include \nAbout Us\n/\nUpdate\n, You can see if it\ns the latest version and automatically upgrade\uff1a\n\n\n\n\n\n\nTroubleshooting\n\n\nHXIndicator will not start!\n\n\nHXIndicator closed due to an error. Check HXIndicator logs\nand contact support if the issue persists.\n\n\n\n\nWhere does HyperExchange store data/write log files?\n\n\nHyperExchange stores the blockchain, your wallet, log files and its own configuration files all in a single directory. A different directory is used depending on the operating system:\n\n\n\n\n\n\n\n\nOS\n\n\nHyperExchange data directory\n\n\n\n\n\n\n\n\n\n\nWindows\n\n\n%appdata%\\HXIndicator_1.1.0\\chaindata\n\n\n\n\n\n\nmacOS\n\n\n~\\Library\\Application Support\\HXIndicator_1.1.0\\chaindata/", 
            "title": "HXIndicator Setup"
        }, 
        {
            "location": "/wallets/hxindicator-setup/#hyperexchange-indicator-setup-guide", 
            "text": "Last updated for v1.0.7.   HXIndicator  is a graphical user interface for HyperExchange wallet. When this application launches, it automatically starts its own instance of the command line tools  hx_node  and  hx_client  in the background.   Blockchain Download  HXIndicator needs to download a full copy of the HyperExchange blockchain before it can be used. This means that maybe a large download must be completed and a large amount of storage space must be be available on the PC where Hyperexchange is intalled.  Reserve enough disk space please.", 
            "title": "HyperExchange Indicator Setup Guide"
        }, 
        {
            "location": "/wallets/hxindicator-setup/#download-and-install", 
            "text": "The latest version of HXIndicator can be downloaded from official website http://www.hx.cash/ .   Windows     Download the Windows installer  HXIndicator.exe .    Double click the installer and follow the instructions. This will install and automatically start up hx_node to download the HyperExchange blockchain and set up your wallet.    Please adds a shortcut to HyperExchange on your desktop to make it for easier to find next time.     macOS     Download the  HXIndicator.dmg  file.    Double click the  HXIndicator.dmg  file .    Drag the HXIndicator into the link to your Applications folder within the disk image.     Linux   Not support now.", 
            "title": "Download and Install"
        }, 
        {
            "location": "/wallets/hxindicator-setup/#open-and-set-up-hxindicator-on-windowsmac-os", 
            "text": "Opening HXIndicator for the first time will display the following screen:    The default path is:%AppData%\\HXIndicator_1.1.0\\chaindata,you can select a path that you want to store the chaindata,make sure that path has enough disk space.   Then click  Next .  Select  CreateWallet (If you are using a previously backed wallet file, select  ImportWallet ).   If you select  ImportWallet ,select a  wallet.json  file from your local path,after loading,input the password of this wallet,will display as below:   Then click  Next ,after  LOADING ,Please setup the password.   Then click  New Wallet ,will display the main interface.   In the lower right corner of the interface,show the connection number and blcok number.   In the lower left corner of the interface,after click  ,list  Setting /Lock/Console/Help   Setting:set language and other parameter:     Setting:Change password, View the default data path and configuration file path:     Setting:Account  delete / export , Backup wallet :     Lock:after click lock,the wallet will change to lock status:     Console:you can excute some commands here,such as,excute command  help  will show all commands that you can call:     Help:include  About Us / Update , You can see if it s the latest version and automatically upgrade\uff1a", 
            "title": "Open and Set Up HXIndicator on Windows/MAC OS"
        }, 
        {
            "location": "/wallets/hxindicator-setup/#troubleshooting", 
            "text": "HXIndicator will not start!  HXIndicator closed due to an error. Check HXIndicator logs\nand contact support if the issue persists.  Where does HyperExchange store data/write log files?  HyperExchange stores the blockchain, your wallet, log files and its own configuration files all in a single directory. A different directory is used depending on the operating system:     OS  HyperExchange data directory      Windows  %appdata%\\HXIndicator_1.1.0\\chaindata    macOS  ~\\Library\\Application Support\\HXIndicator_1.1.0\\chaindata/", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/wallets/hxindicator-using-account/", 
            "text": "HyperExchange Indicator Using Guide\n\n\nLast updated for v1.0.7.\n\n\nThis guide assumes you have already set up a HyperExchange wallet by using \nHyperExchange Indicator Setup Guide\n.Here is a brief functionality introduction:\nAccount/Contract/Advance/Contacts/Senator/Citizen\n.\n\n\n\n\nAssets\n\n\nAfter login asset page, you can view all assets of the Wallet accounts.\n\n\n\n\n\n\nCreate New Normal Account\n\n\n\n\nClick \nNEW\n to create an account on asset page, enter your account name (it will check whether the registered account already existed on the blockchain).\n\n\n\n\nClick \nOK\n to backup wallet data, select a safe path, and click \nBackup\n.\n\n\n\n\n\n\n\n\nTo be a registered account\n\n\n\n\nIf the user wants to mine, or to be senator or citizen, it must register, click \nREGISTER\n on the asset page, Select the account to be registered, fill in the name to be registered, registration of an account will cost 5HX, the first registration, because there is no HX, need to select \nUse acceptance\n, select one currency, the system will automatically select the cheapest handling fee acceptance;\n\n\n\n\nClick \nOK\n,enter the wallet password.You will see screen as below.\n\n\n\n\n\n\nImport Account\n\n\n\n\nClick \nIMPORT\n to import an account on asset page and enter account name and private key(or select a private key file),then click \nImport\n,Everytime a new account is imported, the wallet will rescan the blockchain data. After that the transactions of the account will be shown.\n\n\n\n\n\n\nTransaction Record\n\n\n\n\nClick \nRECORDS\n,you can insert an address or transaction id,then click search,also you can select \nTYPE\n/\nTIME\n/accout to filter the records.\nIf you want to copy anyone column,click that column,then click copy.\n\n\n\n\n\n\nTransfer\n\n\n\n\nFor the currency with balance,click \ntransfer\n,enter \nFromAccount\n,\nCoin\n,\nToAddress\n,\nAmount\n,\nFee\n,\nMemo\n. Then click \nSend\n to confirm the transaction and enter the wallet password.\n\n\n\n\n\n\n\n\nClick \nRECORD\n to see the transaction just sent.\n\n\n\n\n\n\nDeposit\n\n\n\n\nOn asset page,click \ndeposit\n after balance,Take BTC as example.\nThe first time you recharge BTC, the wallet will generate a recharge address of BTC and bind to your account. It will prompt you to back up the wallet again, because the previous backup did not save the private key of the bitcoin address.\n\n\nNOTE:\n Please back up your wallet again!\n\n\n\n\nUsing a wallet that can transfer BTC to facilitate transaction, and each transaction will be confirmed after 4 blocks produced on BTC chain.\n\n\n\n\nWithdraw\n\n\n\n\nIn asset page,click \nwithdraw\n,input \nWithdraw to address\n,\nAmount\n,then click \nok\n.\n\n\n\n\n\n\nAllot\n\n\n\n\nIn asset page,click \nallot\n,enter allot page, you can see the amount of BTC just deposited, input \nAmount to allot\n,select \nDeposit\n, then click \nok\n,Transfer the BTC to the corresponding HX account.\nIf you do not want to deposit to HX chain, you can choose \nWithdraw\n, which will be transferred to the withdrawal address.\n\n\n\n\nMining\n\n\n\n\nMining Register\n\n\n\n\nOnly registered accounts can participate in mining, Please click \u201cREGISTER\u201d in the mining page\n\n\n\n\nClick \nOK\n,enter the wallet password.You will see screen as below.\n\n\n\n\n\n\nMining Mortgage\n\n\n\n\nAt the bottom of mining page, click \nMORTGAGE\n,select \nMiner to pledge to\n and \nAsset to pledge\n,input \nAmount to pledge\n,then click \nOK\n.\n\n\n\n\n\n\nClick \nMORTGAGE\n will see mortgaged asset,you can \nadd\n or \nforeclose\n anytime.\n\n\n\n\n\n\nMining Income\n\n\n\n\nAfter pledge assets to citizen, partial reward will be sent to you after blocks production. You can find details in mining page by clicking \nINCOME\n.\n\n\n\n\nAfter reaching the minimum amount.Click \nget income\n to receive reward.\n\n\n\n\n\n\nCITIZEN INFO\n\n\n\n\nShow detail information of all citizens on hx blockchain.\n\n\n\n\nBonus", 
            "title": "Account"
        }, 
        {
            "location": "/wallets/hxindicator-using-account/#hyperexchange-indicator-using-guide", 
            "text": "Last updated for v1.0.7.  This guide assumes you have already set up a HyperExchange wallet by using  HyperExchange Indicator Setup Guide .Here is a brief functionality introduction: Account/Contract/Advance/Contacts/Senator/Citizen .", 
            "title": "HyperExchange Indicator Using Guide"
        }, 
        {
            "location": "/wallets/hxindicator-using-account/#assets", 
            "text": "After login asset page, you can view all assets of the Wallet accounts.    Create New Normal Account   Click  NEW  to create an account on asset page, enter your account name (it will check whether the registered account already existed on the blockchain).   Click  OK  to backup wallet data, select a safe path, and click  Backup .     To be a registered account   If the user wants to mine, or to be senator or citizen, it must register, click  REGISTER  on the asset page, Select the account to be registered, fill in the name to be registered, registration of an account will cost 5HX, the first registration, because there is no HX, need to select  Use acceptance , select one currency, the system will automatically select the cheapest handling fee acceptance;   Click  OK ,enter the wallet password.You will see screen as below.    Import Account   Click  IMPORT  to import an account on asset page and enter account name and private key(or select a private key file),then click  Import ,Everytime a new account is imported, the wallet will rescan the blockchain data. After that the transactions of the account will be shown.    Transaction Record   Click  RECORDS ,you can insert an address or transaction id,then click search,also you can select  TYPE / TIME /accout to filter the records.\nIf you want to copy anyone column,click that column,then click copy.    Transfer   For the currency with balance,click  transfer ,enter  FromAccount , Coin , ToAddress , Amount , Fee , Memo . Then click  Send  to confirm the transaction and enter the wallet password.     Click  RECORD  to see the transaction just sent.    Deposit   On asset page,click  deposit  after balance,Take BTC as example.\nThe first time you recharge BTC, the wallet will generate a recharge address of BTC and bind to your account. It will prompt you to back up the wallet again, because the previous backup did not save the private key of the bitcoin address.  NOTE:  Please back up your wallet again!   Using a wallet that can transfer BTC to facilitate transaction, and each transaction will be confirmed after 4 blocks produced on BTC chain.   Withdraw   In asset page,click  withdraw ,input  Withdraw to address , Amount ,then click  ok .    Allot   In asset page,click  allot ,enter allot page, you can see the amount of BTC just deposited, input  Amount to allot ,select  Deposit , then click  ok ,Transfer the BTC to the corresponding HX account.\nIf you do not want to deposit to HX chain, you can choose  Withdraw , which will be transferred to the withdrawal address.", 
            "title": "Assets"
        }, 
        {
            "location": "/wallets/hxindicator-using-account/#mining", 
            "text": "Mining Register   Only registered accounts can participate in mining, Please click \u201cREGISTER\u201d in the mining page   Click  OK ,enter the wallet password.You will see screen as below.    Mining Mortgage   At the bottom of mining page, click  MORTGAGE ,select  Miner to pledge to  and  Asset to pledge ,input  Amount to pledge ,then click  OK .    Click  MORTGAGE  will see mortgaged asset,you can  add  or  foreclose  anytime.    Mining Income   After pledge assets to citizen, partial reward will be sent to you after blocks production. You can find details in mining page by clicking  INCOME .   After reaching the minimum amount.Click  get income  to receive reward.    CITIZEN INFO   Show detail information of all citizens on hx blockchain.", 
            "title": "Mining"
        }, 
        {
            "location": "/wallets/hxindicator-using-account/#bonus", 
            "text": "", 
            "title": "Bonus"
        }, 
        {
            "location": "/wallets/hxindicator-using-contract/", 
            "text": "There are include Exchange Contract and Standard Contract.In Exchange Contract you can buy and sell each other\ns assets;In Standard Contract you can register and deploy standard contract. \n\n\nExchange Contract\n\n\n\n\nOrders Center\n\n\n\n\nAll types of transaction are listed in this page.\n\n\n\n\nIf you want to buy other types of currency,select record,click \nbuy\n,then input \nAmount\n,click \nOk\n.\n\n\n\n\n\n\nMy Orders\n\n\n\n\nClick \nCREATECONTRACT\n to create a new exchange contract.This operation can be done only one time.\n\n\n\n\n\n\nClick \nMY CONTRACT\n,you can see the contract address just has been created.Then click \nDEPOSIT\n,select \nCoin\n which have enough balance,input \nDeposit amount\n and \nPassword\n,click \nOk\n.\n\n\n\n\n\n\n\n\nThis record can be found in \nContract Balance\n.\n\n\n\n\nIf you want to withdraw,please click \nwithdraw\n,then select \nCoin to withdraw\n,input \nAmount to withdraw\n and \nPassword\n,click \nOk\n. \n\n\n\n\nIf you want to exchange your asset to another type of currency,click \nSELL\n,select currency type that you would like to exchange,input \nSellAmount\n/\nBuyAmount\n and \nPassword\n,click \nOk\n.\n\n\n\n\n\n\nThe record can be found in \nMy Orders\n,you can \ncancel\n or \nadd\n anytime.\n\n\nStandard Token Contract\n\n\n\n\nClick \nCREATE TOKEN\n to create a new contract.Select account name,click \nREGISTER\n.\n\n\n\n\n\n\n\n\nInput \nToken Name\n/\nToken Symbol\n/\nTotal supply\n,select \nPrecision\n,click \nINITIALIZE\n.\n\n\n\n\n\n\n\n\nClick \nADD TOKEN\n,input \nContract Address\n,click \nAdd\n,a new token will be added.list in page \nStandard Token\n.\n\n\n\n\n\n\n\n\nClick \nRECORD\n,then select token,will show the transaction id related to this token.", 
            "title": "Contract"
        }, 
        {
            "location": "/wallets/hxindicator-using-contract/#exchange-contract", 
            "text": "Orders Center   All types of transaction are listed in this page.   If you want to buy other types of currency,select record,click  buy ,then input  Amount ,click  Ok .    My Orders   Click  CREATECONTRACT  to create a new exchange contract.This operation can be done only one time.    Click  MY CONTRACT ,you can see the contract address just has been created.Then click  DEPOSIT ,select  Coin  which have enough balance,input  Deposit amount  and  Password ,click  Ok .     This record can be found in  Contract Balance .   If you want to withdraw,please click  withdraw ,then select  Coin to withdraw ,input  Amount to withdraw  and  Password ,click  Ok .    If you want to exchange your asset to another type of currency,click  SELL ,select currency type that you would like to exchange,input  SellAmount / BuyAmount  and  Password ,click  Ok .    The record can be found in  My Orders ,you can  cancel  or  add  anytime.", 
            "title": "Exchange Contract"
        }, 
        {
            "location": "/wallets/hxindicator-using-contract/#standard-token-contract", 
            "text": "Click  CREATE TOKEN  to create a new contract.Select account name,click  REGISTER .     Input  Token Name / Token Symbol / Total supply ,select  Precision ,click  INITIALIZE .     Click  ADD TOKEN ,input  Contract Address ,click  Add ,a new token will be added.list in page  Standard Token .     Click  RECORD ,then select token,will show the transaction id related to this token.", 
            "title": "Standard Token Contract"
        }, 
        {
            "location": "/wallets/hxindicator-using-advance/", 
            "text": "Multi-sign\n\n\n\n\nCreate new m-s address\n\n\n\n\nClick \nNEW M-S\n, then click \nLOCAL ACCOUNT\n, select local account those you want to use to create m-s address, or click \nADD PUBKEY\n to add the public key of other accounts not in your wallet. The maximum number of added local accounts and public keys is 15. Enter \nSIGNATURE REQUIRED\n in the input box and click \nCreate\n.\n\n\n\n\nSelect the account to pay the fee and enter your wallet password:\n\n\n\n\nDisplay the generated multi-signature address:\n\n\n\n\n\n\nAdd an existing multisignature address\n\n\n\n\nClick \nADD M-S\n, enter multiple signature address, and click ok\n\n\n\n\n\n\n\n\nDelete the multi-check address, select the multi-check address to delete, click \nDELETE\n, and then click ok\n\n\n\n\n\n\n\n\nM-S address balance\n\n\n\n\n\n\n\n\nClick \ntransfer\n to initiate a m-s transaction. Enter \nToAddress\n/\nAmount\n. Click \nsend\n, copy the transaction bytecode generated and send it to other users who generate the multi-signature address for signature\n\n\n\n\n\n\n\n\n\n\nM-S INFO, showing details of the multi-signature address\n\n\n\n\n\n\n\n\nSign M-S transaction, Enter the trx bytecode to be signed, will show \nTrx Struct\n, click \nSign\n, then click \nSend\n\n\n\n\n\n\n\n\n\n\nFee Acceptance\n\n\nFor non-HX assets, All fee payments can be done by selecting fee acceptance.click \nFeeAcceptance\n-\nALL\n,will display all fee acceptances on current blockchain.\n\n\n\n\nClick \nRELEASE\n in \nALL\n or \nMY ACCEPTANCE\n to release a fee acceptance,select \nACCOUNT\n and \nACCEPT COIN\n,input \nAMMOUTNT OF HX\n/\nACCEPT AMOUNT\n,click \nOk\n.\n\n\n\n\n\n\nClick \nMY ACCEPTANCE\n,you can see the fee acceptance released by you.", 
            "title": "Advance"
        }, 
        {
            "location": "/wallets/hxindicator-using-advance/#multi-sign", 
            "text": "Create new m-s address   Click  NEW M-S , then click  LOCAL ACCOUNT , select local account those you want to use to create m-s address, or click  ADD PUBKEY  to add the public key of other accounts not in your wallet. The maximum number of added local accounts and public keys is 15. Enter  SIGNATURE REQUIRED  in the input box and click  Create .   Select the account to pay the fee and enter your wallet password:   Display the generated multi-signature address:    Add an existing multisignature address   Click  ADD M-S , enter multiple signature address, and click ok     Delete the multi-check address, select the multi-check address to delete, click  DELETE , and then click ok     M-S address balance     Click  transfer  to initiate a m-s transaction. Enter  ToAddress / Amount . Click  send , copy the transaction bytecode generated and send it to other users who generate the multi-signature address for signature      M-S INFO, showing details of the multi-signature address     Sign M-S transaction, Enter the trx bytecode to be signed, will show  Trx Struct , click  Sign , then click  Send", 
            "title": "Multi-sign"
        }, 
        {
            "location": "/wallets/hxindicator-using-advance/#fee-acceptance", 
            "text": "For non-HX assets, All fee payments can be done by selecting fee acceptance.click  FeeAcceptance - ALL ,will display all fee acceptances on current blockchain.   Click  RELEASE  in  ALL  or  MY ACCEPTANCE  to release a fee acceptance,select  ACCOUNT  and  ACCEPT COIN ,input  AMMOUTNT OF HX / ACCEPT AMOUNT ,click  Ok .    Click  MY ACCEPTANCE ,you can see the fee acceptance released by you.", 
            "title": "Fee Acceptance"
        }, 
        {
            "location": "/wallets/hxindicator-using-contacts/", 
            "text": "Contacts\n\n\nClick the icon on the top right corner to add a contact,input \nADDRESS\n and \nREMARK NAME\n,select \nGROUP\n,click \nOk\n.\n\n\n\n\n\n\nIf you want to edit the group or contact,Select on the left and right click.", 
            "title": "Contacts"
        }, 
        {
            "location": "/wallets/hxindicator-using-contacts/#contacts", 
            "text": "Click the icon on the top right corner to add a contact,input  ADDRESS  and  REMARK NAME ,select  GROUP ,click  Ok .    If you want to edit the group or contact,Select on the left and right click.", 
            "title": "Contacts"
        }, 
        {
            "location": "/wallets/hxindicator-using-senator/", 
            "text": "Account\n\n\n\n\nSenator Account Info\n\n\n\n\nSelect \nCURRENT SENATOR\n,will show information about it.\n\n\n\n\nClick \nNEW SENATOR\n to create a new senator(it spent 10000hx)\uff0cinput account password.\n\n\n\n\n\n\n\n\n\n\nMy Income\n\n\n\n\nCitizen will distribute partial income to senator.\n\n\nProposal\n\n\n\n\nProposal\n\n\n\n\nSelect \nCURRENT SENATOR\n,will show all type proposal of this account.you can click on the \nTYPE(CLICK)\n to see detail infomation about each proposal.\n\n\n\n\nClick \napprove\n or \ndisapprove\n to vote,then the \nVOTING STATE\n and \nMY VOTE\n will change accordingly.\n\n\n\n\n\n\nCold-Hot Trx\n\n\n\n\nClick \nCREATE\n,then select \nCoin\n/\nChoose Account\n/\nhot address to cold\n,input \nAmount\n/\nExpiration(s)\n,click \nOk\n.\n\n\n\n\n\n\nIf are eth or erc20 assets,after \nCONFIRMING\n, need do sign operator,please click \nETH-SIGN\n,,then click \nsign\n\n\n\n\n\n\n\n\nWithdraw\n\n\n\n\nSelect \nCURRENT SENATOR\n,will show all withdraw record of this account.then click \ncheck\n/\nsign\n.\n\n\n\n\nIf are eth or erc20 assets,after \nCONFIRMING\n, need do sign operator,please click \nETH-SIGN\n,then click \nsign\n\n\n\n\n\n\n\n\nMarket Price\n\n\n\n\nSelect \nCURRENT SENATOR\n,will show all currency feed price of this account.if you want to change feed price,click \nfeed\n,then input \nPrice\n.\n\n\n\n\nAdvance\n\n\n\n\nSenator Key Management\n\n\n\n\nShow current all assets\ns HOT and COLD MULTISIG-ADDRESS.If you want to change the hot-cold multi-sign address,steps as below:\n\n Click \nIMPORT\n,import private keys of all guards;\n\n Click \nCHANGE M-A\n,to change HOT-COLD address,then it will create a proposal;\n\n Select just created proposal in \nPROPOSAL\n,to vote;\n\n After voting,click \nupdate\n.\n\n\n\n\nClick \nHISTORY\n,it will display the multi-sign addresses change history.\n\n\n\n\n\n\nAsset Info\n\n\n\n\nShow all assets info.", 
            "title": "Senator"
        }, 
        {
            "location": "/wallets/hxindicator-using-senator/#account", 
            "text": "Senator Account Info   Select  CURRENT SENATOR ,will show information about it.   Click  NEW SENATOR  to create a new senator(it spent 10000hx)\uff0cinput account password.      My Income   Citizen will distribute partial income to senator.", 
            "title": "Account"
        }, 
        {
            "location": "/wallets/hxindicator-using-senator/#proposal", 
            "text": "Proposal   Select  CURRENT SENATOR ,will show all type proposal of this account.you can click on the  TYPE(CLICK)  to see detail infomation about each proposal.   Click  approve  or  disapprove  to vote,then the  VOTING STATE  and  MY VOTE  will change accordingly.    Cold-Hot Trx   Click  CREATE ,then select  Coin / Choose Account / hot address to cold ,input  Amount / Expiration(s) ,click  Ok .    If are eth or erc20 assets,after  CONFIRMING , need do sign operator,please click  ETH-SIGN ,,then click  sign     Withdraw   Select  CURRENT SENATOR ,will show all withdraw record of this account.then click  check / sign .   If are eth or erc20 assets,after  CONFIRMING , need do sign operator,please click  ETH-SIGN ,then click  sign     Market Price   Select  CURRENT SENATOR ,will show all currency feed price of this account.if you want to change feed price,click  feed ,then input  Price .", 
            "title": "Proposal"
        }, 
        {
            "location": "/wallets/hxindicator-using-senator/#advance", 
            "text": "Senator Key Management   Show current all assets s HOT and COLD MULTISIG-ADDRESS.If you want to change the hot-cold multi-sign address,steps as below:  Click  IMPORT ,import private keys of all guards;  Click  CHANGE M-A ,to change HOT-COLD address,then it will create a proposal;  Select just created proposal in  PROPOSAL ,to vote;  After voting,click  update .   Click  HISTORY ,it will display the multi-sign addresses change history.    Asset Info   Show all assets info.", 
            "title": "Advance"
        }, 
        {
            "location": "/wallets/hxindicator-using-citizen/", 
            "text": "Citizen Account Info\n\n\n\n\nCitizen Account Info\n\n\n\n\nSelect a citizen account, will show detail information of this citizen.\n\n\n\n\n\n\nCreate New Citizen\n\n\n\n\nClick botton \nCREATE CITIZEN\n,select an account,click \nOk\n,then input password of the account(it spent 1000HX).\n\n\n\n\n\n\n\n\n\n\nStart Mining\n\n\n\n\nClick \nSTART MINING\n to start mining, then need to restart hx-indicator.\n\n\n\n\n\n\n\n\nChange Fee\n\n\n\n\nClick \nCHANGE FEE\n, select \nAccount\n, input\nChange to(%)\n, click OK.\n\n\n\n\n\n\n\n\nCitizen Proposal\n\n\nSelect \nCURRENT CITIZEN\n,you will find all proposals of this account.\n\n\n\n\nChange Senator Proposal\n\n\nClick \nCHANGE SENATOR\n, select \nProposer\n, select \nNomination List(Three Nomination At Most)\n, it spent 1000 hx at least.", 
            "title": "Citizen"
        }, 
        {
            "location": "/wallets/hxindicator-using-citizen/#citizen-account-info", 
            "text": "Citizen Account Info   Select a citizen account, will show detail information of this citizen.    Create New Citizen   Click botton  CREATE CITIZEN ,select an account,click  Ok ,then input password of the account(it spent 1000HX).      Start Mining   Click  START MINING  to start mining, then need to restart hx-indicator.     Change Fee   Click  CHANGE FEE , select  Account , input Change to(%) , click OK.", 
            "title": "Citizen Account Info"
        }, 
        {
            "location": "/wallets/hxindicator-using-citizen/#citizen-proposal", 
            "text": "Select  CURRENT CITIZEN ,you will find all proposals of this account.   Change Senator Proposal  Click  CHANGE SENATOR , select  Proposer , select  Nomination List(Three Nomination At Most) , it spent 1000 hx at least.", 
            "title": "Citizen Proposal"
        }, 
        {
            "location": "/wallets/hx-building/", 
            "text": "HyperExchange Building Guide\n\n\nLast updated for v1.0.7.\n\n\nBuilding\n\n\nHX-Node\n requires a 64-bit operating system to build\n\n\nHX-Node\n requires a Boost version 1.64.0 or newer than it. Versions earlier than 1.64 are NOT supported. \n\n\n\n\nUbuntu (64-bit) Linux\n\n\nOS X\n\n\nWindows\n\n\n\n\n\n\nBUILD_UBUNTU\n\n\n\n\n\n\n\nUbuntu 16.04 LTS (64-bit) Build and Install Instructions\n\n\n\n\n\n\nThe following dependencies were necessary for a clean install on Ubuntu 16.04 LTS (64-bit):\n\n\nsudo apt-get update\nsudo apt-get install autoconf cmake make automake libtool git libboost-all-dev libssl-dev g++ libcurl4-openssl-dev libleveldb-dev\n\n\n\n\n\nBuild Crosschain Privatekey\n\n\n\n\ngit clone https://github.com/BlockLink/blocklink_crosschain_privatekey\ncd blocklink_crosschain_privatekey\ncmake -DCMAKE_BUILD_TYPE=Release .\nmake\n\n\n\n\n\nBuild Eth Crosschain Privatekey\n\n\n\n\ngit clone https://github.com/BlockLink/eth_crosschain_privatekey.git\ncd eth_crosschain_privatekey/eth_sign/cryptopp/\nmake\ncd ..\ncmake .\nmake\n\n\n\n\n\nBuild HyperExchange Node\n\n\n\n\nAdd path of crosschain privatekey and eth crosschain privatekey, please use the path of blocklink_crosschain_privatekey and eth_crosschain_privatekey in your environment.  \n\n\n`export CROSSCHAIN_PRIVATEKEY_PROJECT=~/blocklink_crosschain_privatekey`\n`export ETH_CROSSCHAIN_PROJECT=~/eth_crosschain_privatekey`\n\n\ngit clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\ngit submodule update --init --recursive\ncmake .\nmake\n\n\n\n\n\nBuilding on OS X\n\n\n\n\n\nHyperExchange Node OS X Build Instructions\n\n\n\n\n1.Install XCode and its command line tools by following the instructions here:\nhttps://guide.macports.org/#installing.xcode\n. In OS X 10.11 (El Capitan) and newer, you will be prompted to install developer tools when running a devloper command in the terminal. This step may not be needed.\n\n\n2.Install Homebrew by following the instructions here: \nhttp://brew.sh/\n\n\n3.Initialize Homebrew:\n\n\nbrew doctor\nbrew update\n\n\n\n4.Install dependencies:\n\n\nbrew install boost cmake git openssl autoconf automake libtool\nbrew link --force openssl\n\n\n\n5.Optional. To support importing Bitcoin wallet files:\n\n\nbrew install berkeley-db\n\n\n\n6.Optional. To use TCMalloc in LevelDB:\n\n\nbrew install google-perftools\n\n\n\n7.Build Crosschain Privatekey\n\n\ngit clone https://github.com/BlockLink/blocklink_crosschain_privatekey\ncd blocklink_crosschain_privatekey\ncmake .\nmake\n\n\n\n8.Build Eth Crosschain Privatekey\n\n\ngit clone https://github.com/BlockLink/eth_crosschain_privatekey.git\ncd eth_crosschain_privatekey/eth_sign/cryptopp/\nmake\ncd ..\ncmake .\nmake\n\n\n\n9.Clone the HyperExchange repository:\n\n\ngit clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\n\n\n\n10.Build HyperExchange:\n\n\nAdd path of crosschain privatekey and eth crosschain privatekey, please use the path of blocklink_crosschain_privatekey and eth_crosschain_privatekey in your environment.  \n\n\n`export CROSSCHAIN_PRIVATEKEY_PROJECT=~/blocklink_crosschain_privatekey`\n`export ETH_CROSSCHAIN_PROJECT=~/eth_crosschain_privatekey`\n\ngit submodule update --init --recursive\ncmake .\nmake\n\n\n\nNotes: As mentioned elsewhere, HyperExchange depends on the third-party libraries \nBoost\n and \nOpenSSL\n. These libraries need to be in certain version ranges. At the moment, Boost needs to be 1.64 or newer than it. OpenSSL needs to be in the 1.0.x range.\n\n\nBoost: You can check which version(s) of boost you have by asking brew:\n\n\nbrew search boost\n\n\n\nTo install another version of Boost (such as 1.64):\n\n\nbrew install boost@1.64\n\n\n\nOpenSSL: You may have an older version of OpenSSL than is required. If so, have brew get the latest:\n\n\nbrew upgrade openssl\n\n\n\nCompiling with these new versions: We must now tell cmake where these libraries are. Instead of the \ncmake .\n mentioned above, we use:\n\n\ncmake -DBOOST_ROOT=/usr/local/opt/boost@1.64 -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl .\n\n\n\nand then proceed with the normal\n\n\nmake\n\n\n\n\n\nBuilding on Windows - Visual Studio 2017\n\n\n\n\n\nPrerequisites\n\n\n\n\n\n\nMicrosoft Visual C++ 2017 Update 1 (the free Express edition will work)\n\n\nIf you have multiple MSVS installation use MSVS Developer console from target version.\n\n\nThis build is for 64bit binaries.\n\n\n\n\n\n\nSet up the directory structure\n\n\n\n\n1.Create a base directory for all projects. I\nm putting everything in D:\\hyperexchange, you can use whatever you like. In several of the batch files and makefiles, this directory will be referred to as \nGRA_ROOT\n:\n\n\nmkdir D:\\hyperexchange\n\n\n\n2.Clone the hyperexchange repository\n\n\nD:\ncd D:\\hyperexchange\ngit clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\ngit submodule update --init --recursive\n\n\n\n3.Download CMake\n\n\nDownload the latest Win32 Zip build CMake from \nhttp://cmake.org/cmake/resources/software.html\n (version 3.12.2 as of this writing). Unzip it to your base directory, which will create a directory that looks something like \nD:\\hyperexchange\\cmake-3.12.2-win64-x64\n. Rename this directory to \nD:\\hyperexchange\\CMake\n.\n\n\nIf you already have CMake installed elsewhere on your system you can use it, but hyperexchange Core has a few batch files that expect it to be in the base directory\ns \nCMake\n subdirectory, so those scripts would need tweaking.\n\n\n4.Boost\n\n\nhyperexchange depends on the Boost libraries version 1.64.0 or newer than it. You can build them from source.\n\n\n\n\n\n\ndownload boost source from \nhttp://www.boost.org/users/download/\n\n\n\n\n\n\nunzip it to the base directory \nD:\\hyperexchange\n.\n\n\n\n\n\n\nThis will create a directory like \nD:\\hyperexchange\\boost_1_64_0\n.\n\n\n\n\n\n\n5.OpenSSL\n\n\nHyperExchange depends on OpenSSL version 1.0.2, and you must build this from source.\n\n\n\n\ndownload OpenSSL source from \nhttp://www.openssl.org/source/\n\n\nUntar it to the base directory \nD:\\hyperexchange\n\n\nthis will create a directory like \nD:\\hyperexchange\\openssl-1.0.2o\n.\n\n\n\n\n6.Crosschain Privatekey\n\n\nHyperExchange depends on libboost, you must build this from source.\n\n\n\n\ndownload Crosschain Privatekey source from \nhttps://github.com/BlockLink/blocklink_crosschain_privatekey\n\n\nUntar it to the base directory \nD:\\hyperexchange\n\n\nthis will create a directory like \nD:\\hyperexchange\\blocklink_crosschain_privatekey\n.\n\n\n\n\n7.Eth Crosschain Privatekey\n\n\nHyperExchange depends on libboost, you must build this from source.\n\n\n\n\ndownload Crosschain Privatekey source from \nhttps://github.com/BlockLink/eth_crosschain_privatekey.git\n\n\nUntar it to the base directory \nD:\\hyperexchange\n,Untar leveldb.rar to the base directory \nD:\\hyperexchange\n too;\n\n\nthis will create a directory like \nD:\\hyperexchange\\eth_crosschain_privatekey\n and \nD:\\hyperexchange\\leveldb\n.\n\n\n\n\nAt the end of this, your base directory should look like this (directory names will be slightly different for the 64bit versions):\n\n\nD:\\hyperexchange\n+- HyperExchange\n+- boost_1_64_0\n+- CMake\n+- openssl-1.0.2o\n+- blocklink_crosschain_privatekey\n+- eth_crosschain_privatekey\n+- leveldb\n\n\n\n\n\nBuild the library dependencies\n\n\n\n\n1.Build OpenSSL DLLs\n\n\nD:\ncd D:\\hyperexchange\\openssl-1.0.2o\nperl Configure VC-WIN64A --prefix=D:\\hyperexchange\\OpenSSL\nms\\do_win64a\nnmake -f ms\\ntdll.mak\nnmake -f ms\\ntdll.mak install\n\n\n\nIf occur error like \nNMAKE : fatal error U1077\n when you excute command \nnmake -f ms\\ntdll.mak\n, please try to use \nVS2013 x64 native tool command prompt\n tool to excute nmake command.\n\n\n2.Build Boost\n\n\nD:\ncd D:\\hyperexchange\\boost_1_64_0\nbootstrap.bat\n.\\b2.exe address-model=64\n\n\n\n3.Build Crosschain Privatekey\n\n\nSet up environment for building:\n\n\nD:\ncd D:\\hyperexchange\\blocklink_crosschain_privatekey\nnotepad setenv_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\n@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset CROSSCHAIN_PRIVATEKEY_PROJECT=%GRA_ROOT%/blocklink_crosschain_privatekey\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%CROSSCHAIN_PRIVATEKEY_PROJECT%;%PATH%\n\necho Setting up VS2017 environment...\ncall \"%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat\" x86_amd64\n\n\n\nIn my PC,VS150COMNTOOLS:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\", please set a correct path of file vcvarsall.bat by your PC.\n\n\nNote keep slash and backslash are consistency with the example\n\n\nThen run\n\n\nsetenv_x64.bat\n\n\n\nBuild\n\n\nD:\ncd D:\\hyperexchange\\blocklink_crosschain_privatekey\nnotepad run_cmake_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\nsetlocal\ncall \"d:\\hyperexchange\\blocklink_crosschain_privatekey\\setenv_x64.bat\"\ncd %GRA_ROOT%\\blocklink_crosschain_privatekey\ncmake-gui -G \"Visual Studio 15\"\n\n\n\nThen run\n\n\nrun_cmake_x64.bat\n\n\n\nThis pops up the cmake gui, but if you\nve used CMake before it will probably be showing the wrong data, so fix that:\n\n\n\n\nWhere is the source code: \nD:/hyperexchange/blocklink_crosschain_privatekey\n\n\nWhere to build the binaries: \nD:/hyperexchange/blocklink_crosschain_privatekey/x64\n\n\n\n\nThen hit Configure. It may ask you to specify a generator for this project; if it does, choose Visual Studio 15 2017 Win64 for 64 bit builds and select Use default native compilers. Look through the output and fix any errors. Then hit Generate.\n\n\nLaunch Visual Studio and load D:\\hyperexchange\\blocklink_crosschain_privatekey\\x64\\blocklink_crosschain_privatekey.sln\n\n\nSet Active Configuration to \nRelWithDebInfo\n, ensure Active Solution platform is \nx64\n for 64 bit builds\n\n\nBuild Solution\n\n\nAfter build successfully,build \nINSTALL\n target, then will create a directory \nthird_libs\n under blocklink_crosschain_privatekey, include \nblocklink_libbitcoin.lib\n and \nblocklink_libbitcoin_secp256k1.lib\n.\n\n\n4.Build Eth Crosschain Privatekey\n\n\nBuild cryptlib.lib\n\n\nD:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\cryptopp\nfind file cryptest.sln and double click it,will open this project in vs2017;\nSet Active Configuration to\"Release\",ensure Active Solution platform is `x64` for 64 bit builds;\nSelect project cryptlib,right botton click and click Building;\ncopy D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\cryptopp\\x64\\Output\\Release\\cryptlib.lib to D:\\hyperexchange\\eth_crosschain_privatekey\\libs,if have no directory libs,to create it please.\n\n\n\nSet up environment for building:\n\n\nD:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\nnotepad setenv_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\n@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset ETH_CROSSCHAIN_PROJECT=%GRA_ROOT%/eth_crosschain_privatekey/eth_sign\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%ETH_CROSSCHAIN_PROJECT%;%PATH%\n\necho Setting up VS2017 environment...\ncall \"%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat\" x86_amd64\n\n\n\nIn my PC,VS150COMNTOOLS:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\", please set a correct path of file vcvarsall.bat by your PC.\n\n\nNote keep slash and backslash are consistency with the example\n\n\nThen run\n\n\nsetenv_x64.bat\n\n\n\nBuild\n\n\nD:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\nnotepad run_cmake_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\nsetlocal\ncall \"d:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\setenv_x64.bat\"\ncd %GRA_ROOT%\\eth_crosschain_privatekey\\eth_sign\ncmake-gui -G \"Visual Studio 15\"\n\n\n\nThen run\n\n\nrun_cmake_x64.bat\n\n\n\nThis pops up the cmake gui, but if you\nve used CMake before it will probably be showing the wrong data, so fix that:\n\n\n\n\nWhere is the source code: \nD:/hyperexchange/eth_crosschain_privatekey/eth_sign\n\n\nWhere to build the binaries: \nD:/hyperexchange/eth_crosschain_privatekey/eth_sign/x64\n\n\n\n\nThen hit Configure. It may ask you to specify a generator for this project; if it does, choose Visual Studio 15 2017 Win64 for 64 bit builds and select Use default native compilers. Look through the output and fix any errors. Then hit Generate.\n\n\nLaunch Visual Studio and load D:\\hyperexchange\\eth_crosschain_privatekey\\x64\\eth_crosschain_privatekey.sln\n\n\nSet Active Configuration to \nRelWithDebInfo\n, ensure Active Solution platform is \nx64\n for 64 bit builds\n\n\nSelect project \neth_sign\n,right botton click,choose \nproperties\n,in \nC/C++-\nGneral-\nAdditional Include Directories\n add boost directory\uff1a\nD:\\hyperexchange\\boost_1_64_0\n; add include file directory of leveldb\uff1a\nD:\\hyperexchange\\leveldb\\include\n; in \nLibrarian-\nGeneral-\nAdditional Dependencies\n, add \nleveldb.lib\n, in \nAdditional Library Directories\n, add \nD:\\hyperexchange\\leveldb\\x64\\Release\n, click \nApply-\nConfirm\n\uff1b in project \neth_sign\n find out file \nlevelDB.cpp\n, right botton click, select \nProperties\n,in \nGeneral\n,set value of \nExincluded From Build\n to \nYes\n.\n\n\nBuild Solution\n\n\nAfter build,copy D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\x64\\Release\\eth_sign.lib to D:\\hyperexchange\\eth_crosschain_privatekey\\libs,if have no directory libs,to create it please.\n\n\n\n\nBuild project files for hyperexchange\n\n\n\n\n1.Set up environment for building:\n\n\nD:\ncd D:\\hyperexchange\\HyperExchange\nnotepad setenv_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\n@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset CROSSCHAIN_PRIVATEKEY_PROJECT=%GRA_ROOT%/blocklink_crosschain_privatekey\nset ETH_CROSSCHAIN_PROJECT=%GRA_ROOT%/eth_crosschain_privatekey\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%CROSSCHAIN_PRIVATEKEY_PROJECT%;%ETH_CROSSCHAIN_PROJECT%;%PATH%\n\necho Setting up VS2017 environment...\ncall \"%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat\" x86_amd64\n\n\n\nIn my PC,VS150COMNTOOLS:\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\", please set a correct path of file vcvarsall.bat by your PC.\n\n\nNote keep slash and backslash are consistency with the example\n\n\nThen run\n\n\nsetenv_x64.bat\n\n\n\n2.Run CMake:\n\n\nD:\ncd D:\\hyperexchange\\HyperExchange\nnotepad run_cmake_x64.bat\n\n\n\nPut this into the notepad window, then save and quit.\n\n\nsetlocal\ncall \"d:\\hyperexchange\\HyperExchange\\setenv_x64.bat\"\ncd %GRA_ROOT%\\HyperExchange\ncmake-gui -G \"Visual Studio 15\"\n\n\n\nThen run\n\n\nrun_cmake_x64.bat\n\n\n\nThis pops up the cmake gui, but if you\nve used CMake before it will probably be showing the wrong data, so fix that:\n\n\n\n\nWhere is the source code: \nD:/hyperexchange/HyperExchange\n\n\nWhere to build the binaries: \nD:/hyperexchange/HyperExchange/x64\n\n\n\n\nThen hit Configure. It may ask you to specify a generator for this project; if it does, choose Visual Studio 15 2017 Win64 for 64 bit builds and select Use default native compilers. Look through the output and fix any errors. Then hit Generate.\n\n\n3.Launch Visual Studio and load D:\\hyperexchange\\x64\\hyperexchange.sln\n\n\n4.Set Active Configuration to \nRelWithDebInfo\n, ensure Active Solution platform is \nx64\n for 64 bit builds\n\n\n5.Build Solution\n\n\n6.Or you can build the \nINSTALL\n target in Visual Studio which will copy all of the necessary files into your \nD:\\hyperexchange\\HyperExchange\\install\n directory, then copy all of those files to the \nbin\n directory.", 
            "title": "Building"
        }, 
        {
            "location": "/wallets/hx-building/#hyperexchange-building-guide", 
            "text": "Last updated for v1.0.7.", 
            "title": "HyperExchange Building Guide"
        }, 
        {
            "location": "/wallets/hx-building/#building", 
            "text": "HX-Node  requires a 64-bit operating system to build  HX-Node  requires a Boost version 1.64.0 or newer than it. Versions earlier than 1.64 are NOT supported.    Ubuntu (64-bit) Linux  OS X  Windows", 
            "title": "Building"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/", 
            "text": "hx docker environment deploy\n\n\noverview\n\n\nBecause the server usually uses the linux server, the following ubuntu16.04 server environment serves only as an example about how to compile the docker deployment image of the hx project and start the corresponding container.\n\n\nDownload all resources needed for deployment\n\n\n1.Download the deployment file deploy_data.zip from official website \nhttp://www.hx.cash/\n and extract it to the local path. Directory structure as follows:\n\n\n\n\n2.Directory structure discription:\n\n\n\n\nMain_chain directory: This directory includes the contents of the hx main chain and the startup script;\n\n\nthird_chain directory: This directory includes the content of the third-party chain accessed by hx and the startup script;\n\n\nvolumes directory: This directory is mainly used to map the relevant chain data and log in the hx after startup to outside;\n\n\ndocker-compose.yml file: used to organize and configure two docker serveice hx-mainchain and hx-thirdchain in hx;\n\n\nDockerfile_mainchain and Dockerfile_thirdchain files: define docker files for hx_mainchain and hx_thirdchain;\n\n\nsources.list file: A configuration file in Ubuntu system for configuring ubuntu sources.\n\n\n\n\nConfiguration file details\n\n\n1.Dockerfile_mainchain\n\n\n(1) For domestic users, the resources.list has been modified in docker in order to faster and better related software installation;\n\n\n\n\n(2)Configure required content of hx_mainchain;\n\n\n\n\n\n\n\n\nCreate a /hx/crosschain_midware directory in the docker image to store middleware related data;\n\n\n\n\n\n\nCopy needed source of hx_mainchain from directory main_chain to docker image;\n\n\n\n\n\n\nGive start.sh (the script executed after docker starts) and duration_node (the node of mainchain) execute permission;\n\n\n\n\n\n\nLink the witness_node to /usr/bin for the start.sh script to use.\n\n\n\n\n\n\n(2)Configure hx_mainchain to start the execution script.\n\n\n\n\n(3)Hx_mainchain execution script, located under the main_chain directory\n\n\n\n\n2.Dockerfile_thirdchain\n\n\nIts structure is similar to the above Dockerfile_mainchain, which will not be described repeatly here;\n\n\n3.Docker-compose.yml\n\n\n(1) Two services (images) are defined in docker-compose, namely hx_thirdchain and hx_mainchain;\n\n\n\n\n(2)Service\uff1ahx_thirdchain\n\n\n\n\nDockerfile_thirdchain in the current directory as its docker file;\n\n\n\n\n\n\n\n\nDefine the name and tag of the service (image)\n\n\n\n\n\n\n\n\nSetup port map of thirdchain,These ports correspond to the ports of the relevant chains in the execution script.\n\n\n\n\n\n\nExecute port status in script start.sh\n\n\n\n\n\n\nSet mapped directory\n\n\n\n\n\n\n\n\nSet up name of the docker after the service starts.\n\n\n\n\n\n\n\n\nSet ipv4 address of the service\n\n\n\n\n\n\n(3)Service\uff1ahx_mainchain\n\n\nSimilar to the above hx_thirdchain service\n\n\n\n\nSet the dependency of the service, hx_mainchain service depends on hx_thirdchain service\n\n\n\n\n\n\n\n\nSet ipv4 address of the service\n\n\n\n\n\n\n4.Execute the script (start.sh)\n\n\n(1)Execution script in main_chain\n\n\n\n\n\n\nStart the mongo db required to collect the plugin\n\n\nStart acquisition plugin\n\n\nStart the witness_node node of mainchain\n\n\n\n\n(2)Execution script in third_chain\n\n\n\n\n\n\nstart bitcoin node\n\n\nstart hc node\n\n\nstart litecoin node\n\n\n\n\nCompile the image\n\n\nGo to deploy_data directory and execute the following command:\n\n\nsudo docker-compose build [hx_mainchain/hx_thirdchain]\n\n\n\nDescription\uff1a\n\n [hx_mainchain/hx_thirdchain] is an optional parameter indicating which image should be compiled (service). If it is empty, all images need to be compiled.\n\n There are two images in docker compose, hx_mainchain and hx_thirdchain, where hx_mainchain depends on hx_thirdchain. So you can also compile a separate image. \n\n\nStarting the container\n\n\nExecute the following command in the deploy_data directory:\n\n\nsudo docker-compose up \u2013d  [hx_mainchain/hx_thirdchain]\n\n\n\nDescription:\n\n [hx_mainchain/hx_thirdchain] is an optional parameter indicating which mirror can be used as base to start container. If it is empty, start all containers.\n\n Because hx_mainchain depends on hx_thirdchain, you must first start hx_thirdchain to synchronize the data on the third-party chain. After a period of time (preferably after data synchronization), start hx_mainchain, and the collection program inside start to collect relevant data.\n\n\nConfirm container status\n\n\nUse cli_wallet under deploy_data directory (if it does not have execute permission, add the corresponding execute permission), connect to hx chain to check its status.\n\n\n./cli_wallet -s ws://192.168.18.8:8090\n\n\n\nNote: The description of above mentioned ip and port of the above command is detailed in the description of the above configuration file.", 
            "title": "docker deploy"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#hx-docker-environment-deploy", 
            "text": "", 
            "title": "hx docker environment deploy"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#overview", 
            "text": "Because the server usually uses the linux server, the following ubuntu16.04 server environment serves only as an example about how to compile the docker deployment image of the hx project and start the corresponding container.", 
            "title": "overview"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#download-all-resources-needed-for-deployment", 
            "text": "1.Download the deployment file deploy_data.zip from official website  http://www.hx.cash/  and extract it to the local path. Directory structure as follows:   2.Directory structure discription:   Main_chain directory: This directory includes the contents of the hx main chain and the startup script;  third_chain directory: This directory includes the content of the third-party chain accessed by hx and the startup script;  volumes directory: This directory is mainly used to map the relevant chain data and log in the hx after startup to outside;  docker-compose.yml file: used to organize and configure two docker serveice hx-mainchain and hx-thirdchain in hx;  Dockerfile_mainchain and Dockerfile_thirdchain files: define docker files for hx_mainchain and hx_thirdchain;  sources.list file: A configuration file in Ubuntu system for configuring ubuntu sources.", 
            "title": "Download all resources needed for deployment"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#configuration-file-details", 
            "text": "1.Dockerfile_mainchain  (1) For domestic users, the resources.list has been modified in docker in order to faster and better related software installation;   (2)Configure required content of hx_mainchain;     Create a /hx/crosschain_midware directory in the docker image to store middleware related data;    Copy needed source of hx_mainchain from directory main_chain to docker image;    Give start.sh (the script executed after docker starts) and duration_node (the node of mainchain) execute permission;    Link the witness_node to /usr/bin for the start.sh script to use.    (2)Configure hx_mainchain to start the execution script.   (3)Hx_mainchain execution script, located under the main_chain directory   2.Dockerfile_thirdchain  Its structure is similar to the above Dockerfile_mainchain, which will not be described repeatly here;  3.Docker-compose.yml  (1) Two services (images) are defined in docker-compose, namely hx_thirdchain and hx_mainchain;   (2)Service\uff1ahx_thirdchain   Dockerfile_thirdchain in the current directory as its docker file;     Define the name and tag of the service (image)     Setup port map of thirdchain,These ports correspond to the ports of the relevant chains in the execution script.    Execute port status in script start.sh    Set mapped directory     Set up name of the docker after the service starts.     Set ipv4 address of the service    (3)Service\uff1ahx_mainchain  Similar to the above hx_thirdchain service   Set the dependency of the service, hx_mainchain service depends on hx_thirdchain service     Set ipv4 address of the service    4.Execute the script (start.sh)  (1)Execution script in main_chain    Start the mongo db required to collect the plugin  Start acquisition plugin  Start the witness_node node of mainchain   (2)Execution script in third_chain    start bitcoin node  start hc node  start litecoin node", 
            "title": "Configuration file details"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#compile-the-image", 
            "text": "Go to deploy_data directory and execute the following command:  sudo docker-compose build [hx_mainchain/hx_thirdchain]  Description\uff1a  [hx_mainchain/hx_thirdchain] is an optional parameter indicating which image should be compiled (service). If it is empty, all images need to be compiled.  There are two images in docker compose, hx_mainchain and hx_thirdchain, where hx_mainchain depends on hx_thirdchain. So you can also compile a separate image.", 
            "title": "Compile the image"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#starting-the-container", 
            "text": "Execute the following command in the deploy_data directory:  sudo docker-compose up \u2013d  [hx_mainchain/hx_thirdchain]  Description:  [hx_mainchain/hx_thirdchain] is an optional parameter indicating which mirror can be used as base to start container. If it is empty, start all containers.  Because hx_mainchain depends on hx_thirdchain, you must first start hx_thirdchain to synchronize the data on the third-party chain. After a period of time (preferably after data synchronization), start hx_mainchain, and the collection program inside start to collect relevant data.", 
            "title": "Starting the container"
        }, 
        {
            "location": "/wallets/hx-docker-deploy/#confirm-container-status", 
            "text": "Use cli_wallet under deploy_data directory (if it does not have execute permission, add the corresponding execute permission), connect to hx chain to check its status.  ./cli_wallet -s ws://192.168.18.8:8090  Note: The description of above mentioned ip and port of the above command is detailed in the description of the above configuration file.", 
            "title": "Confirm container status"
        }, 
        {
            "location": "/wallets/hxnode-setup/", 
            "text": "HyperExchange Witness-node Startup Guide\n\n\nLast updated for v1.0.7\n\n\n\n\nAfter Building, the witness_node can be launched with:\n\n\n./programs/witness_node/witness_node\n\n\n\nThe node will automatically create a data directory including a config file. It may take several hours to fully synchronize the blockchain. After syncing, you can exit the node using Ctrl+C and setup the command-line wallet by editing \nwitness_node_data_dir/config.ini\n as follows:\n\n\nrpc-endpoint = 127.0.0.1:8090\n\n\n\nIMPORTANT:\n By default the witness node will start in reduced memory ram mode by using some commands. In order to run a full node with all the account history you need to remove \npartial-operations\n and \nmax-ops-per-account\n from your config file. Please note that currently(2018-07-02) a full node will need more than 100GB of RAM to operate and required memory is growing fast. \n\n\nAfter starting the witness node again, in a separate terminal you can run:\n\n\n./programs/cli_wallet/cli_wallet\n\n\n\nSet your inital password:\n\n\n set_password \nPASSWORD\n\n\n unlock \nPASSWORD\n\n\n\n\nTo import your initial balance:\n\n\n import_balance \nACCOUNT NAME\n [\nWIF_KEY\n] true\n\n\n\nIf you send private keys over this connection, \nrpc-endpoint\n should be bound to localhost for security.\n\n\nUse \nhelp\n to see all available wallet commands.", 
            "title": "startup"
        }, 
        {
            "location": "/wallets/hxnode-setup/#hyperexchange-witness-node-startup-guide", 
            "text": "Last updated for v1.0.7   After Building, the witness_node can be launched with:  ./programs/witness_node/witness_node  The node will automatically create a data directory including a config file. It may take several hours to fully synchronize the blockchain. After syncing, you can exit the node using Ctrl+C and setup the command-line wallet by editing  witness_node_data_dir/config.ini  as follows:  rpc-endpoint = 127.0.0.1:8090  IMPORTANT:  By default the witness node will start in reduced memory ram mode by using some commands. In order to run a full node with all the account history you need to remove  partial-operations  and  max-ops-per-account  from your config file. Please note that currently(2018-07-02) a full node will need more than 100GB of RAM to operate and required memory is growing fast.   After starting the witness node again, in a separate terminal you can run:  ./programs/cli_wallet/cli_wallet  Set your inital password:   set_password  PASSWORD   unlock  PASSWORD   To import your initial balance:   import_balance  ACCOUNT NAME  [ WIF_KEY ] true  If you send private keys over this connection,  rpc-endpoint  should be bound to localhost for security.  Use  help  to see all available wallet commands.", 
            "title": "HyperExchange Witness-node Startup Guide"
        }, 
        {
            "location": "/wallets/hxnode-using/", 
            "text": "Last updated for v1.2.0.\n\n\nThis guide assumes you have already set up a hyperexchange witness-node using \nHyperExchange Witness-node Setup\n,hx midware has startup and connect with oterh blockchain(BTC/LTC\n),Following will introduce all arguments of witness-node.\n\n\n\n\nYou can specified arguments after \nwitness-node\n or config in file \nconfig.ini\n.\n\n\nConfig\n\n\nFile config.ini template:\n\n\n track-address = \"HXFynbZPgLeF5GfMXs9CCuEAreLGWSU4HK6\"    \n track-address = \"HX7vBsFkAtgmhULMkHNkDVLoSR3kGbEfDvi\"\n\n # Endpoint for P2P node to listen on    \n # p2p-endpoint =\n\n # P2P nodes to connect to on startup (may specify multiple times)    \n # seed-node =\n\n # JSON array of P2P nodes to connect to on startup    \n # seed-nodes =\n\n # Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.    \n # checkpoint =\n\n # Endpoint for websocket RPC to listen on    \n # rpc-endpoint =\n\n # Endpoint for TLS websocket RPC to listen on    \n # rpc-tls-endpoint =\n\n # The TLS certificate file for this server    \n # server-pem =\n\n # Password for this certificate    \n # server-pem-password =\n\n # File to read Genesis State from    \n genesis-json = \"E:\\link_mytest\\genesis.json\"\n\n # Block signing key to use for init mineres, overrides genesis file    \n # dbg-init-key =\n\n # JSON file specifying API permissions    \n api-access = \"E:\\link_mytest\\api-access.json\"\n\n # Miner in this node would not pack contract trx which gas price to low    \n # min_gas_price =\n\n # Enable block production, even if the chain is stale.    \n enable-stale-production = true\n\n # Percent of miners (0-99) that must be participating in order to produce blocks    \n required-participation = false\n\n # ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n\n miner-id = \"1.6.1\"\n miner-id = \"1.6.2\"\n miner-id = \"1.6.3\"\n miner-id = \"1.6.4\"\n miner-id = \"1.6.5\"\n miner-id = \"1.6.6\"\n miner-id = \"1.6.7\"\n miner-id = \"1.6.8\"\n miner-id = \"1.6.9\"\n miner-id = \"1.6.10\"\n miner-id = \"1.6.11\"\n miner-id = \"1.6.12\"\n miner-id = \"1.6.13\"\n miner-id = \"1.6.14\"\n miner-id = \"1.6.15\"\n miner-id = \"1.6.16\"\n miner-id = \"1.6.17\"\n miner-id = \"1.6.18\"\n miner-id = \"1.6.19\"\n miner-id = \"1.6.20\"\n miner-id = \"1.6.21\"\n miner-id = \"1.6.22\"\n miner-id = \"1.6.23\"\n miner-id = \"1.6.24\"\n miner-id = \"1.6.25\"\n\n # Tuple of [PublicKey, WIF private key] (just append)\n private-key = [[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvtXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]]\n\n # hyperexchange midware ip and port\n crosschain-ip = 192.168.1.195\n\n crosschain-port = 5005\n\n #  chain-type for crosschains  (e.g. [\"BTC\"], quotes are required,  specify one times)\n chain-type = [\"BTC\",\"LTC\",\"UB\",\"HC\"]\n\n # Account ID to track history for (may specify multiple times)\n # track-account =\n\n # Keep only those operations in memory that are related to account history tracking\n # partial-operations =\n\n # Maximum number of operations per account will be kept in memory\n # max-ops-per-account =\n\n # address to track history for (may specify multiple times)\n # track-address =\n\n # guard-id =\n\n # declare an appender named \"stderr\" that writes messages to the console\n [log.console_appender.stderr]\n stream=std_error\n\n # declare an appender named \"p2p\" that writes messages to p2p.log\n [log.file_appender.p2p]\n filename=logs/p2p/p2p.log\n # filename can be absolute or relative to this config file\n\n # route any messages logged to the default logger to the \"stderr\" logger we\n # declared above, if they are info level are higher\n [logger.default]\n level=info\n appenders=stderr\n\n # route messages sent to the \"p2p\" logger to the p2p appender declared above\n [logger.p2p]\n level=info\n appenders=p2p\n\n\n\nArguments List\n\n\nGraphene Witness Node:\n\n\n  -h [ --help ] Print this help message and exit.\n  -d [ --data-dir ] arg (=\"witness_node_data_dir\")   Directory containing databases,configuration file, etc.\n\n  --create-genesis-json arg Path to create a Genesis State at. If a well-formed JSON file exists at the path, it will be parsed and any missing fields in a Genesis State will be added, and any unknown fields will be removed. If no file or an invalid file is found, it will be replaced with an example Genesis State.\n  --replay-blockchain   Rebuild object graph by replaying all blocks\n  --resync-blockchain   Delete all blocks and re-sync with network from scratch\n  --force-validate  Force validation of all transactions\n  --genesis-timestamp arg   Replace timestamp from genesis.json with current time plus this many seconds (experts only!)\n  --p2p-endpoint argEndpoint for P2P node to listen on\n  -s [ --seed-node ] argP2P nodes to connect to on startup (may specify multiple times)\n  --seed-nodes arg  JSON array of P2P nodes to connect to on startup\n  -c [ --checkpoint ] arg   Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.\n  --rpc-endpoint [=arg(=127.0.0.1:8090)]  Endpoint for websocket RPC to listen on\n  --rpc-tls-endpoint [=arg(=127.0.0.1:8089)]  Endpoint for TLS websocket RPC to listen on\n  -p [ --server-pem ] [=arg(=server.pem)] The TLS certificate file for this server\n  -P [ --server-pem-password ] arg  Password for this certificate\n  --genesis-json argFile to read Genesis State from\n  --dbg-init-key argBlock signing key to use for init mineres, overrides genesis file\n  --api-access arg  JSON file specifying API permissions\n  --min_gas_price arg   Miner in this node would not pack contract trx which gas price to low\n\nOptions for plugin miner:\n  --enable-stale-production Enable block production, even if the chain is stale.\n  --required-participation  Percent of miners (0-99) that must be participating in order to produce blocks\n  -w [ --miner-id ] arg ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n  --private-key arg (=[[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvt\nXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9V\nHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]])  Tuple of [PublicKey, WIF private key] (just append)\n  -w [ --crosschain-ip ] arg (=117.78.44.37)\n  -w [ --crosschain-port ] arg (=5005)\n  -w [ --chain-type ] arg (=[\"BTC\",\"LTC\",\"UB\",\"HC\"])  chain-type for crosschains  (e.g.[\"BTC\"], quotes are required,  specify one times)\n\nOptions for plugin account_history:\n  --track-account arg   Account ID to track history for (may specify multiple times) --partial-operations arg Keep only those operations in memory that are related to account history tracking\n  --max-ops-per-account arg Maximum number of operations per account will be kept in memory\n\nOptions for plugin transaction_plugin:\n  --track-address arg   address to track history for (may specify multiple times)\n\nOptions for plugin crosschain record:\n  -w [ --guard-id ] arg", 
            "title": "Using hx-node"
        }, 
        {
            "location": "/wallets/hxnode-using/#config", 
            "text": "File config.ini template:   track-address = \"HXFynbZPgLeF5GfMXs9CCuEAreLGWSU4HK6\"    \n track-address = \"HX7vBsFkAtgmhULMkHNkDVLoSR3kGbEfDvi\"\n\n # Endpoint for P2P node to listen on    \n # p2p-endpoint =\n\n # P2P nodes to connect to on startup (may specify multiple times)    \n # seed-node =\n\n # JSON array of P2P nodes to connect to on startup    \n # seed-nodes =\n\n # Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.    \n # checkpoint =\n\n # Endpoint for websocket RPC to listen on    \n # rpc-endpoint =\n\n # Endpoint for TLS websocket RPC to listen on    \n # rpc-tls-endpoint =\n\n # The TLS certificate file for this server    \n # server-pem =\n\n # Password for this certificate    \n # server-pem-password =\n\n # File to read Genesis State from    \n genesis-json = \"E:\\link_mytest\\genesis.json\"\n\n # Block signing key to use for init mineres, overrides genesis file    \n # dbg-init-key =\n\n # JSON file specifying API permissions    \n api-access = \"E:\\link_mytest\\api-access.json\"\n\n # Miner in this node would not pack contract trx which gas price to low    \n # min_gas_price =\n\n # Enable block production, even if the chain is stale.    \n enable-stale-production = true\n\n # Percent of miners (0-99) that must be participating in order to produce blocks    \n required-participation = false\n\n # ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n\n miner-id = \"1.6.1\"\n miner-id = \"1.6.2\"\n miner-id = \"1.6.3\"\n miner-id = \"1.6.4\"\n miner-id = \"1.6.5\"\n miner-id = \"1.6.6\"\n miner-id = \"1.6.7\"\n miner-id = \"1.6.8\"\n miner-id = \"1.6.9\"\n miner-id = \"1.6.10\"\n miner-id = \"1.6.11\"\n miner-id = \"1.6.12\"\n miner-id = \"1.6.13\"\n miner-id = \"1.6.14\"\n miner-id = \"1.6.15\"\n miner-id = \"1.6.16\"\n miner-id = \"1.6.17\"\n miner-id = \"1.6.18\"\n miner-id = \"1.6.19\"\n miner-id = \"1.6.20\"\n miner-id = \"1.6.21\"\n miner-id = \"1.6.22\"\n miner-id = \"1.6.23\"\n miner-id = \"1.6.24\"\n miner-id = \"1.6.25\"\n\n # Tuple of [PublicKey, WIF private key] (just append)\n private-key = [[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvtXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9VHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]]\n\n # hyperexchange midware ip and port\n crosschain-ip = 192.168.1.195\n\n crosschain-port = 5005\n\n #  chain-type for crosschains  (e.g. [\"BTC\"], quotes are required,  specify one times)\n chain-type = [\"BTC\",\"LTC\",\"UB\",\"HC\"]\n\n # Account ID to track history for (may specify multiple times)\n # track-account =\n\n # Keep only those operations in memory that are related to account history tracking\n # partial-operations =\n\n # Maximum number of operations per account will be kept in memory\n # max-ops-per-account =\n\n # address to track history for (may specify multiple times)\n # track-address =\n\n # guard-id =\n\n # declare an appender named \"stderr\" that writes messages to the console\n [log.console_appender.stderr]\n stream=std_error\n\n # declare an appender named \"p2p\" that writes messages to p2p.log\n [log.file_appender.p2p]\n filename=logs/p2p/p2p.log\n # filename can be absolute or relative to this config file\n\n # route any messages logged to the default logger to the \"stderr\" logger we\n # declared above, if they are info level are higher\n [logger.default]\n level=info\n appenders=stderr\n\n # route messages sent to the \"p2p\" logger to the p2p appender declared above\n [logger.p2p]\n level=info\n appenders=p2p", 
            "title": "Config"
        }, 
        {
            "location": "/wallets/hxnode-using/#arguments-list", 
            "text": "Graphene Witness Node:    -h [ --help ] Print this help message and exit.\n  -d [ --data-dir ] arg (=\"witness_node_data_dir\")   Directory containing databases,configuration file, etc.\n\n  --create-genesis-json arg Path to create a Genesis State at. If a well-formed JSON file exists at the path, it will be parsed and any missing fields in a Genesis State will be added, and any unknown fields will be removed. If no file or an invalid file is found, it will be replaced with an example Genesis State.\n  --replay-blockchain   Rebuild object graph by replaying all blocks\n  --resync-blockchain   Delete all blocks and re-sync with network from scratch\n  --force-validate  Force validation of all transactions\n  --genesis-timestamp arg   Replace timestamp from genesis.json with current time plus this many seconds (experts only!)\n  --p2p-endpoint argEndpoint for P2P node to listen on\n  -s [ --seed-node ] argP2P nodes to connect to on startup (may specify multiple times)\n  --seed-nodes arg  JSON array of P2P nodes to connect to on startup\n  -c [ --checkpoint ] arg   Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.\n  --rpc-endpoint [=arg(=127.0.0.1:8090)]  Endpoint for websocket RPC to listen on\n  --rpc-tls-endpoint [=arg(=127.0.0.1:8089)]  Endpoint for TLS websocket RPC to listen on\n  -p [ --server-pem ] [=arg(=server.pem)] The TLS certificate file for this server\n  -P [ --server-pem-password ] arg  Password for this certificate\n  --genesis-json argFile to read Genesis State from\n  --dbg-init-key argBlock signing key to use for init mineres, overrides genesis file\n  --api-access arg  JSON file specifying API permissions\n  --min_gas_price arg   Miner in this node would not pack contract trx which gas price to low\n\nOptions for plugin miner:\n  --enable-stale-production Enable block production, even if the chain is stale.\n  --required-participation  Percent of miners (0-99) that must be participating in order to produce blocks\n  -w [ --miner-id ] arg ID of miner controlled by this node (e.g. \"1.6.5\", quotes are required, may specify one times)\n  --private-key arg (=[[\"HX6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV\",\"5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\"],[\"HX5bqn6zdbs1CFC6ooNBZDRTmWraJjtWBqnst9y1UxSFYtSCzX77\",\"5JZDdTiLcahFtZo7M95ybDjT5VufrsYWfxiaQfJoP1zfbw8PmRA\"],[\"HX69GWR9Xsh74ZcicQicFVZkpNdzUgyeDHZRXM3Dj455Ebkjrch1\",\"5K8mFWgAf2bd5AG8hKzjc9BgXKrnwqNT7PaUbJ7oWjHjQPwz8zF\"],[\"HX4taeGZFJq2kB2cXazJbbjsWQocyTe7M976CkfRzvjtHN9jHXvn\",\"5K4RZCLQ6kUFps1eUncFkAJ7iUEsRXm694aD2W6tMxhFqzmWdD3\"],[\"HX6L97VZfUCWdEjqQpAMw3fRxTnzHbp2mVdQZshHk7E1jkzAHeTa\",\"5JiDkVAXi6vpE6aEiDRh7WAwcGwr1ivrsN8Yh7eDwFbmz5BFCTz\"],[\"HX5LPcQrUGmKfcG3he1hWf5bmuFbBzP1uZXLvNmKoQjSkGppm6XY\",\"5J5uekBwLhENsKGNShqBDoJdbHDaZMMrStVimGTfJ9V2vbAKpo9\"],[\"HX8Ejga5z6gbig3vnPVYdqA9TpcGCX2tJAatjV53xjRDjT6sNgHS\",\"5KCmKbz9mD8ndbA5UBLC6kUVENCDkmHf9dpZ7ExKnB8LFWWyTmw\"],[\"HX51KmAmvETZYW1aaKrf5w1puzv1UzMzca7eLkbET6AaAv19EdPB\",\"5JLvURaky1ryswgY785sQ4TiR3MrEon9ryKX71NatdJJ3AvtC2b\"],[\"HX6A1uvEQ9vA3iWm61XEeE7g9zSHAutoFoqndFiDuAwY2VPTanFc\",\"5HvjWASwH2mYNodoMDdibW8tHW3u8HFQYS7vD3BtpeenCny1h2Q\"],[\"HX5Dxx6J9EeMsYhseQ4Kte6oG5Dj5q25RXSg8uXsiGnGjRv9qMkJ\",\"5JDkmfS8YMWapcSCntX7wygJZPtELATJHMpPCvidTA19SF8Xo5u\"],[\"HX8JLi9shUiLDk1HBPwo3Twej71adUxRVRkJWhHxaVSiivR3LX2x\",\"5HzByVyqvt\nXWXb9HM3TFS8mvrCf3NaDM1GRZQHuaiDgJG739a83\"],[\"HX7nYKaLqUAKbUC8kmJfPWMban7AQMydU6be7PGJCJhTSWLTpb7h\",\"5KdAjgrJ7gwnbwQVK8vMXQJ5BW5PfMr5BtA5DpsQwCtCVGNqM8V\"],[\"HX8C8mVHtxzkZJUaqC1QSUDdXSnFzqx6FAgoB8XtFzi2DxMnFWUQ\",\"5KbUi2Efd2bscQKtQ3a4RBvn4bVuaMfpCZwHpskWrUokRc3NXA1\"],[\"HX7ojjUraz22uHYN86YHxcwwap2wfPiU7RaBJoBJ2xQV7hAx5WFp\",\"5K67sdMmoynLXK3Y3EiZ3Gfjw9Qn5UY9dQrGKed5V5DiZHzun7G\"],[\"HX5mTizLNWbiMF4HgrmUd1jDmjoDbRiQrjWSh3xfGemBF9NTpkzk\",\"5JCBhwpxBSo7ABJweuNamtGoWbnbVJvGf4KAyKCgFFWTKGWD1vD\"],[\"HX5Jw3UUKdE9ocWJEt1S1yco6anZC8oWv9P9o2XFxpbqFsPXQeV1\",\"5JyKyz1JJZTzN1a4ruvbykLia1WMM46TEJShhgLzWfsGQJVcHSK\"],[\"HX6BCoHi5pAbZHyXbVMK6RrxauSatqpn3FkFsr7U7nNRRgWnXdcE\",\"5Hy5KPpkAoU2r9uaiqw4SECwNYyZMaR78BkuhbeLpw6tVBB66gn\"],[\"HX6kvYvHpsJvoHBbaQXMrYAt8KHqWjPHCxfRMznzT6YDxCnGrvj7\",\"5JP1tX4BRrgZctxTmkAbam9m53DardLM6TrQtDS1EdgohGp6mtJ\"],[\"HX6WyKiwnSxCzUN9a8bUeEagz8Sked2zrJ1BabQkbqxog1Nbq9JC\",\"5KkHjoSC1u5GhBdaNbGmTptwEg22AqtEk4ECQ8XQXfMFqXhDnHk\"],[\"HX6qbQbppQUzgHS8TrUcNjyw1wHhUqJbTTZKnHr8u37SoxFSfieN\",\"5KjdpdNzwcx9A5XZGNquHWzqVcPvMPF9EXsDkY2STsvDQeNroZn\"],[\"HX6sQuXCi7znykMcrtabvgtFqFjMCT1hKHdeNttadYkqEqvKiD3Q\",\"5KfshkiRmYvAvbf5rg8HXWZSifrTtR7htQyox7aVrCsw5t4Xgbk\"],[\"HX8UQw5ZprXve3fu4aRbjqs3rfyMKTutvzg9AgJLNF5gKKriGwf4\",\"5JZ46AjQN7kCz7igUcQ3wGUFAviBDvBkxZ7xS6Pf5DHPQvFspwr\"],[\"HX81JvHdNWm5kS4qoiPipNU9EiLgXe2Y8R516Qcg9FgShFoPzsts\",\"5JHa4RNxzehYdCMtVoqh55a5vNzAmENXtoGwXFxmNwtvTrduGHy\"],[\"HX6zBzBSG8mNun1FAi6RYs1XpA11Y31n1YhieaZFrEwaec8ABNFy\",\"5J1HrKVzNQBwKXiTdMYaY6eVknm15mCeyV84Wt3TDMwwCLHxyWv\"],[\"HX6XiMxd7nqyxzozt3UPWdjNNjpRQ9V\nHEZzsopu5mMHuGqRxkfeC\",\"5JtrnVGscfoYC8Hftk36hwXYUZjKBzL6fv8JBTeo6MbKgSL2vF1\"],[\"HX54hh4baLS6fkee9PB6YGjxZaF8rZxwnRs3qL7LbHjtfPL78vFN\",\"5J3oHnGEze3gwidWjoznyTGgyJqFm3h8cFWg2DZaP55Rd1tUXVr\"],[\"HX6pNcaS3ZFuo3gzwvxcFxTnNhbcbtLodEMPvAtSDQXLkRqNjNTo\",\"5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\"],[\"HX5ZyfuVbqjTJ44VkzVqt7yLZoJuV15agjUkMXwsapC1xNqwkdZ5\",\"5JQT9vqrFW26817PELM7D3w6rqbZ5GDW43knB2bP5kBALQ2BRDi\"],[\"HX5P6vSL3cG8wdiiSvcHmsfAoxqWGkSMd65TibbrjG9qAfY7g9Ka\",\"5Je6RMyd39B3W7QsC6XPHXFaTP31QmrtfiBxnmXDbeFz1pHE8CB\"],[\"HX6pf6v2N4VNX65eQCwf6gVNUhe2UurUVKsyyRWEoyEoDop5TXHK\",\"5JhS8VntvNPKPU1ByiUMhUeu7HutUK9PfCyAUXGvqLB1dym7Hgt\"],[\"HX6oVVvTQni6EfiN4h4oyxTQ4ACW6eP15fEpZTCeS8JcXWwBUbXR\",\"5JmaB7uQVGN6nKH1YyU4hSF6TmfCGJKoywimbJsRVkykF9swp1D\"],[\"HX5Qd3TyKic1t73dn5EDVJZ3WmszcKRz5GHaB8dVujCURsTTtYaN\",\"5JPYHwjeHETE6xzMUo2TunSCpdfdAUjLBBUH2Jy2DuGQcdS2ism\"],[\"HX59JXtoH3eW8YmrGUfWAX58W7RWFY8Wp1Nbz2zQ4xRarNSNVSuq\",\"5KLAzVUNPPci2JhQUQRpy1zsbjvyHQaRTATfLYk6jMnjrKZhx8U\"]])  Tuple of [PublicKey, WIF private key] (just append)\n  -w [ --crosschain-ip ] arg (=117.78.44.37)\n  -w [ --crosschain-port ] arg (=5005)\n  -w [ --chain-type ] arg (=[\"BTC\",\"LTC\",\"UB\",\"HC\"])  chain-type for crosschains  (e.g.[\"BTC\"], quotes are required,  specify one times)\n\nOptions for plugin account_history:\n  --track-account arg   Account ID to track history for (may specify multiple times) --partial-operations arg Keep only those operations in memory that are related to account history tracking\n  --max-ops-per-account arg Maximum number of operations per account will be kept in memory\n\nOptions for plugin transaction_plugin:\n  --track-address arg   address to track history for (may specify multiple times)\n\nOptions for plugin crosschain record:\n  -w [ --guard-id ] arg", 
            "title": "Arguments List"
        }, 
        {
            "location": "/wallets/hxwallet-cli/", 
            "text": "HyperExchange Cli-wallet Startup Guide\n\n\nLast updated for v1.0.7.\n\n\nThe following will explain how to startup the console wallet (not GUI).\n\n\n\n\nLAUNCHING\n\n\nThe cli_wallet creates a local wallet.json file that contains the encrypted private keys required to access the funds in your account. It \nrequires a running witness node\n (not necessarily locally) and connects to it on launch:\n\n\nprograms/cli_wallet/cli_wallet -s ws://127.0.0.1:8090\n\n\n\nDepending on the actual chain that you want to connect to your may need to specifiy \u2013chain-id.\n\n\nENABLING REMOTE PROCEDURE CALLS (RPC)\n\n\nIn order to allow RPC calls for wallet operations (spend, buy, sell, \u2026) you can choose between pure RPC or RPC-HTTP requests. In this tutorial, the latter is prefered since well established libraries make use of the RPC-HTTP protocol.\n\n\nThe cli-wallet can open a RPC port so that you can interface your application with it. You have the choices of * websocket RPC via the \n-r\n parameter, and * HTTP RPC via the \n-H\n parameter:\n\n\nTo enable RPC-HTTP in your wallet you need to run:\n\n\n# recommended for use with python, or curl:\nprograms/cli_wallet/cli_wallet --rpc-http-endpoint=\"127.0.0.1:8092\"\n# or\nprograms/cli_wallet/cli_wallet --rpc-endpoint=\"127.0.0.1:8092\"\n\n\n\ndepending on the kind of RPC protocol.\n\n\nThis will open the port 8092 for local queries only. It is not recommended to publicly expose your wallet!\n\n\nCli_wallet  Startup Arguments List\n\n\nList All the arguments of cli_wallet.\n\n\n  -h [ --help ] Print this help message and exit.\n  -s [ --server-rpc-endpoint ] [=arg(=ws://127.0.0.1:8090)] Server websocket RPC endpoint\n  -u [ --server-rpc-user ] arg  Server Username\n  -p [ --server-rpc-password ] arg  Server Password\n  -r [ --rpc-endpoint ] [=arg(=127.0.0.1:8091)]   Endpoint for wallet websocket RPC to listen on\n  -t [ --rpc-tls-endpoint ] [=arg(=127.0.0.1:8092)]  Endpoint for wallet websocket TLS RPC to listen on -c [ --rpc-tls-certificate ] [=arg(=server.pem)]\nPEM certificate for wallet websocket TLS RPC\n  -H [ --rpc-http-endpoint ] [=arg(=127.0.0.1:8093)] Endpoint for wallet HTTP RPC to listen on\n  -d [ --daemon ]   Run the wallet in daemon mode\n  -w [ --wallet-file ] [=arg(=wallet.json)]  wallet to load\n  --chain-id argchain ID to connect to", 
            "title": "Hx-cli Startup"
        }, 
        {
            "location": "/wallets/hxwallet-cli/#hyperexchange-cli-wallet-startup-guide", 
            "text": "Last updated for v1.0.7.  The following will explain how to startup the console wallet (not GUI).", 
            "title": "HyperExchange Cli-wallet Startup Guide"
        }, 
        {
            "location": "/wallets/hxwallet-cli/#launching", 
            "text": "The cli_wallet creates a local wallet.json file that contains the encrypted private keys required to access the funds in your account. It  requires a running witness node  (not necessarily locally) and connects to it on launch:  programs/cli_wallet/cli_wallet -s ws://127.0.0.1:8090  Depending on the actual chain that you want to connect to your may need to specifiy \u2013chain-id.", 
            "title": "LAUNCHING"
        }, 
        {
            "location": "/wallets/hxwallet-cli/#enabling-remote-procedure-calls-rpc", 
            "text": "In order to allow RPC calls for wallet operations (spend, buy, sell, \u2026) you can choose between pure RPC or RPC-HTTP requests. In this tutorial, the latter is prefered since well established libraries make use of the RPC-HTTP protocol.  The cli-wallet can open a RPC port so that you can interface your application with it. You have the choices of * websocket RPC via the  -r  parameter, and * HTTP RPC via the  -H  parameter:  To enable RPC-HTTP in your wallet you need to run:  # recommended for use with python, or curl:\nprograms/cli_wallet/cli_wallet --rpc-http-endpoint=\"127.0.0.1:8092\"\n# or\nprograms/cli_wallet/cli_wallet --rpc-endpoint=\"127.0.0.1:8092\"  depending on the kind of RPC protocol.  This will open the port 8092 for local queries only. It is not recommended to publicly expose your wallet!", 
            "title": "ENABLING REMOTE PROCEDURE CALLS (RPC)"
        }, 
        {
            "location": "/wallets/hxwallet-cli/#cli_wallet-startup-arguments-list", 
            "text": "List All the arguments of cli_wallet.    -h [ --help ] Print this help message and exit.\n  -s [ --server-rpc-endpoint ] [=arg(=ws://127.0.0.1:8090)] Server websocket RPC endpoint\n  -u [ --server-rpc-user ] arg  Server Username\n  -p [ --server-rpc-password ] arg  Server Password\n  -r [ --rpc-endpoint ] [=arg(=127.0.0.1:8091)]   Endpoint for wallet websocket RPC to listen on\n  -t [ --rpc-tls-endpoint ] [=arg(=127.0.0.1:8092)]  Endpoint for wallet websocket TLS RPC to listen on -c [ --rpc-tls-certificate ] [=arg(=server.pem)]\nPEM certificate for wallet websocket TLS RPC\n  -H [ --rpc-http-endpoint ] [=arg(=127.0.0.1:8093)] Endpoint for wallet HTTP RPC to listen on\n  -d [ --daemon ]   Run the wallet in daemon mode\n  -w [ --wallet-file ] [=arg(=wallet.json)]  wallet to load\n  --chain-id argchain ID to connect to", 
            "title": "Cli_wallet  Startup Arguments List"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/", 
            "text": "Last updated for v1.2.0.\n\n\nThis guide assumes you have already Startup a hyperexchange witness-node using \nHyperExchange Witness-node Setup\n and a cli-wallet using \nCli-wallet Startup\n.\n\n\nThe following will introduce how to use commands to call functions:transfer accounts/deposit/withdrawal/Funds transfer.(Use BTC transfer to LTC as a sample)\n\n\n\n\nPreparatory Work\n\n\n1.Create two hx accounts(one to bind with BTC,the other one bind with LTC).Please make sure wallet is unlocked.\n\n\nunlocked \n wallet_create_account hxtest001\nwallet_create_account hxtest001\n1168399ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n\"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\"\n\nunlocked \n wallet_create_account hxtest002\nwallet_create_account hxtest002\n1680829ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n\"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\"\n\n\n\n2.Create a BTC address and a LTC address.\n\n\nunlocked \n create_crosschain_symbol BTC\ncreate_crosschain_symbol BTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Addr.importAddr\" ,\"params\" : {\"chainId\":\"btc\" ,\"addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"}}\n1304280ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n{\n  \"addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\n  \"pubkey\": \"0244d2c2cea8d2324096a0fd2df9d4cc38e4db9e61a896b23fa0ba21d69c274a28\",\n  \"wif_key\": \"L3tL4hhs1mCFjj6zJqJqF6qPpxZvmSm7cHzakMfTmq8MWBDEfBPJ\"\n}\nunlocked \n create_crosschain_symbol LTC\ncreate_crosschain_symbol LTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Addr.importAddr\" ,\"params\" : {\"chainId\":\"ltc\" ,\"addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"}}\n1688432ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n{\n  \"addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\n  \"pubkey\": \"0201115d04f29783acab2ce61fefd5e71678f3b99a1bb029e59600da1b67806b29\",\n  \"wif_key\": \"T4GPU51McSfjJFtD8NKWnJj1qDWtef2452SjvMvsnqexcs7odn6E\"\n}\n\n\n\n3.Bind \nhxtest001\n to created BTC address,bind \nhxtest002\n to created LTC address.\n\n\nunlocked \n bind_tunnel_account hxtest001 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC true\nbind_tunnel_account hxtest001 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC true\n{\n  \"ref_block_num\": 633,\n  \"ref_block_prefix\": 3017921153,\n  \"expiration\": \"2018-09-05T06:44:05\",\n  \"operations\": [[\n  10,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"crosschain_type\": \"BTC\",\n\"addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"account_signature\": \"2002cc5bcd46ef8359e7fd4383fad68b5e583aa57c3a3e0e79d045af54f161aa334f370531646cb48d783005bec6306c63ef7f1fd4b1e3f9f4d16ec8c7964682b9\",\n\"tunnel_address\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\n\"tunnel_signature\": \"HyLo47ghpBGKoWzmhzz5urzJ3WlFSoq2beHtrFwBDOpIeDfqWs+7sP8aNRhwztMboi2CjubDsz8dWoPJ0ABwtzc=\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"1f4eb80b086c2598621bfa2463913ed061d05825302c320db600fad3aec2f5f5c70e76e3056f2cc29a44efeaa81a7f8c42fee277a391e68926f5cdc39e83be90d7\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"0cfffec187b994fc6a4f2ff6b5cdadff17fd2c7c\"\n}\n\nunlocked \n bind_tunnel_account hxtest002 LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC true\nbind_tunnel_account hxtest002 LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC true\n{\n  \"ref_block_num\": 644,\n  \"ref_block_prefix\": 1864335149,\n  \"expiration\": \"2018-09-05T06:45:00\",\n  \"operations\": [[\n  10,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"crosschain_type\": \"LTC\",\n\"addr\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"account_signature\": \"1f415f619420ec932059322b6a306f9a250309386e9ac8f7d5f1bc511d6ec440e93cf8408e3bb1ea2097d2a11e097a8e76c48354b86379b963191426819f6e6639\",\n\"tunnel_address\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\n\"tunnel_signature\": \"HydULKgPGMRuRyTLDGjqZCGFkNeSUXU99cRKRK+CxxakGmnA773SkWz8kF6jPwxqKpG0IxpBi5OuO5C4jsXTQrE=\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"1f060d204b74d7ea171af75cdb4635ac4b510dc4d3416e71ebfc87017961aa09d24e0388a80b8016c2ed7c4f77d391131b81245909d991c29818fcfd8b82fe6f62\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"47a0ab550387694d3d5c9068723b44f7954b9281\"\n}\n\n\n\n4.Query bind result.\n\n\nget_binding_account hxtest001 BTC\n[{\n\"id\": \"2.6.0\",\n\"owner\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"chain_type\": \"BTC\",\n\"bind_account\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"\n  }\n]\nunlocked \n get_binding_account hxtest002 LTC\nget_binding_account hxtest002 LTC\n[{\n\"id\": \"2.6.1\",\n\"owner\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"chain_type\": \"LTC\",\n\"bind_account\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"\n  }\n]\n\n\n\nSenator Create hot-cold multisign address\n\n\n1.Create LTC asset on hx blockchain,if you want to create asset by senator,please import private key of senator.\n\n\nunlocked \n import_key guard0 5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\nimport_key guard0 5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\n297029ms th_a   wallet.cpp:532copy_wallet_file ] backing up wallet wallet.json to before-import-key-2856e806.wallet\n297035ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n297040ms th_a   wallet.cpp:532copy_wallet_file ] backing up wallet wallet.json to after-import-key-2856e806.wallet\ntrue\n\nunlocked \n wallet_create_asset  guard0 LTC 8 210000000 100000  true\nwallet_create_asset  guard0 LTC 8 210000000 100000  true\n{\n  \"ref_block_num\": 1698,\n  \"ref_block_prefix\": 965591732,\n  \"expiration\": \"2018-09-05T08:16:50\",\n  \"operations\": [[\n  75,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"issuer\": \"1.2.31\",\n\"symbol\": \"LTC\",\n\"issuer_addr\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"precision\": 8,\n\"max_supply\": 210000000,\n\"core_fee_paid\": 100000,\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f440c5e0c94bccb8f270efb8e814ea24f66b1b4f5a5a7fd63b1452571af7ffb5e054bedf8b307b428b3dc32e1e624fbf235575798d29b652949840c70b99456d9\"],\n  \"block_num\": 0,\n  \"trxid\": \"c035858485c926ea915f4945a6c2ff834a7d0e58\"\n}\n\n\n\n2.Update all senators on hx blockchain,after update,system wil create a new LTC hot-cold multisign address.\n\n\nunlocked \n update_asset_private_keys  guard0 LTC true\nunlocked \n update_asset_private_keys  guard1 LTC true\nunlocked \n update_asset_private_keys  guard2 LTC true\nunlocked \n update_asset_private_keys  guard3 LTC true\nunlocked \n update_asset_private_keys  guard4 LTC true\nunlocked \n update_asset_private_keys  guard5 LTC true\nunlocked \n update_asset_private_keys  guard6 LTC true\n\n\n\n3.Query hot-cold multisign address.\n\n\nunlocked \n get_multisig_account_pair LTC\nget_multisig_account_pair LTC\n[{\n\"id\": \"2.7.2\",\n\"chain_type\": \"LTC\",\n\"bind_account_hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\",\n\"redeemScript_hot\": \"5521023db7379f0761ccbb4628c74eff5b67937bf2f3a3140d11aac56ca8780d33354d2102f0449390eb888b752fecd1f8dd381d95761c31a9a34511d3f992e9a078e170902103dc79cb12340d4d4f5a40a9ca05e058d1f6ff2691ea61aa1b05eb1330de0b39622102ac93a669ba8d75a8cb29e93e89bba6686886e93dac792222f0ee0dae1f4bd64321033a8a01b9c86746c1e24a4212979439a3a882be78fe572880a3f60aa70bc236fb2103c9e8d18f2a7e55088fae8a9e8d733e1bf167cdb4f2bfddbd285a7956cab8df77210312956e995aa696c3da4e34bdbae5a8f02efcff4ec1d51154eafc7ef64e55270757ae\",\n\"bind_account_cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"redeemScript_cold\": \"5521036cba57ae77502b6e286b9c04f4074683fc5014d9d84773f0db2fb13d7a6b10f7210345156da8779b5a5c012418968e6f45abda30cbffac2c13d9a82f846ffc5bde67210243fe236e6578945ffbe123602d963ec4bcec6b997775463dfe3c17b90f3b69ab210204e31aa757d19b49171eaf4392bfae8a2e167ab9b0d26211e6bf34f9f345da152102ed336e6612a615aeb97a4ecbdd8de8055f5a0516bfcda8483136d3053c213d9c210367aec8c7ce911ba88f94ff6b16943c3688e3d87c384da6926ea28ea7249db44121035ef1d0343c809639e64799e897169f95b7393645402ebc81e63c955c9e9ff6a757ae\",\n\"effective_block_num\": 0,\n\"end_block\": 4294967295\n  }\n]\n\n\n\n4.Initiate a proposal to enable multiple signature addresses to take effect.\n\n\nunlocked \n account_change_for_crosschain guard0 LTC MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z 10000 true\n\naccount_change_for_crosschain guard0 LTC MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z 10000 true\n{\n  \"ref_block_num\": 1788,\n  \"ref_block_prefix\": 3124051331,\n  \"expiration\": \"2018-09-05T08:24:35\",\n  \"operations\": [[\n  28,{\n\"type\": 0,\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"proposer\": \"1.2.31\",\n\"fee_paying_account\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"expiration_time\": \"2018-09-05T11:01:16\",\n\"proposed_ops\": [{\n\"op\": [\n  74,{\n\"chain_type\": \"LTC\",\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  }\n]\n  }\n],\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"20157bc57e7816373e294fa901ac5e0171925a5a0904984775af6b3d20cc56cccb3da02dcc289998115e4ee91af01acf0d704bf28d534eab9b04f4cd52ccc5fd72\"],\n  \"block_num\": 0,\n  \"trxid\": \"b503fa3d5a2513eba3c4e55c59345ec5376e53ec\"\n}\n\n\n\n5.Get proposal id.\n\n\nunlocked \n get_proposal_for_voter guard0\nget_proposal_for_voter guard0\n[{\n\"id\": \"1.10.1\",\n\"proposer\": \"1.2.31\",\n\"expiration_time\": \"2018-09-05T11:01:16\",\n\"proposed_transaction\": {\n  \"ref_block_num\": 0,\n  \"ref_block_prefix\": 0,\n  \"expiration\": \"2018-09-05T11:01:16\",\n  \"operations\": [[\n  74,{\n\"chain_type\": \"LTC\",\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  }\n]\n  ],\n  \"extensions\": []\n},\n\"required_active_approvals\": [],\n\"available_active_approvals\": [],\n\"required_owner_approvals\": [],\n\"available_owner_approvals\": [],\n\"available_key_approvals\": [],\n\"approved_key_approvals\": [],\n\"disapproved_key_approvals\": [],\n\"required_account_approvals\": [\n  \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n  \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\",\n  \"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\",\n  \"HXGu1qvt9pG55W3CfAETgwDFi2NwvWQGV4y\",\n  \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\",\n  \"HXMGFZwHXyiFj1MUwCVMoyzqBJ4CuTC7xpX\",\n  \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\"\n],\n\"type\": \"committee\"\n  }\n]\n\n\n\n6.Approve proposal\uff0cmore than two-thirds of the senators agreed with the proposal, multiple addresses will to take effect.\n\n\nunlocked \n approve_proposal guard0 1.10.1 {\"key_approvals_to_add\": [\"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\", \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\", \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\", \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\", \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\"]}  true\n\napprove_proposal guard0 1.10.1 {\"key_approvals_to_add\": [\"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\", \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\", \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\", \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\", \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\"]}  true\n{\n  \"ref_block_num\": 1833,\n  \"ref_block_prefix\": 1461401128,\n  \"expiration\": \"2018-09-05T08:28:50\",\n  \"operations\": [[\n  29,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"fee_paying_account\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"proposal\": \"1.10.1\",\n\"active_approvals_to_add\": [],\n\"active_approvals_to_remove\": [],\n\"owner_approvals_to_add\": [],\n\"owner_approvals_to_remove\": [],\n\"key_approvals_to_add\": [\n  \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n  \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\",\n  \"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\",\n  \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\",\n  \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\"\n],\n\"key_approvals_to_remove\": [],\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"204e95fa9b4f43955e43e3c577d4f262ffc1897e7de31268b5440bbdd4231a20ca46754f39c3e854d811f3684f1a750354edc7bd2c08c046319067f3c6136e4f1f\", \"1f3e55e7e23ef965fcc91c0637bb2550914d4d9d5a1708e71da6989769c767de0f2cd655083bb371e075ca2d8ffabaf0535d2bbc1b73842446d02988b1a9aa0254\",\"2073a6c02b2bb3bc0d317cca87b192362b643b948df5a738a3a2c666f3958f67617ede3cfc01fcf3fc831cf057dc31e02886d7b431d6c623dbb1caa67265646e27\",\"207d03876702431521094afc59e8635441ef05e0f7f670190608af71db343740d511ec7bc8d76bcfb14be2708b07b2c599f3e582ecb4c0776f9ead9f89714f15d0\",\"20015ef8677508aefdf0a8591779c2befb58d226860d6f1ac4b536da809d4380e74499ee44528db9a536814d3b5d35d1e3e7c1028b9b98172cc85da5cc53a37afd\"],\n  \"block_num\": 0,\n  \"trxid\": \"ab889c45010eea6768ccff2d0d678c6ddcd71418\"\n}\n\n\n\n7.Query multi-sign address,if \neffective_block_num\n is not 0,means this addres has take effect.\n\n\nunlocked \n get_multisig_account_pair LTC\nget_multisig_account_pair LTC\n[{\n\"id\": \"2.7.2\",\n\"chain_type\": \"LTC\",\n\"bind_account_hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\",\n\"redeemScript_hot\": \"5521023db7379f0761ccbb4628c74eff5b67937bf2f3a3140d11aac56ca8780d33354d2102f0449390eb888b752fecd1f8dd381d95761c31a9a34511d3f992e9a078e170902103dc79cb12340d4d4f5a40a9ca05e058d1f6ff2691ea61aa1b05eb1330de0b39622102ac93a669ba8d75a8cb29e93e89bba6686886e93dac792222f0ee0dae1f4bd64321033a8a01b9c86746c1e24a4212979439a3a882be78fe572880a3f60aa70bc236fb2103c9e8d18f2a7e55088fae8a9e8d733e1bf167cdb4f2bfddbd285a7956cab8df77210312956e995aa696c3da4e34bdbae5a8f02efcff4ec1d51154eafc7ef64e55270757ae\",\n\"bind_account_cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"redeemScript_cold\": \"5521036cba57ae77502b6e286b9c04f4074683fc5014d9d84773f0db2fb13d7a6b10f7210345156da8779b5a5c012418968e6f45abda30cbffac2c13d9a82f846ffc5bde67210243fe236e6578945ffbe123602d963ec4bcec6b997775463dfe3c17b90f3b69ab210204e31aa757d19b49171eaf4392bfae8a2e167ab9b0d26211e6bf34f9f345da152102ed336e6612a615aeb97a4ecbdd8de8055f5a0516bfcda8483136d3053c213d9c210367aec8c7ce911ba88f94ff6b16943c3688e3d87c384da6926ea28ea7249db44121035ef1d0343c809639e64799e897169f95b7393645402ebc81e63c955c9e9ff6a757ae\",\n\"effective_block_num\": 1843,\n\"end_block\": 4294967295\n  }\n]\n\n\n\nDeposit\n\n\nMake sure created BTC/LTC address\n balance is not 0 on bitcoin chain/litecoin chain.Has two methods to deposit BTC/LTC to hx blockchain.\n\n\n1.Import private key of BTC and LTC addresses to each other\n mainnet blockchain. \n\n\n\n\nDeposit BTC to account \nhxtest001\n\n\n\n\nIn bitcoin chain,transfer BTC to \nhot address\n : \n\"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\"\n.Wait about 40 minutes,account hxtest001 will receive BTC.Query balance of account hxtest001.\n\n\nunlocked \n get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 1000000000,\n\"asset_id\": \"1.3.1\"\n  }\n]\n\n\n\n\n\nDeposit LTC to account \nhxtest002\n\n\n\n\nIn litcoin chain,transfer LTC to \nhot address\n : \nMErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\n.Wait about 10 minutes,account hxtest002 will receive LTC.Query balance of account hxtest002.\n\n\nunlocked \n get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": \"84899552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]\n\n\n\n2.Use cli-wallet command of hx blockchain\n\n\n\n\nDeposit BTC to account \nhxtest001\n\n\n\n\n(1)createrawtransaction:sender address/receiver address/transfer amount/transfer coin symbol\n\n\nunlocked \n createrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM  35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd 10 BTC\ncreaterawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM  35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd 10 BTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Trans.createTrx\" , \"params\" : {\"chainId\":\"btc\" ,\"from_addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\"dest_info\":{\"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\":1}}}\n{\n  \"hex\": \"02000000010b2b180e1aa5bfc150fea349e1090ccc1721b01e2887c4c25ff9ca96afe6d1ef0000000000ffffffff02c038c023000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\n  \"scriptPubKey\": [\n\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"\n  ],\n  \"trx\": {\n\"hash\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"version\": 2,\n\"vin\": [{\n    \"scriptSig\": {\n      \"asm\": \"\",\n      \"hex\": \"\"\n    },\n    \"sequence\": 4294967295,\n    \"txid\": \"efd1e6af96caf95fc2c487281eb02117cc0c09e149a3fe50c1bfa51a0e182b0b\",\n    \"vout\": 0\n  }\n],\n\"vout\": [{\n    \"n\": 0,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"\n      ],\n      \"asm\": \"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\n      \"hex\": \"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\n      \"reqSigs\": 1,\n      \"type\": \"pubkeyhash\"\n    },\n    \"value\": \"5.99800000000000022\"\n  },{\n    \"n\": 1,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\"\n      ],\n      \"asm\": \"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\n      \"hex\": \"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\n      \"reqSigs\": 1,\n      \"type\": \"scripthash\"\n    },\n    \"value\": \"10.00000000\"\n  }\n],\n\"vsize\": 117\n  }\n}\n\n\n\n(2)signrawtransaction:sender address/transfer coin symbol/return value of command createrawtransaction/if broadcast\n\n\nunlocked \n signrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"QR9Zdmi94TkX4tvuQBCgZxXHTpCFTU358v\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\nsignrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\n\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b594000000006b483045022100f19d516c64d7d4acbda6af9b7b3cc4dbacc5cc8e98e669d032740a612d6f2977022044487e5e0b68ab7fdda74d3d0d8d5ac3ee10c55162cb9894329e60270fe270ac012103556af2f0ca77d324abfb49ad3d78ddb9cb3fbc4da3c53af933d6b567527b9022ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\"\n\n\n\n(3)Query balance of account hxtest001.\n\n\nunlocked \n get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 1000000000,\n\"asset_id\": \"1.3.1\"\n  }\n]\n\n\n\n\n\nDeposit LTC to account \nhxtest002\n\n\n\n\n(1)createrawtransaction:sender address/receiver address/transfer amount/transfer coin symbol\n\n\nunlocked \n createrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8  MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD 849 LTC\ncreaterawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8  MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD 849 LTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Trans.createTrx\" , \"params\" : {\"chainId\":\"ltc\" ,\"from_addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\"dest_info\":{\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\":1}}}\n{\n  \"hex\": \"02000000010b2b180e1aa5bfc150fea349e1090ccc1721b01e2887c4c25ff9ca96afe6d1ef0000000000ffffffff02c038c023000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\n  \"scriptPubKey\": [\n\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"\n  ],\n  \"trx\": {\n\"hash\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"version\": 2,\n\"vin\": [{\n    \"scriptSig\": {\n      \"asm\": \"\",\n      \"hex\": \"\"\n    },\n    \"sequence\": 4294967295,\n    \"txid\": \"efd1e6af96caf95fc2c487281eb02117cc0c09e149a3fe50c1bfa51a0e182b0b\",\n    \"vout\": 0\n  }\n],\n\"vout\": [{\n    \"n\": 0,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"\n      ],\n      \"asm\": \"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\n      \"hex\": \"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\n      \"reqSigs\": 1,\n      \"type\": \"pubkeyhash\"\n    },\n    \"value\": \"5.99800000000000022\"\n  },{\n    \"n\": 1,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n      ],\n      \"asm\": \"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\n      \"hex\": \"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\n      \"reqSigs\": 1,\n      \"type\": \"scripthash\"\n    },\n    \"value\": \"848.99552000\"\n  }\n],\n\"vsize\": 117\n  }\n}\n\n\n\n(2)signrawtransaction:sender address/transfer coin symbol/return value of command createrawtransaction/if broadcast\n\n\nunlocked \n signrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"QR9Zdmi94TkX4tvuQBCgZxXHTpCFTU358v\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\nsignrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\n\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b594000000006b483045022100f19d516c64d7d4acbda6af9b7b3cc4dbacc5cc8e98e669d032740a612d6f2977022044487e5e0b68ab7fdda74d3d0d8d5ac3ee10c55162cb9894329e60270fe270ac012103556af2f0ca77d324abfb49ad3d78ddb9cb3fbc4da3c53af933d6b567527b9022ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\"\n\n\n\n(3)Query balance of account hxtest002.\n\n\nunlocked \n get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": \"84899552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]\n\n\n\nExchange Flow\n\n\n\n\nExchange Contract\n\n\n\n\nWrite a exchange contract,compile to gpc file, then register contract to hyperexchange chain.(Please make sure \nhxtest001\n has enough \nHX\n)\n\n\nunlocked \n register_contract hxtest001 0.001 10000 \"E:/link_mytest/blocklink_e\nxchange.lua.gpc\"\n\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\"\n\n\n\n\n\nCurrency Exchange\n\n\n\n\n1.hxtest001 deposit 1 BTC to contract.\n\n\nunlocked \n transfer_to_contract hxtest001 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\n 1 \"BTC\" \"\" 0.001 10000 true\ntransfer_to_contract hxtest001 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s 1 \"BTC\" \"\" 0\n.001 10000 true\n{\n  \"ref_block_num\": 3030,\n  \"ref_block_prefix\": 4031504198,\n  \"expiration\": \"2018-09-05T10:13:20\",\n  \"operations\": [[\n  81,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5\nb72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"amount\": {\n  \"amount\": 100000000,\n  \"asset_id\": \"1.3.1\"\n},\n\"param\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"2027af412ac03384b9a4ac1d6d81ca1e3947cb6a2e3b18144e0d242b5e09f5bb22754e9b115\n55bf33a22f84576be7b95f1cb0d69fb43e0fc006b701468b8be5f6e\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"2f3b7e9b8bc48b158030b27a44e40a4e2ac8b061\"\n}\n\n\n\n2.Put on a sell order.\n\n\nunlocked \n invoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s putOnSellOrder \"BTC,100000000,LTC,250000000\"\ninvoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s putOn\nSellOrder \"BTC,100000000,LTC,250000000\"\n{\n  \"ref_block_num\": 3059,\n  \"ref_block_prefix\": 4003603969,\n  \"expiration\": \"2018-09-05T10:15:45\",\n  \"operations\": [[\n  79,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5b72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"contract_api\": \"putOnSellOrder\",\n\"contract_arg\": \"BTC,100000000,LTC,250000000\",\n\"offline\": false\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f76a6144438f6c571607304348307d3c087b332b3548f50154d864932ccca63815c7d357c51f5a67799deed95af070fad416a022e9f058768d08207ebd55baaf0\"],\n  \"block_num\": 0,\n  \"trxid\": \"9d141aa4782e97187f152031135d1bdc10ef7306\"\n}\n\n\n\n3.hxtest002 put on a order to buy 1BTC by call the interface of contract.\n\n\nunlocked \n transfer_to_contract hxtest002 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\n 10 \"LTC\" \"BTC,100000000\" 0.001 10000 true\ntransfer_to_contract hxtest002 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s 10 \"LTC\" \"BTC,100000000\" 0.001 10000 true\n{\n  \"ref_block_num\": 13361,\n  \"ref_block_prefix\": 2405013881,\n  \"expiration\": \"2018-09-06T01:15:00\",\n  \"operations\": [[\n  81,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"caller_pubkey\": \"034317fbda4543caa127aa82a0558194c213066762b6ce15c5215d756ff301efaf\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"amount\": {\n  \"amount\": 1000000000,\n  \"asset_id\": \"1.3.2\"\n},\n\"param\": \"BTC,100000000\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f6f51e1b0406931a47910734b8d8ee2d3a7b1bf9ff7767cf7a8d427a1120534250b5c9fbaeffb1b48d5df9fb6fb46d81bdefaadca19099aa80d58eed1f064e000\"],\n  \"block_num\": 0,\n  \"trxid\": \"d4ef8b05a42e2cff7a6443902aa4b6cc3d647851\"\n}\n\n\n\n4.Query balance of hxtest002.Amount will be 1*precision which \nasset_id\n is \n1.3.1\n\n\nunlocked \n get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": 999995100,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 100000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": \"84649552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]\n\n\n\n5.Withdraw bought 2.5 LTC to hxtest001.\n\n\nunlocked \n invoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s withdrawAsset \"LTC,250000000\"\ninvoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s withdrawAsset \"LTC,250000000\"\n{\n  \"ref_block_num\": 13430,\n  \"ref_block_prefix\": 452881267,\n  \"expiration\": \"2018-09-06T01:21:00\",\n  \"operations\": [[\n  79,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5b72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"contract_api\": \"withdrawAsset\",\n\"contract_arg\": \"LTC,250000000\",\n\"offline\": false\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"2052608a77d042af3020341aa6d0e5b965dc8e9447ac17b22302b7fbac2d20c65375cdbf184adf94e39863e043d0f301bf7058745f55dcb8d61aa0556213d47cf1\"],\n  \"block_num\": 0,\n  \"trxid\": \"7d56c9545a42729ed6e55df43448c53734d72efe\"\n}\n\n\n\n6.Query balance of hxtest001,amount will be 2.5*precision which \nasset_id\n is \n1.3.2\n.\n\n\nunlocked \n get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 999984290,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 900000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": 250000000,\n\"asset_id\": \"1.3.2\"\n  }\n]\n\n\n\nWithdrawal\n\n\n1.Withdraw to an address of litecoin chain.Will create a crosschain transaction.\n\n\nunlocked \n withdraw_cross_chain_transaction hxtest001 2.5 LTC LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA \"\" true\n\nwithdraw_cross_chain_transaction hxtest001 2.5 LTC LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA \"\" true\n{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:24:15\",\n  \"operations\": [[\n  61,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"withdraw_account\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"amount\": \"2.5\",\n\"asset_symbol\": \"LTC\",\n\"asset_id\": \"1.3.2\",\n\"crosschain_account\": \"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\",\n\"memo\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f73948075b5403e9d99d26bf6cd2c461f46d7844df7bc1ea0dbf107535678add57a836bd947c701a14a13b876939a217ae0c3062e262bc527ec458c550b014251\"],\n  \"block_num\": 0,\n  \"trxid\": \"9b2df1bc9376fd649d569bf4345165bd4523883a\"\n}\n\n\n\n2.Query created crosschain transaction.\n\n\nunlocked \n get_crosschain_transaction 1\nget_crosschain_transaction 1\n[[\n\"977b443566b1105a2a2159cb7a4d9a023dd44f92\",{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:14:45\",\n  \"operations\": [[\n  62,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"ccw_trx_ids\": [\n  \"9b2df1bc9376fd649d569bf4345165bd4523883a\"\n],\n\"withdraw_source_trx\": {\n  \"hex\": \"020000000196aa8d21549926bb0a2b2c163e91c1ff783ff06158756c33f5b4758057c860770000000000ffffffff02e02be50e000000001976a914f542d013712017a417defd6a29615b2e1a2b84a288ac803125450200000017a9144c4691c0f89c01775330e84d307e45f1a4f101478700000000\",\n  \"scriptPubKey\": [\n\"a9144c4691c0f89c01775330e84d307e45f1a4f1014787\"\n  ],\n  \"trx\": {\n\"hash\": \"6f9885fae162d1b492cc2e764d48d44c37df6fac7018411f54109f485a7fbd4d\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"6f9885fae162d1b492cc2e764d48d44c37df6fac7018411f54109f485a7fbd4d\",\n\"version\": 2,\n\"vin\": [{\n\"scriptSig\": {\n  \"asm\": \"\",\n  \"hex\": \"\"\n},\n\"sequence\": 4294967295,\n\"txid\": \"7760c8578075b4f5336c755861f03f78ffc1913e162c2b0abb269954218daa96\",\n\"vout\": 0\n  }\n],\n\"vout\": [{\n\"n\": 0,\n\"scriptPubKey\": {\n  \"addresses\": [\n\"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\"\n  ],\n  \"asm\": \"OP_DUP OP_HASH160 f542d013712017a417defd6a29615b2e1a2b84a2 OP_EQUALVERIFY OP_CHECKSIG\",\n  \"hex\": \"76a914f542d013712017a417defd6a29615b2e1a2b84a288ac\",\n  \"reqSigs\": 1,\n  \"type\": \"pubkeyhash\"\n},\n\"value\": \"2.49900000000000011\"\n  },{\n\"n\": 1,\n\"scriptPubKey\": {\n  \"addresses\": [\n\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  ],\n  \"asm\": \"OP_HASH160 4c4691c0f89c01775330e84d307e45f1a4f10147 OP_EQUAL\",\n  \"hex\": \"a9144c4691c0f89c01775330e84d307e45f1a4f1014787\",\n  \"reqSigs\": 1,\n  \"type\": \"scripthash\"\n},\n\"value\": \"97.50000000000000000\"\n  }\n],\n\"vsize\": 117\n  }\n},\n\"miner_broadcast\": \"1.6.4\",\n\"miner_address\": \"HX2WbZT9ZgYQC92BdUGAqkbHXpmYqgxXdex\",\n\"asset_id\": \"1.3.2\",\n\"asset_symbol\": \"LTC\",\n\"crosschain_fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.2\"\n}\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"2073f66bb19fd429246d16f377794707461fd9a6efe7264b72eb4b128ebabe6a454adbcf879f0eaaa5c72b124e5ae1b1e0b4b7d339cd5e077c44081366b5c5d286\"]\n}],[\n\"9b2df1bc9376fd649d569bf4345165bd4523883a\",{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:24:15\",\n  \"operations\": [[\n  61,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"withdraw_account\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"amount\": \"2.5\",\n\"asset_symbol\": \"LTC\",\n\"asset_id\": \"1.3.2\",\n\"crosschain_account\": \"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\",\n\"memo\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f73948075b5403e9d99d26bf6cd2c461f46d7844df7bc1ea0dbf107535678add57a836bd947c701a14a13b876939a217ae0c3062e262bc527ec458c550b014251\"]\n}\n  ]\n]\n\n\n\n3.Sign transaction,more than two-thirds of the senators sign the transaction, it will broadcast success.\n\n\nunlocked \n senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard0\nunlocked \n senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard1\nunlocked \n senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard2\nunlocked \n senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard3\nunlocked \n senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard4\n\n\n\n4.Query balance of hxtest001,amount will be 0 which \nasset_id\n is \n1.3.2\n.\n\n\nunlocked \n get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 999984290,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 900000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": 0,\n\"asset_id\": \"1.3.2\"\n  }\n]\n\n\n\n5.On litecoin chain,after create some blocks,you can get balance of address \nLhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\n,will be 2.49900000(minus fee 0.001).\n\n\nMulti-sign address\n\n\n\n\nHow to realize\n\n\n\n\nUsing the feature that HX public key can be unlimited derived, we combine a series of HX public keys into an ordered queue to generate a public key, whose corresponding address is a multi-signature address. (It can not be distinguished from ordinary address). It supports maximum 15 public keys to form a multi-signature address.\n\n\n\n\nCreate multi-sign address\n\n\n\n\ncreate_multisignature_address(const string\n account, const fc::flat_set\npublic_key_type\n pubs, int required, bool broadcast)\n\n\n\nThis is on-chain operation. If multi-signature address information already exists on chain, creation will fail for repeated using the same address \n public keys.\n\n\n\n\n\n\nacquire public key through private keys\n\n\n\n\npublic_key_type wallet_api::get_pubkey_from_priv(const string\n privkey)\n\n\n\n\n\nacquire public key via wallet account, which must exist in the wallet.\n\n\n\n\npublic_key_type wallet_api:: get_pubkey_from_account (const string\n acc_name)\n\n\n\n\n\ncheck detail information of address,Return multi-address detail information, which includes address composition and minimum number of signatures.\n\n\n\n\nvariant_object wallet_api::get_multisig_address(const address\n addr)\n\n\n\n\n\nMulti-sign address Transaction\n\n\n\n\n\n\nCreate an offline transaction which its timeout period is about one day\n\n\n\n\nTransaction interface\uff1a\n\n\nsigned_transaction transfer_from_to_address(string from, string to, string amount, string asset_symbol, string memo)\n\n\n\n\n\n\n\nSign transaction order respectively by account who created this multi-sign address.\n\n\n\n\nSignature interface\uff1a\n\n\nsigned_transaction wallet_api::sign_multisig_trx(const address\n addr, const signed_transaction\n trx)\n\n\n\n\n\n\n\nCollect signatures, broadcast after combine. Broadcast will be successful only signatures reaches required number. \n\n\n\n\ncombine and broadcast interface\uff1a\n\n\nfull_transaction wallet_api::combine_transaction(const vector\nsigned_transaction\n trxs, bool broadcast)\n\n\n\n\n\n\n\ndecode base58 string,you can parse a base58 string of a generated transaction and see the details of the transaction body, including the number of signatures.\n\n\n\n\n\n\nETH and ERC20\n\n\n\n\ncreating ETH assets is the same than creating other assets, the interface of creating ERC20 is as below:\n\n\n\n\nfull_transaction wallet_create_erc_asset(\nstring issuer,//creator\nstring symbol,//symbol(must be startwith ERC)\nuint8_t precision,//precision\nshare_type max_supply,//max_supply\nshare_type core_fee_paid,//fee\nstd::string erc_address,//(erc20 contract address and erc20 contract precision,split with '|')\nbool broadcast = false);\nFor example\uff1a\nwallet_create_erc_asset guard0 ERCEOS 8 210000000 100000 \"0x1fb22d0eb45d1bc4ef6a9cb9a8db6972ce886f65|18\" true\n\n\n\n\n\neth and erc20 multi-sign account creation process:\n\n\n\n\nOrdinary asset process (please refer to the process of creating LTC asset on hx chain as above):\nUpdate_asset_private_keys \u2013\n check multi-sign address has been created-\n Create Proposal -\n check Proposal -\n Confirm Proposal -\n Multi-Sign Account become Effective\n\n\nETH and ERC20 asset process:\nUpdate_asset_private_keys-\n check multi-sign contract has been created -\n Sign \n broadcast multi-sign contract to Ethernet chain -\n heck multi-sign address has been created -\n Create proposal -\n check proposal -\n Pass proposal -\n Multi-signed account become effective\nrelevant interface:\ncheck multi-sign contract transaction:\n\n\nget_eth_multi_account_trx(const int \n mul_acc_tx_state);\n\n\n\nadded query status as below,The cold and hot wallet addresses created by the query require a certain amount of eth for the transaction fee of eth and erc20:\n\n\n\n\nSign unsigned contract and multi-sign contract\uff1a\n\n\nsenator_sign_eths_multi_account_create_trx(const string\n tx_id, const string\n senator);\n\n\n\nTwo parameters are the transaction ID of unsigned transaction respectively, obtained by checking previous interface 0 status, and the senator who signed).\n\n\n\n\nWithdraw process for ETH and ERC20\n\n\n\n\nordinary assets process (refer to withdraw process as above):\n\n\nUser initiates cross-chain transfer (status becomes 0)-\ncitizen creates unsigned multi-sign transaction (1)-\nsenator signature status 1 transaction (2)-\n citizen sign jointly and broadcast (3)-\nchain confirms transaction and tells the HX chain by collecting (4)\n\n\n\nEth and erc20 asset process:\uff1a\n\n\nUser initiates cross-chain transfer (status becomes 0) -\n citizen creates unsigned Ethereum call parameter transaction (1) -\n senator signature status 1 transaction (2) -\n citizen call parameters jointly and creates unsigned ETH transaction (7)-\ndesignated senator signature status 7 transaction (8)-\nchain confirms transaction and tells HX chain by acquisition (4)\n\n\n\nrelated interface\uff1a\ndesignated senator signs transaction:\n    senator_sign_eths_final_trx(const string\n tx_id, const string\n senator);\n\n\n\n\nETH and ERC20 cold \n hot wallet switch process\n\n\n\n\nSame withdraw process as ETH and ERC20, different signature interface for designated senator, see it as below:\n\n\nsenator_sign_eths_coldhot_final_trx(const string\n trx_id, const string \n senator)\n\n\n\n Notice:\nIf you want to do transaction of eth or erc20, need to config ETH and ERC20 token symbol in config.ini of middle-ware\uff1a\n\n\n\n\n\n\ncommand list\n\n\n\n\nBasic Interface\n\n\n\n\n1.info\n\n\nReturn current information, block number and etc. to HX chain\n\n\n\n2.wallet_create_account  name\n\n\ncreate wallet account, return account address\n\n\n\n3.dump_private_key name\n\n\nobtain private keys of wallet account, return address+private keys.\n\n\n\n4.import_key name private_key\n\n\nimport private keys of account `name`\n\n\n\n5.register_account name true\n\n\nThis account name is registered on-chain\n\n\n\n6.transfer_to_address from to amount symbol memo true\n\n\ntransfer to certain address: \nfrom:sent from address \nto\uff1areceive address \namount\uff1a total transfer amount \nsymbol: currency type \nmemo: other information\n\n\n\n7.get_transaction trxid\n\n\ntrxid:transaction id\n\n\nacquire all information of this transaction according to transaction ID, only on-chain transaction can be traced.\n\n\n\n8.get_block blocknum\n\n\ndetail information of one block can be returned according to block number.\nblocknum: block number\n\n\n\n9.get_citizen name\n\n\nreturn citizen detail information according to user name, if this account is not citizen, return empty/blank/void\n\n\n\n10.get_senator_member name\n\n\nreturn senator detail information according to user name, if this account is not senator, return empty/blank/void\n\n\n\n11.create_citizen name url true\n\n\nregister to become a citizen, which can join mining \nname:account name \nurl: website address\n\n\n\n12.create_crosschain_symbol symbol\n\n\ncreate specific assets addresses, return address \nsymbol: currency type\n\n\n\n13.bind_tunnel_account account tunnel_account symbol true\n\n\nbind tunnel account, the address on other chain is binding with current actual account, tunnel_account private key is needed.\naccount: account name \ntunnel_account: an appointed assets address \nsymbol\uff1acurrency type\n\n\n\n14.unbind_tunnel_account account tunnel_account symbol true\n\n\nunbind tunnel account, the address on other chain is bound with current actual account, tunnel_account private key is needed.\n\n\n\n15.get_binding_account account symbol \n\n\ninquire tunnel account of specific assets \naccount: current account name\nsymbol: currency type\n\n\n\n16.get_multisig_account_pair symbol \n\n\nacquire current on-chain multi-signature address of specific currency, which includes multi-signature address history\n\n\n\n17.get_current_multi_address symbol\n\n\nacquire current on-chain multi-signature address of specific currency\n\n\n\n18.withdraw_cross_chain_transaction account amount symbol crosschain_addr memo true\n\n\ninitiate withdrawal request\naccount: withdrawal request initiator\namount:  withdrawal amount \nsymbol\uff1a currency type of withdrawal \ncrosschain_addr: specific assets receive address \nmemo: additional information\n\n\n\n19.refund_request refund_acount txid true\n\n\napply for a cancellation of cross-chain withdrawal \nrunfund_account: account name\ntxid: would like to cancel withdrawal transaction ID\n\n\n\n\n\nAbout Acceptance\n\n\n\n\n1.create_guarantee_order account asset_orign asset_target symbol true\n\n\ncreate acceptance fee,this operation is used for those accounts have HX and would like to exchange to other currencies, such as BTC. \naccount:creator of acceptance fee form \nasset_orign : means the HX can not be used for acceptance fee in this account\nasset_target : the amount of tokens that you would like to exchange to\nsymbol:  currency type\n\n\n\n2.list_guarantee_order symbol all\n\n\nreturn qualified acceptance order queue\nsymbol: assets type/ currency type \nall true/false,if all acceptance order are listed, including completed orders. HX is need as fees during any transaction, however if there is no HX in the account, use other currencies in the account to pay for fees.\n\n\n\n3.get_my_guarantee_order account all\n\n\nreturn to the acceptance order which was created by this address\naccount: account address \nall\uff1a whether includes completed acceptance orders\n\n\n\n4.set_guarantee_id guarantee_id\n\n\nchoose an acceptance order before transaction, this operation is valid once only is operated locally.\nguarantee_id : Acceptance ID\n\n\n\n\n\nSenator related:\n\n\n\n\nSenator in charge of cross-chain assets, most operations are voting related. \n\n\n1.create_senator_member  proposer_account account url expiration_time true\n\n\ncreate an proposal to upgrade specific account(s) to candidate senator(s)\nproposer_account: proposer account \naccount\uff1asenator candidate senator \nurl : website address \nexpiration_time: expiration time\n\n\n\n2.update_senator_formal proposer_account formal expiration_time  true\n\n\nproposal initiator and official senator account \nformal :default set as true, make senator an official senator\n\n\n\n3.senator_appointed_publisher proposer publisher symbol expiration_time true\n\n\nspecify publisher for certain asset \nproposer: proposer\npublisher: feed person (account)/publisher \nsymbol: assets type for feed\n\n\n\n4.citizen_appointed_crosschain_fee proposer fee symbol expiration_time true\n\n\ninitiate a proposal, specify cross-chain withdrawel fee of certain specific assets. \nfee\uff1a fee for cross-chain withdrawal \nsymbol\uff1a cross-chain assets type\n\n\n\n5.citizen_appointed_lockbalance_senator proposer lockbalance expiration_time true\n\n\ninitiate a proposal to modify the amount of pledged deposit and its currency type of an Senator. \nlockbalance: specify the amount of pledged deposit and its currency type of a Senator.\n\n\n\n6.update_asset_private_keys account symbol true\n\n\nit is used to create a pair of private keys of specific assets, and broadcast corresponding public keys on the chain. HX will create a pair of new multi-signature addresses (cold and hot wallets) according to received public keys. \naccount:transaction initiator \nsymbol\uff1aassets type\n\n\n\n7.account_change_for_crosschain proposer symbol hot cold  expiration_time true\n\n\ninitiate a proposal\uff0cin order to validate hot address(wallet) and cold address(wallet) on chain \nsymbol\uff1aasset type\nhot\uff1ahot wallet address\ncold:cold wallet address\n\n\n\n8.get_proposal_for_voter account\n\n\nacquire all necessary proposals for the signature of this account \naccount\uff1acurrent account name\n\n\n\n9.approve_proposal account proposal_id delta true\n\n\naccount: voter \nproposal_id: proposal ID \ndelta: see voting content as below{\"key_approvals_to_add\":[addr]\uff0c\u201ckey_approvals_to_remove\u201d\uff1a[addr]}\n\n\n\n10.get_crosschain_transaction type\n\n\nReturns the withdrawal transaction and status under the corresponding state\ntype\uff1aStatus0,1,2,3,4 \n  0\uff1a withdrawal request status \n  1,2\uff1a waiting for signature or in the process of signing \n  3\uff1a transaction signed and broadcast \n  4\uff1a package this transaction on corresponding chain\n\n\n\n11.senator_sign_crosschain_transaction trxid senator\n\n\nsign withdrawal transaction \ntrxid: under status 1, withdrawal transaction ID \nsenator\uff1aSenator account name\n\n\n\n\n\nContract related\uff1a\n\n\n\n\n1.invoke_contract_testing caller_account_name contract_address_or_name contract_api contract_arg\n\n\ncaller_account_name: caller native account name\ncontract_address_or_name: The contract address or name is invoked\ncontract_api: contract API name\ncontract_arg: The contract parameter is invoked\uff08string\uff09\n\n\n\n2.transfer_to_contract_testing from to amount asset_symbol param\n\n\nfrom: sender\nto: destination contract address\namount: transfer amount\nasset_symbol: asset symbol\nparam: memo\n\n\n\n3.register_contract_testing  caller_account_name contract_filepath\n\n\ncaller_account_name: caller native account name\ncontract_filepath: path of contract file\n\n\n\n4.register_native_contract_testing caller_account_name native_contract_key\n\n\ncaller_account_name: caller native account name\nnative_contract_key: native contract template symbol\n\n\n\n5.upgrade_contract_testing caller_account_name contract_address contract_name contract_desc\n\n\ncaller_account_name: caller native account name\ncontract_address: contract address\ncontract_name: new contract name\uff08must be unique\uff09\ncontract_desc: new contract description\n\n\n\n6.get_contract_registered  block_num\n\n\nblock_num: block height\n\n\n\n7.get_contract_storage_changed block_num\n\n\nblock_num: block height\n\n\n\n8.create_contract_transfer_fee_proposal proposer fee_rate  expiration_time  broadcast\n\n\nproposer: proposal(string)\nfee_rate: fee rate \nexpiration_time: expiration time of proposal \nbroadcast: whether broadcast\n\n\n\n9.register_contract caller_account_name  gas_price gas_limit contract_filepath\n\n\ncaller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_filepath: path of contract file\n\n\n\n10.register_native_contract caller_account_name gas_price gas_limit native_contract_key\n\n\ncaller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nnative_contract_key: native contract template symbol\n\n\n\n11.register_contract_like caller_account_name gas_price gas_limit base\n\n\ncaller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nbase: contract template address\n\n\n\n12.invoke_contract caller_account_name gas_price gas_limit contract_address_or_name contract_api contract_arg\n\n\ncaller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_address_or_name: The contract address or contract name is invoked \ncontract_api: Called contract API name\ncontract_arg: parameter of called contract API\n\n\n\n13.invoke_contract_offline caller_account_name  contract_address_or_name contract_api contract_arg\n\n\ncaller_account_name: caller native account name\ncontract_address_or_name: The contract address or contract name is invoked \ncontract_api: Called contract API name\ncontract_arg: parameter of called contract API\n\n\n\n14.upgrade_contract caller_account_name gas_price gas_limit contract_address contract_name contract_desc\n\n\ncaller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_address: contract address\ncontract_name: contract new name\ncontract_desc: contract description\n\n\n\n15.get_contract_info contract_address_or_name\n\n\ncontract_address_or_name: contract address or name\n\n\n\n16.get_simple_contract_info contract_address_or_name\n\n\ncontract_address_or_name: contract address or name\n\n\n\n17.transfer_to_contract from to amount asset_symbol param gas_price gas_limit broadcast\n\n\nfrom: sender\nto: destination contract address \namount: transfer amount \nasset_symbol: transfer asset symbol \nparam: transfer parameter \ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nbroadcast: whether broadcast\n\n\n\n18.get_contract_balance contract_address\n\n\ncontract_address: contract address\n\n\n\n19.get_contract_addresses_by_owner addr\n\n\naddr: Contract creator user address\n\n\n\n20.get_contracts_by_owner addr\n\n\naddr: Contract creator user address\n\n\n\n21.get_contracts_hash_entry_by_owner addr\n\n\naddr: Contract creator user address\n\n\n\n22.get_contract_events addr\n\n\naddr: contract address\n\n\n\n23.get_contract_events_in_range addr start range\n\n\naddr: contract address\nstart: start block height\nrange: scan block number\n\n\n\n24.get_contract_history contract_id  start end\n\n\ncontract_id: contract address\nstart: start block height\nend: end block height", 
            "title": "Hx-cli Commands"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#preparatory-work", 
            "text": "1.Create two hx accounts(one to bind with BTC,the other one bind with LTC).Please make sure wallet is unlocked.  unlocked   wallet_create_account hxtest001\nwallet_create_account hxtest001\n1168399ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n\"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\"\n\nunlocked   wallet_create_account hxtest002\nwallet_create_account hxtest002\n1680829ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n\"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\"  2.Create a BTC address and a LTC address.  unlocked   create_crosschain_symbol BTC\ncreate_crosschain_symbol BTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Addr.importAddr\" ,\"params\" : {\"chainId\":\"btc\" ,\"addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"}}\n1304280ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n{\n  \"addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\n  \"pubkey\": \"0244d2c2cea8d2324096a0fd2df9d4cc38e4db9e61a896b23fa0ba21d69c274a28\",\n  \"wif_key\": \"L3tL4hhs1mCFjj6zJqJqF6qPpxZvmSm7cHzakMfTmq8MWBDEfBPJ\"\n}\nunlocked   create_crosschain_symbol LTC\ncreate_crosschain_symbol LTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Addr.importAddr\" ,\"params\" : {\"chainId\":\"ltc\" ,\"addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"}}\n1688432ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n{\n  \"addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\n  \"pubkey\": \"0201115d04f29783acab2ce61fefd5e71678f3b99a1bb029e59600da1b67806b29\",\n  \"wif_key\": \"T4GPU51McSfjJFtD8NKWnJj1qDWtef2452SjvMvsnqexcs7odn6E\"\n}  3.Bind  hxtest001  to created BTC address,bind  hxtest002  to created LTC address.  unlocked   bind_tunnel_account hxtest001 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC true\nbind_tunnel_account hxtest001 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC true\n{\n  \"ref_block_num\": 633,\n  \"ref_block_prefix\": 3017921153,\n  \"expiration\": \"2018-09-05T06:44:05\",\n  \"operations\": [[\n  10,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"crosschain_type\": \"BTC\",\n\"addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"account_signature\": \"2002cc5bcd46ef8359e7fd4383fad68b5e583aa57c3a3e0e79d045af54f161aa334f370531646cb48d783005bec6306c63ef7f1fd4b1e3f9f4d16ec8c7964682b9\",\n\"tunnel_address\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\n\"tunnel_signature\": \"HyLo47ghpBGKoWzmhzz5urzJ3WlFSoq2beHtrFwBDOpIeDfqWs+7sP8aNRhwztMboi2CjubDsz8dWoPJ0ABwtzc=\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"1f4eb80b086c2598621bfa2463913ed061d05825302c320db600fad3aec2f5f5c70e76e3056f2cc29a44efeaa81a7f8c42fee277a391e68926f5cdc39e83be90d7\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"0cfffec187b994fc6a4f2ff6b5cdadff17fd2c7c\"\n}\n\nunlocked   bind_tunnel_account hxtest002 LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC true\nbind_tunnel_account hxtest002 LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC true\n{\n  \"ref_block_num\": 644,\n  \"ref_block_prefix\": 1864335149,\n  \"expiration\": \"2018-09-05T06:45:00\",\n  \"operations\": [[\n  10,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"crosschain_type\": \"LTC\",\n\"addr\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"account_signature\": \"1f415f619420ec932059322b6a306f9a250309386e9ac8f7d5f1bc511d6ec440e93cf8408e3bb1ea2097d2a11e097a8e76c48354b86379b963191426819f6e6639\",\n\"tunnel_address\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\n\"tunnel_signature\": \"HydULKgPGMRuRyTLDGjqZCGFkNeSUXU99cRKRK+CxxakGmnA773SkWz8kF6jPwxqKpG0IxpBi5OuO5C4jsXTQrE=\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"1f060d204b74d7ea171af75cdb4635ac4b510dc4d3416e71ebfc87017961aa09d24e0388a80b8016c2ed7c4f77d391131b81245909d991c29818fcfd8b82fe6f62\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"47a0ab550387694d3d5c9068723b44f7954b9281\"\n}  4.Query bind result.  get_binding_account hxtest001 BTC\n[{\n\"id\": \"2.6.0\",\n\"owner\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"chain_type\": \"BTC\",\n\"bind_account\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"\n  }\n]\nunlocked   get_binding_account hxtest002 LTC\nget_binding_account hxtest002 LTC\n[{\n\"id\": \"2.6.1\",\n\"owner\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"chain_type\": \"LTC\",\n\"bind_account\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"\n  }\n]", 
            "title": "Preparatory Work"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#senator-create-hot-cold-multisign-address", 
            "text": "1.Create LTC asset on hx blockchain,if you want to create asset by senator,please import private key of senator.  unlocked   import_key guard0 5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\nimport_key guard0 5JZe9Hv7twngWSEZzvvvDXP5RG1LJGixSz6WJ4D8te9x45kvDuG\n297029ms th_a   wallet.cpp:532copy_wallet_file ] backing up wallet wallet.json to before-import-key-2856e806.wallet\n297035ms th_a   wallet.cpp:1082   save_wallet_file ] saving wallet to file wallet.json\n297040ms th_a   wallet.cpp:532copy_wallet_file ] backing up wallet wallet.json to after-import-key-2856e806.wallet\ntrue\n\nunlocked   wallet_create_asset  guard0 LTC 8 210000000 100000  true\nwallet_create_asset  guard0 LTC 8 210000000 100000  true\n{\n  \"ref_block_num\": 1698,\n  \"ref_block_prefix\": 965591732,\n  \"expiration\": \"2018-09-05T08:16:50\",\n  \"operations\": [[\n  75,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"issuer\": \"1.2.31\",\n\"symbol\": \"LTC\",\n\"issuer_addr\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"precision\": 8,\n\"max_supply\": 210000000,\n\"core_fee_paid\": 100000,\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f440c5e0c94bccb8f270efb8e814ea24f66b1b4f5a5a7fd63b1452571af7ffb5e054bedf8b307b428b3dc32e1e624fbf235575798d29b652949840c70b99456d9\"],\n  \"block_num\": 0,\n  \"trxid\": \"c035858485c926ea915f4945a6c2ff834a7d0e58\"\n}  2.Update all senators on hx blockchain,after update,system wil create a new LTC hot-cold multisign address.  unlocked   update_asset_private_keys  guard0 LTC true\nunlocked   update_asset_private_keys  guard1 LTC true\nunlocked   update_asset_private_keys  guard2 LTC true\nunlocked   update_asset_private_keys  guard3 LTC true\nunlocked   update_asset_private_keys  guard4 LTC true\nunlocked   update_asset_private_keys  guard5 LTC true\nunlocked   update_asset_private_keys  guard6 LTC true  3.Query hot-cold multisign address.  unlocked   get_multisig_account_pair LTC\nget_multisig_account_pair LTC\n[{\n\"id\": \"2.7.2\",\n\"chain_type\": \"LTC\",\n\"bind_account_hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\",\n\"redeemScript_hot\": \"5521023db7379f0761ccbb4628c74eff5b67937bf2f3a3140d11aac56ca8780d33354d2102f0449390eb888b752fecd1f8dd381d95761c31a9a34511d3f992e9a078e170902103dc79cb12340d4d4f5a40a9ca05e058d1f6ff2691ea61aa1b05eb1330de0b39622102ac93a669ba8d75a8cb29e93e89bba6686886e93dac792222f0ee0dae1f4bd64321033a8a01b9c86746c1e24a4212979439a3a882be78fe572880a3f60aa70bc236fb2103c9e8d18f2a7e55088fae8a9e8d733e1bf167cdb4f2bfddbd285a7956cab8df77210312956e995aa696c3da4e34bdbae5a8f02efcff4ec1d51154eafc7ef64e55270757ae\",\n\"bind_account_cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"redeemScript_cold\": \"5521036cba57ae77502b6e286b9c04f4074683fc5014d9d84773f0db2fb13d7a6b10f7210345156da8779b5a5c012418968e6f45abda30cbffac2c13d9a82f846ffc5bde67210243fe236e6578945ffbe123602d963ec4bcec6b997775463dfe3c17b90f3b69ab210204e31aa757d19b49171eaf4392bfae8a2e167ab9b0d26211e6bf34f9f345da152102ed336e6612a615aeb97a4ecbdd8de8055f5a0516bfcda8483136d3053c213d9c210367aec8c7ce911ba88f94ff6b16943c3688e3d87c384da6926ea28ea7249db44121035ef1d0343c809639e64799e897169f95b7393645402ebc81e63c955c9e9ff6a757ae\",\n\"effective_block_num\": 0,\n\"end_block\": 4294967295\n  }\n]  4.Initiate a proposal to enable multiple signature addresses to take effect.  unlocked   account_change_for_crosschain guard0 LTC MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z 10000 true\n\naccount_change_for_crosschain guard0 LTC MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z 10000 true\n{\n  \"ref_block_num\": 1788,\n  \"ref_block_prefix\": 3124051331,\n  \"expiration\": \"2018-09-05T08:24:35\",\n  \"operations\": [[\n  28,{\n\"type\": 0,\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"proposer\": \"1.2.31\",\n\"fee_paying_account\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"expiration_time\": \"2018-09-05T11:01:16\",\n\"proposed_ops\": [{\n\"op\": [\n  74,{\n\"chain_type\": \"LTC\",\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  }\n]\n  }\n],\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"20157bc57e7816373e294fa901ac5e0171925a5a0904984775af6b3d20cc56cccb3da02dcc289998115e4ee91af01acf0d704bf28d534eab9b04f4cd52ccc5fd72\"],\n  \"block_num\": 0,\n  \"trxid\": \"b503fa3d5a2513eba3c4e55c59345ec5376e53ec\"\n}  5.Get proposal id.  unlocked   get_proposal_for_voter guard0\nget_proposal_for_voter guard0\n[{\n\"id\": \"1.10.1\",\n\"proposer\": \"1.2.31\",\n\"expiration_time\": \"2018-09-05T11:01:16\",\n\"proposed_transaction\": {\n  \"ref_block_num\": 0,\n  \"ref_block_prefix\": 0,\n  \"expiration\": \"2018-09-05T11:01:16\",\n  \"operations\": [[\n  74,{\n\"chain_type\": \"LTC\",\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  }\n]\n  ],\n  \"extensions\": []\n},\n\"required_active_approvals\": [],\n\"available_active_approvals\": [],\n\"required_owner_approvals\": [],\n\"available_owner_approvals\": [],\n\"available_key_approvals\": [],\n\"approved_key_approvals\": [],\n\"disapproved_key_approvals\": [],\n\"required_account_approvals\": [\n  \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n  \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\",\n  \"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\",\n  \"HXGu1qvt9pG55W3CfAETgwDFi2NwvWQGV4y\",\n  \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\",\n  \"HXMGFZwHXyiFj1MUwCVMoyzqBJ4CuTC7xpX\",\n  \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\"\n],\n\"type\": \"committee\"\n  }\n]  6.Approve proposal\uff0cmore than two-thirds of the senators agreed with the proposal, multiple addresses will to take effect.  unlocked   approve_proposal guard0 1.10.1 {\"key_approvals_to_add\": [\"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\", \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\", \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\", \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\", \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\"]}  true\n\napprove_proposal guard0 1.10.1 {\"key_approvals_to_add\": [\"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\", \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\", \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\", \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\", \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\"]}  true\n{\n  \"ref_block_num\": 1833,\n  \"ref_block_prefix\": 1461401128,\n  \"expiration\": \"2018-09-05T08:28:50\",\n  \"operations\": [[\n  29,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"fee_paying_account\": \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n\"proposal\": \"1.10.1\",\n\"active_approvals_to_add\": [],\n\"active_approvals_to_remove\": [],\n\"owner_approvals_to_add\": [],\n\"owner_approvals_to_remove\": [],\n\"key_approvals_to_add\": [\n  \"HXdXPBLRsiUCY1VxcDd4gGrkDcgCV3Jegb\",\n  \"HX3HmP3gqcDqYvHvVq2Hn44nuUDfSSBMU55\",\n  \"HXC3X3WoKyqNQZDyPN3Pq55gX5sLhVJxZNh\",\n  \"HXHd49CtDZZW7ySYZNQYaUurZNWW76HBnhU\",\n  \"HXMkBpQ9nj1hHXwEGQvyZdFiRgRK78ixKPA\"\n],\n\"key_approvals_to_remove\": [],\n\"extensions\": []\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"204e95fa9b4f43955e43e3c577d4f262ffc1897e7de31268b5440bbdd4231a20ca46754f39c3e854d811f3684f1a750354edc7bd2c08c046319067f3c6136e4f1f\", \"1f3e55e7e23ef965fcc91c0637bb2550914d4d9d5a1708e71da6989769c767de0f2cd655083bb371e075ca2d8ffabaf0535d2bbc1b73842446d02988b1a9aa0254\",\"2073a6c02b2bb3bc0d317cca87b192362b643b948df5a738a3a2c666f3958f67617ede3cfc01fcf3fc831cf057dc31e02886d7b431d6c623dbb1caa67265646e27\",\"207d03876702431521094afc59e8635441ef05e0f7f670190608af71db343740d511ec7bc8d76bcfb14be2708b07b2c599f3e582ecb4c0776f9ead9f89714f15d0\",\"20015ef8677508aefdf0a8591779c2befb58d226860d6f1ac4b536da809d4380e74499ee44528db9a536814d3b5d35d1e3e7c1028b9b98172cc85da5cc53a37afd\"],\n  \"block_num\": 0,\n  \"trxid\": \"ab889c45010eea6768ccff2d0d678c6ddcd71418\"\n}  7.Query multi-sign address,if  effective_block_num  is not 0,means this addres has take effect.  unlocked   get_multisig_account_pair LTC\nget_multisig_account_pair LTC\n[{\n\"id\": \"2.7.2\",\n\"chain_type\": \"LTC\",\n\"bind_account_hot\": \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\",\n\"redeemScript_hot\": \"5521023db7379f0761ccbb4628c74eff5b67937bf2f3a3140d11aac56ca8780d33354d2102f0449390eb888b752fecd1f8dd381d95761c31a9a34511d3f992e9a078e170902103dc79cb12340d4d4f5a40a9ca05e058d1f6ff2691ea61aa1b05eb1330de0b39622102ac93a669ba8d75a8cb29e93e89bba6686886e93dac792222f0ee0dae1f4bd64321033a8a01b9c86746c1e24a4212979439a3a882be78fe572880a3f60aa70bc236fb2103c9e8d18f2a7e55088fae8a9e8d733e1bf167cdb4f2bfddbd285a7956cab8df77210312956e995aa696c3da4e34bdbae5a8f02efcff4ec1d51154eafc7ef64e55270757ae\",\n\"bind_account_cold\": \"MUC25gBfgyrUrUX241dT3BfU32AQGaZ19z\",\n\"redeemScript_cold\": \"5521036cba57ae77502b6e286b9c04f4074683fc5014d9d84773f0db2fb13d7a6b10f7210345156da8779b5a5c012418968e6f45abda30cbffac2c13d9a82f846ffc5bde67210243fe236e6578945ffbe123602d963ec4bcec6b997775463dfe3c17b90f3b69ab210204e31aa757d19b49171eaf4392bfae8a2e167ab9b0d26211e6bf34f9f345da152102ed336e6612a615aeb97a4ecbdd8de8055f5a0516bfcda8483136d3053c213d9c210367aec8c7ce911ba88f94ff6b16943c3688e3d87c384da6926ea28ea7249db44121035ef1d0343c809639e64799e897169f95b7393645402ebc81e63c955c9e9ff6a757ae\",\n\"effective_block_num\": 1843,\n\"end_block\": 4294967295\n  }\n]", 
            "title": "Senator Create hot-cold multisign address"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#deposit", 
            "text": "Make sure created BTC/LTC address  balance is not 0 on bitcoin chain/litecoin chain.Has two methods to deposit BTC/LTC to hx blockchain.  1.Import private key of BTC and LTC addresses to each other  mainnet blockchain.    Deposit BTC to account  hxtest001   In bitcoin chain,transfer BTC to  hot address  :  \"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\" .Wait about 40 minutes,account hxtest001 will receive BTC.Query balance of account hxtest001.  unlocked   get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 1000000000,\n\"asset_id\": \"1.3.1\"\n  }\n]   Deposit LTC to account  hxtest002   In litcoin chain,transfer LTC to  hot address  :  MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD .Wait about 10 minutes,account hxtest002 will receive LTC.Query balance of account hxtest002.  unlocked   get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": \"84899552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]  2.Use cli-wallet command of hx blockchain   Deposit BTC to account  hxtest001   (1)createrawtransaction:sender address/receiver address/transfer amount/transfer coin symbol  unlocked   createrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM  35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd 10 BTC\ncreaterawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM  35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd 10 BTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Trans.createTrx\" , \"params\" : {\"chainId\":\"btc\" ,\"from_addr\": \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\",\"dest_info\":{\"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\":1}}}\n{\n  \"hex\": \"02000000010b2b180e1aa5bfc150fea349e1090ccc1721b01e2887c4c25ff9ca96afe6d1ef0000000000ffffffff02c038c023000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\n  \"scriptPubKey\": [\n\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"\n  ],\n  \"trx\": {\n\"hash\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"version\": 2,\n\"vin\": [{\n    \"scriptSig\": {\n      \"asm\": \"\",\n      \"hex\": \"\"\n    },\n    \"sequence\": 4294967295,\n    \"txid\": \"efd1e6af96caf95fc2c487281eb02117cc0c09e149a3fe50c1bfa51a0e182b0b\",\n    \"vout\": 0\n  }\n],\n\"vout\": [{\n    \"n\": 0,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"\n      ],\n      \"asm\": \"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\n      \"hex\": \"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\n      \"reqSigs\": 1,\n      \"type\": \"pubkeyhash\"\n    },\n    \"value\": \"5.99800000000000022\"\n  },{\n    \"n\": 1,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\"\n      ],\n      \"asm\": \"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\n      \"hex\": \"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\n      \"reqSigs\": 1,\n      \"type\": \"scripthash\"\n    },\n    \"value\": \"10.00000000\"\n  }\n],\n\"vsize\": 117\n  }\n}  (2)signrawtransaction:sender address/transfer coin symbol/return value of command createrawtransaction/if broadcast  unlocked   signrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"QR9Zdmi94TkX4tvuQBCgZxXHTpCFTU358v\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\nsignrawtransaction 19QmVye31e2QfYXZShBD2VXissoM6QeppM BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"19QmVye31e2QfYXZShBD2VXissoM6QeppM\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"35ymUk9NfK4izhgp55Nphqd6dcgsvQYNfd\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\n\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b594000000006b483045022100f19d516c64d7d4acbda6af9b7b3cc4dbacc5cc8e98e669d032740a612d6f2977022044487e5e0b68ab7fdda74d3d0d8d5ac3ee10c55162cb9894329e60270fe270ac012103556af2f0ca77d324abfb49ad3d78ddb9cb3fbc4da3c53af933d6b567527b9022ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\"  (3)Query balance of account hxtest001.  unlocked   get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 1000000000,\n\"asset_id\": \"1.3.1\"\n  }\n]   Deposit LTC to account  hxtest002   (1)createrawtransaction:sender address/receiver address/transfer amount/transfer coin symbol  unlocked   createrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8  MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD 849 LTC\ncreaterawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8  MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD 849 LTC\n{ \"jsonrpc\": \"2.0\", \"id\" : \"45\",\"method\" : \"Zchain.Trans.createTrx\" , \"params\" : {\"chainId\":\"ltc\" ,\"from_addr\": \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\",\"dest_info\":{\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\":1}}}\n{\n  \"hex\": \"02000000010b2b180e1aa5bfc150fea349e1090ccc1721b01e2887c4c25ff9ca96afe6d1ef0000000000ffffffff02c038c023000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\n  \"scriptPubKey\": [\n\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"\n  ],\n  \"trx\": {\n\"hash\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"8332e34ef216c792bcc03750defbd8f2298a939c8d5eaf35448dbfdc8b21d252\",\n\"version\": 2,\n\"vin\": [{\n    \"scriptSig\": {\n      \"asm\": \"\",\n      \"hex\": \"\"\n    },\n    \"sequence\": 4294967295,\n    \"txid\": \"efd1e6af96caf95fc2c487281eb02117cc0c09e149a3fe50c1bfa51a0e182b0b\",\n    \"vout\": 0\n  }\n],\n\"vout\": [{\n    \"n\": 0,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"\n      ],\n      \"asm\": \"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\n      \"hex\": \"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\n      \"reqSigs\": 1,\n      \"type\": \"pubkeyhash\"\n    },\n    \"value\": \"5.99800000000000022\"\n  },{\n    \"n\": 1,\n    \"scriptPubKey\": {\n      \"addresses\": [\n        \"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n      ],\n      \"asm\": \"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\n      \"hex\": \"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\n      \"reqSigs\": 1,\n      \"type\": \"scripthash\"\n    },\n    \"value\": \"848.99552000\"\n  }\n],\n\"vsize\": 117\n  }\n}  (2)signrawtransaction:sender address/transfer coin symbol/return value of command createrawtransaction/if broadcast  unlocked   signrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 LTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"QR9Zdmi94TkX4tvuQBCgZxXHTpCFTU358v\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\nsignrawtransaction LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8 BTC {\"hex\":\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b5940000000000ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\",\"scriptPubKey\":[\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\"],\"trx\":{\"hash\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"locktime\":0,\"size\":117,\"txid\":\"0fed58465fc05311c032f9e76898f05d663823f5d339911f81bd5af3e3d30033\",\"version\":2,\"vin\":[{\"scriptSig\":{\"asm\":\"\",\"hex\":\"\"},\"sequence\":4294967295,\"txid\":\"94b5043cc971d88e5da2a578b32b0befbe67653cbfa3fbea7cdedb15a52b5463\",\"vout\":0}],\"vout\":[{\"n\":0,\"scriptPubKey\":{\"addresses\":[\"LPFnwvJFXziSzk35fXn3tj2JYQe4iHLLY8\"],\"asm\":\"OP_DUP OP_HASH160 09babeff4dd30c4e3227b5e0c091080dfc08538a OP_EQUALVERIFY OP_CHECKSIG\",\"hex\":\"76a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac\",\"reqSigs\":1,\"type\":\"pubkeyhash\"},\"value\":\"6.99899999999999967\"},{\"n\":1,\"scriptPubKey\":{\"addresses\":[\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"],\"asm\":\"OP_HASH160 31d9622f9e40a979433b7026a760dce5bdacef8e OP_EQUAL\",\"hex\":\"a91431d9622f9e40a979433b7026a760dce5bdacef8e87\",\"reqSigs\":1,\"type\":\"scripthash\"},\"value\":\"10.00000000\"}],\"vsize\":117}} true\n\"020000000163542ba515dbde7ceafba3bf3c6567beef0b2bb378a5a25d8ed871c93c04b594000000006b483045022100f19d516c64d7d4acbda6af9b7b3cc4dbacc5cc8e98e669d032740a612d6f2977022044487e5e0b68ab7fdda74d3d0d8d5ac3ee10c55162cb9894329e60270fe270ac012103556af2f0ca77d324abfb49ad3d78ddb9cb3fbc4da3c53af933d6b567527b9022ffffffff0260a0b729000000001976a91409babeff4dd30c4e3227b5e0c091080dfc08538a88ac00e1f5050000000017a91431d9622f9e40a979433b7026a760dce5bdacef8e8700000000\"  (3)Query balance of account hxtest002.  unlocked   get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": \"84899552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]", 
            "title": "Deposit"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#exchange-flow", 
            "text": "Exchange Contract   Write a exchange contract,compile to gpc file, then register contract to hyperexchange chain.(Please make sure  hxtest001  has enough  HX )  unlocked   register_contract hxtest001 0.001 10000 \"E:/link_mytest/blocklink_e\nxchange.lua.gpc\"\n\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\"   Currency Exchange   1.hxtest001 deposit 1 BTC to contract.  unlocked   transfer_to_contract hxtest001 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\n 1 \"BTC\" \"\" 0.001 10000 true\ntransfer_to_contract hxtest001 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s 1 \"BTC\" \"\" 0\n.001 10000 true\n{\n  \"ref_block_num\": 3030,\n  \"ref_block_prefix\": 4031504198,\n  \"expiration\": \"2018-09-05T10:13:20\",\n  \"operations\": [[\n  81,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5\nb72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"amount\": {\n  \"amount\": 100000000,\n  \"asset_id\": \"1.3.1\"\n},\n\"param\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\n\"2027af412ac03384b9a4ac1d6d81ca1e3947cb6a2e3b18144e0d242b5e09f5bb22754e9b115\n55bf33a22f84576be7b95f1cb0d69fb43e0fc006b701468b8be5f6e\"\n  ],\n  \"block_num\": 0,\n  \"trxid\": \"2f3b7e9b8bc48b158030b27a44e40a4e2ac8b061\"\n}  2.Put on a sell order.  unlocked   invoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s putOnSellOrder \"BTC,100000000,LTC,250000000\"\ninvoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s putOn\nSellOrder \"BTC,100000000,LTC,250000000\"\n{\n  \"ref_block_num\": 3059,\n  \"ref_block_prefix\": 4003603969,\n  \"expiration\": \"2018-09-05T10:15:45\",\n  \"operations\": [[\n  79,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5b72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"contract_api\": \"putOnSellOrder\",\n\"contract_arg\": \"BTC,100000000,LTC,250000000\",\n\"offline\": false\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f76a6144438f6c571607304348307d3c087b332b3548f50154d864932ccca63815c7d357c51f5a67799deed95af070fad416a022e9f058768d08207ebd55baaf0\"],\n  \"block_num\": 0,\n  \"trxid\": \"9d141aa4782e97187f152031135d1bdc10ef7306\"\n}  3.hxtest002 put on a order to buy 1BTC by call the interface of contract.  unlocked   transfer_to_contract hxtest002 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\n 10 \"LTC\" \"BTC,100000000\" 0.001 10000 true\ntransfer_to_contract hxtest002 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s 10 \"LTC\" \"BTC,100000000\" 0.001 10000 true\n{\n  \"ref_block_num\": 13361,\n  \"ref_block_prefix\": 2405013881,\n  \"expiration\": \"2018-09-06T01:15:00\",\n  \"operations\": [[\n  81,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HX8Vx4U1HfPBhHQF8J2z55qyiMCaJBce5gQ\",\n\"caller_pubkey\": \"034317fbda4543caa127aa82a0558194c213066762b6ce15c5215d756ff301efaf\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"amount\": {\n  \"amount\": 1000000000,\n  \"asset_id\": \"1.3.2\"\n},\n\"param\": \"BTC,100000000\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f6f51e1b0406931a47910734b8d8ee2d3a7b1bf9ff7767cf7a8d427a1120534250b5c9fbaeffb1b48d5df9fb6fb46d81bdefaadca19099aa80d58eed1f064e000\"],\n  \"block_num\": 0,\n  \"trxid\": \"d4ef8b05a42e2cff7a6443902aa4b6cc3d647851\"\n}  4.Query balance of hxtest002.Amount will be 1*precision which  asset_id  is  1.3.1  unlocked   get_account_balances hxtest002\nget_account_balances hxtest002\n[{\n\"amount\": 999995100,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 100000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": \"84649552000\",\n\"asset_id\": \"1.3.2\"\n  }\n]  5.Withdraw bought 2.5 LTC to hxtest001.  unlocked   invoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s withdrawAsset \"LTC,250000000\"\ninvoke_contract hxtest001 0.001 10000 CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s withdrawAsset \"LTC,250000000\"\n{\n  \"ref_block_num\": 13430,\n  \"ref_block_prefix\": 452881267,\n  \"expiration\": \"2018-09-06T01:21:00\",\n  \"operations\": [[\n  79,{\n\"fee\": {\n  \"amount\": 12000,\n  \"asset_id\": \"1.3.0\"\n},\n\"invoke_cost\": 10000,\n\"gas_price\": 100,\n\"caller_addr\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"caller_pubkey\": \"039541c82bb4cd832ff4c11e39b894609b3c035add4b133d55a6d5b72c4ac28ad6\",\n\"contract_id\": \"CHX4W971o4Q84ihbAMJ9xbaBMAVwtVJRbP7s\",\n\"contract_api\": \"withdrawAsset\",\n\"contract_arg\": \"LTC,250000000\",\n\"offline\": false\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"2052608a77d042af3020341aa6d0e5b965dc8e9447ac17b22302b7fbac2d20c65375cdbf184adf94e39863e043d0f301bf7058745f55dcb8d61aa0556213d47cf1\"],\n  \"block_num\": 0,\n  \"trxid\": \"7d56c9545a42729ed6e55df43448c53734d72efe\"\n}  6.Query balance of hxtest001,amount will be 2.5*precision which  asset_id  is  1.3.2 .  unlocked   get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 999984290,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 900000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": 250000000,\n\"asset_id\": \"1.3.2\"\n  }\n]", 
            "title": "Exchange Flow"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#withdrawal", 
            "text": "1.Withdraw to an address of litecoin chain.Will create a crosschain transaction.  unlocked   withdraw_cross_chain_transaction hxtest001 2.5 LTC LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA \"\" true\n\nwithdraw_cross_chain_transaction hxtest001 2.5 LTC LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA \"\" true\n{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:24:15\",\n  \"operations\": [[\n  61,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"withdraw_account\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"amount\": \"2.5\",\n\"asset_symbol\": \"LTC\",\n\"asset_id\": \"1.3.2\",\n\"crosschain_account\": \"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\",\n\"memo\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f73948075b5403e9d99d26bf6cd2c461f46d7844df7bc1ea0dbf107535678add57a836bd947c701a14a13b876939a217ae0c3062e262bc527ec458c550b014251\"],\n  \"block_num\": 0,\n  \"trxid\": \"9b2df1bc9376fd649d569bf4345165bd4523883a\"\n}  2.Query created crosschain transaction.  unlocked   get_crosschain_transaction 1\nget_crosschain_transaction 1\n[[\n\"977b443566b1105a2a2159cb7a4d9a023dd44f92\",{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:14:45\",\n  \"operations\": [[\n  62,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"ccw_trx_ids\": [\n  \"9b2df1bc9376fd649d569bf4345165bd4523883a\"\n],\n\"withdraw_source_trx\": {\n  \"hex\": \"020000000196aa8d21549926bb0a2b2c163e91c1ff783ff06158756c33f5b4758057c860770000000000ffffffff02e02be50e000000001976a914f542d013712017a417defd6a29615b2e1a2b84a288ac803125450200000017a9144c4691c0f89c01775330e84d307e45f1a4f101478700000000\",\n  \"scriptPubKey\": [\n\"a9144c4691c0f89c01775330e84d307e45f1a4f1014787\"\n  ],\n  \"trx\": {\n\"hash\": \"6f9885fae162d1b492cc2e764d48d44c37df6fac7018411f54109f485a7fbd4d\",\n\"locktime\": 0,\n\"size\": 117,\n\"txid\": \"6f9885fae162d1b492cc2e764d48d44c37df6fac7018411f54109f485a7fbd4d\",\n\"version\": 2,\n\"vin\": [{\n\"scriptSig\": {\n  \"asm\": \"\",\n  \"hex\": \"\"\n},\n\"sequence\": 4294967295,\n\"txid\": \"7760c8578075b4f5336c755861f03f78ffc1913e162c2b0abb269954218daa96\",\n\"vout\": 0\n  }\n],\n\"vout\": [{\n\"n\": 0,\n\"scriptPubKey\": {\n  \"addresses\": [\n\"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\"\n  ],\n  \"asm\": \"OP_DUP OP_HASH160 f542d013712017a417defd6a29615b2e1a2b84a2 OP_EQUALVERIFY OP_CHECKSIG\",\n  \"hex\": \"76a914f542d013712017a417defd6a29615b2e1a2b84a288ac\",\n  \"reqSigs\": 1,\n  \"type\": \"pubkeyhash\"\n},\n\"value\": \"2.49900000000000011\"\n  },{\n\"n\": 1,\n\"scriptPubKey\": {\n  \"addresses\": [\n\"MErU8FfsLhXPvkzgE2BRKTyeJQExTMiZMD\"\n  ],\n  \"asm\": \"OP_HASH160 4c4691c0f89c01775330e84d307e45f1a4f10147 OP_EQUAL\",\n  \"hex\": \"a9144c4691c0f89c01775330e84d307e45f1a4f1014787\",\n  \"reqSigs\": 1,\n  \"type\": \"scripthash\"\n},\n\"value\": \"97.50000000000000000\"\n  }\n],\n\"vsize\": 117\n  }\n},\n\"miner_broadcast\": \"1.6.4\",\n\"miner_address\": \"HX2WbZT9ZgYQC92BdUGAqkbHXpmYqgxXdex\",\n\"asset_id\": \"1.3.2\",\n\"asset_symbol\": \"LTC\",\n\"crosschain_fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.2\"\n}\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"2073f66bb19fd429246d16f377794707461fd9a6efe7264b72eb4b128ebabe6a454adbcf879f0eaaa5c72b124e5ae1b1e0b4b7d339cd5e077c44081366b5c5d286\"]\n}],[\n\"9b2df1bc9376fd649d569bf4345165bd4523883a\",{\n  \"ref_block_num\": 14011,\n  \"ref_block_prefix\": 2913418489,\n  \"expiration\": \"2018-09-06T02:24:15\",\n  \"operations\": [[\n  61,{\n\"fee\": {\n  \"amount\": 0,\n  \"asset_id\": \"1.3.0\"\n},\n\"withdraw_account\": \"HXNUZSB27eoKGki79mioGrS5YyKxdXEzvQu\",\n\"amount\": \"2.5\",\n\"asset_symbol\": \"LTC\",\n\"asset_id\": \"1.3.2\",\n\"crosschain_account\": \"LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA\",\n\"memo\": \"\"\n  }\n]\n  ],\n  \"extensions\": [],\n  \"signatures\": [\"1f73948075b5403e9d99d26bf6cd2c461f46d7844df7bc1ea0dbf107535678add57a836bd947c701a14a13b876939a217ae0c3062e262bc527ec458c550b014251\"]\n}\n  ]\n]  3.Sign transaction,more than two-thirds of the senators sign the transaction, it will broadcast success.  unlocked   senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard0\nunlocked   senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard1\nunlocked   senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard2\nunlocked   senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard3\nunlocked   senator_sign_crosschain_transaction 977b443566b1105a2a2159cb7a4d9a023dd44f92 guard4  4.Query balance of hxtest001,amount will be 0 which  asset_id  is  1.3.2 .  unlocked   get_account_balances hxtest001\nget_account_balances hxtest001\n[{\n\"amount\": 999984290,\n\"asset_id\": \"1.3.0\"\n  },{\n\"amount\": 900000000,\n\"asset_id\": \"1.3.1\"\n  },{\n\"amount\": 0,\n\"asset_id\": \"1.3.2\"\n  }\n]  5.On litecoin chain,after create some blocks,you can get balance of address  LhamrSpU9E55VEfgmKNxuX7VnWNZLdw8uA ,will be 2.49900000(minus fee 0.001).", 
            "title": "Withdrawal"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#multi-sign-address", 
            "text": "How to realize   Using the feature that HX public key can be unlimited derived, we combine a series of HX public keys into an ordered queue to generate a public key, whose corresponding address is a multi-signature address. (It can not be distinguished from ordinary address). It supports maximum 15 public keys to form a multi-signature address.   Create multi-sign address   create_multisignature_address(const string  account, const fc::flat_set public_key_type  pubs, int required, bool broadcast)  This is on-chain operation. If multi-signature address information already exists on chain, creation will fail for repeated using the same address   public keys.    acquire public key through private keys   public_key_type wallet_api::get_pubkey_from_priv(const string  privkey)   acquire public key via wallet account, which must exist in the wallet.   public_key_type wallet_api:: get_pubkey_from_account (const string  acc_name)   check detail information of address,Return multi-address detail information, which includes address composition and minimum number of signatures.   variant_object wallet_api::get_multisig_address(const address  addr)   Multi-sign address Transaction    Create an offline transaction which its timeout period is about one day   Transaction interface\uff1a  signed_transaction transfer_from_to_address(string from, string to, string amount, string asset_symbol, string memo)    Sign transaction order respectively by account who created this multi-sign address.   Signature interface\uff1a  signed_transaction wallet_api::sign_multisig_trx(const address  addr, const signed_transaction  trx)    Collect signatures, broadcast after combine. Broadcast will be successful only signatures reaches required number.    combine and broadcast interface\uff1a  full_transaction wallet_api::combine_transaction(const vector signed_transaction  trxs, bool broadcast)    decode base58 string,you can parse a base58 string of a generated transaction and see the details of the transaction body, including the number of signatures.", 
            "title": "Multi-sign address"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#eth-and-erc20", 
            "text": "creating ETH assets is the same than creating other assets, the interface of creating ERC20 is as below:   full_transaction wallet_create_erc_asset(\nstring issuer,//creator\nstring symbol,//symbol(must be startwith ERC)\nuint8_t precision,//precision\nshare_type max_supply,//max_supply\nshare_type core_fee_paid,//fee\nstd::string erc_address,//(erc20 contract address and erc20 contract precision,split with '|')\nbool broadcast = false);\nFor example\uff1a\nwallet_create_erc_asset guard0 ERCEOS 8 210000000 100000 \"0x1fb22d0eb45d1bc4ef6a9cb9a8db6972ce886f65|18\" true   eth and erc20 multi-sign account creation process:   Ordinary asset process (please refer to the process of creating LTC asset on hx chain as above):\nUpdate_asset_private_keys \u2013  check multi-sign address has been created-  Create Proposal -  check Proposal -  Confirm Proposal -  Multi-Sign Account become Effective  ETH and ERC20 asset process:\nUpdate_asset_private_keys-  check multi-sign contract has been created -  Sign   broadcast multi-sign contract to Ethernet chain -  heck multi-sign address has been created -  Create proposal -  check proposal -  Pass proposal -  Multi-signed account become effective\nrelevant interface:\ncheck multi-sign contract transaction:  get_eth_multi_account_trx(const int   mul_acc_tx_state);  added query status as below,The cold and hot wallet addresses created by the query require a certain amount of eth for the transaction fee of eth and erc20:   Sign unsigned contract and multi-sign contract\uff1a  senator_sign_eths_multi_account_create_trx(const string  tx_id, const string  senator);  Two parameters are the transaction ID of unsigned transaction respectively, obtained by checking previous interface 0 status, and the senator who signed).   Withdraw process for ETH and ERC20   ordinary assets process (refer to withdraw process as above):  User initiates cross-chain transfer (status becomes 0)- citizen creates unsigned multi-sign transaction (1)- senator signature status 1 transaction (2)-  citizen sign jointly and broadcast (3)- chain confirms transaction and tells the HX chain by collecting (4)  Eth and erc20 asset process:\uff1a  User initiates cross-chain transfer (status becomes 0) -  citizen creates unsigned Ethereum call parameter transaction (1) -  senator signature status 1 transaction (2) -  citizen call parameters jointly and creates unsigned ETH transaction (7)- designated senator signature status 7 transaction (8)- chain confirms transaction and tells HX chain by acquisition (4)  related interface\uff1a\ndesignated senator signs transaction:\n    senator_sign_eths_final_trx(const string  tx_id, const string  senator);   ETH and ERC20 cold   hot wallet switch process   Same withdraw process as ETH and ERC20, different signature interface for designated senator, see it as below:  senator_sign_eths_coldhot_final_trx(const string  trx_id, const string   senator)   Notice: If you want to do transaction of eth or erc20, need to config ETH and ERC20 token symbol in config.ini of middle-ware\uff1a", 
            "title": "ETH and ERC20"
        }, 
        {
            "location": "/wallets/hxwallet-cli-rpc-commands/#command-list", 
            "text": "Basic Interface   1.info  Return current information, block number and etc. to HX chain  2.wallet_create_account  name  create wallet account, return account address  3.dump_private_key name  obtain private keys of wallet account, return address+private keys.  4.import_key name private_key  import private keys of account `name`  5.register_account name true  This account name is registered on-chain  6.transfer_to_address from to amount symbol memo true  transfer to certain address: \nfrom:sent from address \nto\uff1areceive address \namount\uff1a total transfer amount \nsymbol: currency type \nmemo: other information  7.get_transaction trxid  trxid:transaction id  acquire all information of this transaction according to transaction ID, only on-chain transaction can be traced.  8.get_block blocknum  detail information of one block can be returned according to block number.\nblocknum: block number  9.get_citizen name  return citizen detail information according to user name, if this account is not citizen, return empty/blank/void  10.get_senator_member name  return senator detail information according to user name, if this account is not senator, return empty/blank/void  11.create_citizen name url true  register to become a citizen, which can join mining \nname:account name \nurl: website address  12.create_crosschain_symbol symbol  create specific assets addresses, return address \nsymbol: currency type  13.bind_tunnel_account account tunnel_account symbol true  bind tunnel account, the address on other chain is binding with current actual account, tunnel_account private key is needed.\naccount: account name \ntunnel_account: an appointed assets address \nsymbol\uff1acurrency type  14.unbind_tunnel_account account tunnel_account symbol true  unbind tunnel account, the address on other chain is bound with current actual account, tunnel_account private key is needed.  15.get_binding_account account symbol   inquire tunnel account of specific assets \naccount: current account name\nsymbol: currency type  16.get_multisig_account_pair symbol   acquire current on-chain multi-signature address of specific currency, which includes multi-signature address history  17.get_current_multi_address symbol  acquire current on-chain multi-signature address of specific currency  18.withdraw_cross_chain_transaction account amount symbol crosschain_addr memo true  initiate withdrawal request\naccount: withdrawal request initiator\namount:  withdrawal amount \nsymbol\uff1a currency type of withdrawal \ncrosschain_addr: specific assets receive address \nmemo: additional information  19.refund_request refund_acount txid true  apply for a cancellation of cross-chain withdrawal \nrunfund_account: account name\ntxid: would like to cancel withdrawal transaction ID   About Acceptance   1.create_guarantee_order account asset_orign asset_target symbol true  create acceptance fee,this operation is used for those accounts have HX and would like to exchange to other currencies, such as BTC. \naccount:creator of acceptance fee form \nasset_orign : means the HX can not be used for acceptance fee in this account\nasset_target : the amount of tokens that you would like to exchange to\nsymbol:  currency type  2.list_guarantee_order symbol all  return qualified acceptance order queue\nsymbol: assets type/ currency type \nall true/false,if all acceptance order are listed, including completed orders. HX is need as fees during any transaction, however if there is no HX in the account, use other currencies in the account to pay for fees.  3.get_my_guarantee_order account all  return to the acceptance order which was created by this address\naccount: account address \nall\uff1a whether includes completed acceptance orders  4.set_guarantee_id guarantee_id  choose an acceptance order before transaction, this operation is valid once only is operated locally.\nguarantee_id : Acceptance ID   Senator related:   Senator in charge of cross-chain assets, most operations are voting related.   1.create_senator_member  proposer_account account url expiration_time true  create an proposal to upgrade specific account(s) to candidate senator(s)\nproposer_account: proposer account \naccount\uff1asenator candidate senator \nurl : website address \nexpiration_time: expiration time  2.update_senator_formal proposer_account formal expiration_time  true  proposal initiator and official senator account \nformal :default set as true, make senator an official senator  3.senator_appointed_publisher proposer publisher symbol expiration_time true  specify publisher for certain asset \nproposer: proposer\npublisher: feed person (account)/publisher \nsymbol: assets type for feed  4.citizen_appointed_crosschain_fee proposer fee symbol expiration_time true  initiate a proposal, specify cross-chain withdrawel fee of certain specific assets. \nfee\uff1a fee for cross-chain withdrawal \nsymbol\uff1a cross-chain assets type  5.citizen_appointed_lockbalance_senator proposer lockbalance expiration_time true  initiate a proposal to modify the amount of pledged deposit and its currency type of an Senator. \nlockbalance: specify the amount of pledged deposit and its currency type of a Senator.  6.update_asset_private_keys account symbol true  it is used to create a pair of private keys of specific assets, and broadcast corresponding public keys on the chain. HX will create a pair of new multi-signature addresses (cold and hot wallets) according to received public keys. \naccount:transaction initiator \nsymbol\uff1aassets type  7.account_change_for_crosschain proposer symbol hot cold  expiration_time true  initiate a proposal\uff0cin order to validate hot address(wallet) and cold address(wallet) on chain \nsymbol\uff1aasset type\nhot\uff1ahot wallet address\ncold:cold wallet address  8.get_proposal_for_voter account  acquire all necessary proposals for the signature of this account \naccount\uff1acurrent account name  9.approve_proposal account proposal_id delta true  account: voter \nproposal_id: proposal ID \ndelta: see voting content as below{\"key_approvals_to_add\":[addr]\uff0c\u201ckey_approvals_to_remove\u201d\uff1a[addr]}  10.get_crosschain_transaction type  Returns the withdrawal transaction and status under the corresponding state\ntype\uff1aStatus0,1,2,3,4 \n  0\uff1a withdrawal request status \n  1,2\uff1a waiting for signature or in the process of signing \n  3\uff1a transaction signed and broadcast \n  4\uff1a package this transaction on corresponding chain  11.senator_sign_crosschain_transaction trxid senator  sign withdrawal transaction \ntrxid: under status 1, withdrawal transaction ID \nsenator\uff1aSenator account name   Contract related\uff1a   1.invoke_contract_testing caller_account_name contract_address_or_name contract_api contract_arg  caller_account_name: caller native account name\ncontract_address_or_name: The contract address or name is invoked\ncontract_api: contract API name\ncontract_arg: The contract parameter is invoked\uff08string\uff09  2.transfer_to_contract_testing from to amount asset_symbol param  from: sender\nto: destination contract address\namount: transfer amount\nasset_symbol: asset symbol\nparam: memo  3.register_contract_testing  caller_account_name contract_filepath  caller_account_name: caller native account name\ncontract_filepath: path of contract file  4.register_native_contract_testing caller_account_name native_contract_key  caller_account_name: caller native account name\nnative_contract_key: native contract template symbol  5.upgrade_contract_testing caller_account_name contract_address contract_name contract_desc  caller_account_name: caller native account name\ncontract_address: contract address\ncontract_name: new contract name\uff08must be unique\uff09\ncontract_desc: new contract description  6.get_contract_registered  block_num  block_num: block height  7.get_contract_storage_changed block_num  block_num: block height  8.create_contract_transfer_fee_proposal proposer fee_rate  expiration_time  broadcast  proposer: proposal(string)\nfee_rate: fee rate \nexpiration_time: expiration time of proposal \nbroadcast: whether broadcast  9.register_contract caller_account_name  gas_price gas_limit contract_filepath  caller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_filepath: path of contract file  10.register_native_contract caller_account_name gas_price gas_limit native_contract_key  caller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nnative_contract_key: native contract template symbol  11.register_contract_like caller_account_name gas_price gas_limit base  caller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nbase: contract template address  12.invoke_contract caller_account_name gas_price gas_limit contract_address_or_name contract_api contract_arg  caller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_address_or_name: The contract address or contract name is invoked \ncontract_api: Called contract API name\ncontract_arg: parameter of called contract API  13.invoke_contract_offline caller_account_name  contract_address_or_name contract_api contract_arg  caller_account_name: caller native account name\ncontract_address_or_name: The contract address or contract name is invoked \ncontract_api: Called contract API name\ncontract_arg: parameter of called contract API  14.upgrade_contract caller_account_name gas_price gas_limit contract_address contract_name contract_desc  caller_account_name: caller native account name\ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\ncontract_address: contract address\ncontract_name: contract new name\ncontract_desc: contract description  15.get_contract_info contract_address_or_name  contract_address_or_name: contract address or name  16.get_simple_contract_info contract_address_or_name  contract_address_or_name: contract address or name  17.transfer_to_contract from to amount asset_symbol param gas_price gas_limit broadcast  from: sender\nto: destination contract address \namount: transfer amount \nasset_symbol: transfer asset symbol \nparam: transfer parameter \ngas_price: gas price(HX)\ngas_limit: gas limit of this transaction\nbroadcast: whether broadcast  18.get_contract_balance contract_address  contract_address: contract address  19.get_contract_addresses_by_owner addr  addr: Contract creator user address  20.get_contracts_by_owner addr  addr: Contract creator user address  21.get_contracts_hash_entry_by_owner addr  addr: Contract creator user address  22.get_contract_events addr  addr: contract address  23.get_contract_events_in_range addr start range  addr: contract address\nstart: start block height\nrange: scan block number  24.get_contract_history contract_id  start end  contract_id: contract address\nstart: start block height\nend: end block height", 
            "title": "command list"
        }, 
        {
            "location": "/wallets/middleware-startup/", 
            "text": "HyperExchange Middleware Setup Guide\n\n\nLast updated for v1.0.7.\n\n\n\n\nHyperExchange Middleware\n Used to collect/store and manage other blockchain data;Handle various operations of acrosschain (deposit/withdraw, etc.).\n\n\n\n\nDownload and Install\n\n\nThe latest version of HyperExchange Middleware can be downloaded from [https://github.com/HcashOrg/HyperExchange/releases/tag/v0.1).Now just support install on linux system.\n\n\nWhen deployed, mongo and ubuntu images are used, and docker automatically downloads the image, so there is no active pull.\n\n\n\n\nConfig File\n\n\n\n\nBefore start middleware,need to config parameters of mongo/log/local rpc server/other chain rpc server\n\n\nFor example:\n\n\n#!/usr/bin/env python \n# encoding: utf-8\n\n__author__ = 'hasee'\n\nimport logging\n\nclass CollectorConfig(object):\n# DB configure\nDB_POOL_SIZE = 10\nCONNECT_TIMEOUT = 50\nMONGO_HOST = '127.0.0.1'\nMONGO_PORT = 27017\nMONGO_NAME = 'chaindb'\nMONGO_USER = 'chaindb_user'\nMONGO_PASS = 'yqr.1010'\n\n# LOG configure\nLOG_LEVEL = logging.INFO\nLOG_FORMAT = '%(asctime)-15s %(levelname)s %(funcName)s %(message)s'\nLOG_FILENAME = \"btc_data_collector.log\"\n\n# SYNC configure\nSYNC_BLOCK_PER_ROUND = 10000\n\nclass BKCollectorConfig(CollectorConfig):\n# RPC SERVER configure \nASSET_SYMBOL = \"BK\"\nRPC_HOST = '192.168.1.152'\nRPC_PORT = 8093\nSYNC_STATE_FIELD = \"bksyncstate\"\nSYNC_BLOCK_NUM = \"bksyncblocknum\"\nSAFE_BLOCK_FIELD = \"bksafeblock\"\nCONTRACT_CALLER = \"lktest001\"\n\nclass BTCCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"BTC\"\nRPC_HOST = '192.168.1.121'\nRPC_PORT = 60022\nSYNC_STATE_FIELD = \"btcsyncstate\"\nSYNC_BLOCK_NUM = \"btcsyncblocknum\"\nSAFE_BLOCK_FIELD = \"btcsafeblock\"\n\nclass LTCCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"LTC\"\nRPC_HOST = '192.168.1.124'\nRPC_PORT = 60014\nSYNC_STATE_FIELD = \"ltcsyncstate\"\nSYNC_BLOCK_NUM = \"ltcsyncblocknum\"\nSAFE_BLOCK_FIELD = \"ltcsafeblock\"\n\nclass UBCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"UB\"\nRPC_HOST = '192.168.1.124'\nRPC_PORT = 60011\nSYNC_STATE_FIELD = \"ubsyncstate\"\nSYNC_BLOCK_NUM = \"ubsyncblocknum\"\nSAFE_BLOCK_FIELD = \"ubsafeblock\"\n\n\n\n\n\nStart Middleware\n\n\n\n\nEnter directory of middleware,find file docker_op.sh,then excute command:\n\n\n./docker_op.sh", 
            "title": "Startup"
        }, 
        {
            "location": "/wallets/middleware-startup/#hyperexchange-middleware-setup-guide", 
            "text": "Last updated for v1.0.7.   HyperExchange Middleware  Used to collect/store and manage other blockchain data;Handle various operations of acrosschain (deposit/withdraw, etc.).", 
            "title": "HyperExchange Middleware Setup Guide"
        }, 
        {
            "location": "/wallets/middleware-startup/#download-and-install", 
            "text": "The latest version of HyperExchange Middleware can be downloaded from [https://github.com/HcashOrg/HyperExchange/releases/tag/v0.1).Now just support install on linux system.  When deployed, mongo and ubuntu images are used, and docker automatically downloads the image, so there is no active pull.   Config File   Before start middleware,need to config parameters of mongo/log/local rpc server/other chain rpc server  For example:  #!/usr/bin/env python \n# encoding: utf-8\n\n__author__ = 'hasee'\n\nimport logging\n\nclass CollectorConfig(object):\n# DB configure\nDB_POOL_SIZE = 10\nCONNECT_TIMEOUT = 50\nMONGO_HOST = '127.0.0.1'\nMONGO_PORT = 27017\nMONGO_NAME = 'chaindb'\nMONGO_USER = 'chaindb_user'\nMONGO_PASS = 'yqr.1010'\n\n# LOG configure\nLOG_LEVEL = logging.INFO\nLOG_FORMAT = '%(asctime)-15s %(levelname)s %(funcName)s %(message)s'\nLOG_FILENAME = \"btc_data_collector.log\"\n\n# SYNC configure\nSYNC_BLOCK_PER_ROUND = 10000\n\nclass BKCollectorConfig(CollectorConfig):\n# RPC SERVER configure \nASSET_SYMBOL = \"BK\"\nRPC_HOST = '192.168.1.152'\nRPC_PORT = 8093\nSYNC_STATE_FIELD = \"bksyncstate\"\nSYNC_BLOCK_NUM = \"bksyncblocknum\"\nSAFE_BLOCK_FIELD = \"bksafeblock\"\nCONTRACT_CALLER = \"lktest001\"\n\nclass BTCCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"BTC\"\nRPC_HOST = '192.168.1.121'\nRPC_PORT = 60022\nSYNC_STATE_FIELD = \"btcsyncstate\"\nSYNC_BLOCK_NUM = \"btcsyncblocknum\"\nSAFE_BLOCK_FIELD = \"btcsafeblock\"\n\nclass LTCCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"LTC\"\nRPC_HOST = '192.168.1.124'\nRPC_PORT = 60014\nSYNC_STATE_FIELD = \"ltcsyncstate\"\nSYNC_BLOCK_NUM = \"ltcsyncblocknum\"\nSAFE_BLOCK_FIELD = \"ltcsafeblock\"\n\nclass UBCollectorConfig(CollectorConfig):\nASSET_SYMBOL = \"UB\"\nRPC_HOST = '192.168.1.124'\nRPC_PORT = 60011\nSYNC_STATE_FIELD = \"ubsyncstate\"\nSYNC_BLOCK_NUM = \"ubsyncblocknum\"\nSAFE_BLOCK_FIELD = \"ubsafeblock\"   Start Middleware   Enter directory of middleware,find file docker_op.sh,then excute command:  ./docker_op.sh", 
            "title": "Download and Install"
        }, 
        {
            "location": "/advanced/cross-chain/bmp-protocol/", 
            "text": "HyperExchange will be the first system to achieve network interoperability using a Blockchain Multi Tunnel (BMT) protocol, HyperExchange Axis, Indicator, smart contracts and other blockchain innovations. HyperExchange lays the foundation for building cross-chain distributed commercial applications in its ecosystem.\n\n\nThe Blockchain Multi-Tunnel Protocol is the communication protocol used in the HyperExchange network. This protocol ensures point-to-point information transmission between blockchains.\n\n\nWhen a user creates a HyperExchange account, simultaneously a corresponding tunnel account is generated and linked to the HyperExchange account according to this protocol. When a cross-chain transaction occurs, corresponding data is encapsulated, packaged, and securely transferred through this protocol.\n\n\nTunnel accounts generated by the Protocol help the network identify and confirm unique correspondence for the transferred assets. This Protocol only recognizes assets of cross-chain transactions linked to a tunnel account, and uses this information to reach consensus resulting in the issuance or destroying of HIOU asset tokens.", 
            "title": "Blockchain Multi Tunnel (BMT) Protocol"
        }, 
        {
            "location": "/advanced/cross-chain/hx-axis/", 
            "text": "The HyperExchange Axis is an important component in achieving cross-chain communication. Acting as a multi-asset decentralised ledger, it is responsible for recording, verifying and broadcasting cross-chain data, generating and destroying corresponding HIOU tokens, and completing the transfer of cross-chain assets. In the HyperExchange Axis, network security is ensured by consensus through Senators. The binding relationship between a HyperExchange account, its corresponding tunnel account and the cross-chain transaction of each asset is verified by Senators on the chain. Consensus is reached to verify and ensure that each asset chain is consistent with assets listed on the HyperExchange Axis.", 
            "title": "HyperExchange Axis"
        }, 
        {
            "location": "/advanced/cross-chain/indicator/", 
            "text": "The Indicator is the HyperExchange client software interface. The Indicator is responsible for generating data in the HyperExchange ecosystem. Users use the Indicator to register for their HyperExchange accounts, become part of the ecosystem, and take part in its development by mining or validating cross-chain transactions to obtain rewards.", 
            "title": "Indicator"
        }, 
        {
            "location": "/advanced/cross-chain/init-process/", 
            "text": "1). After the initialisation of the HyperExchange network, an initial asset allocation and basic parameter configuration will be performed.\n\n\n2). After reaching consensus on the HyperExchange, a Senator creates multi-signature accounts for BTC, LTC, and other blockchains. Those addresses are then signed and controlled by all Senators and broadcasted throughout the network.               \n\n\n3). Each Senator pays a margin amount specified by the HCASH Foundation to be used for ensuring chain stability.", 
            "title": "Initialisation Process"
        }, 
        {
            "location": "/advanced/cross-chain/account-creation/", 
            "text": "To complete a cross-chain transfer, a Tourist (a basic user within the HyperExchange network) needs to create a HyperExchange account through the Indicator. The Indicator will then bind a corresponding tunnel account with that HyperExchange account.\n\n\nIn this way, when an asset (such as BTC) is deposited into a multi-signature tunnel account, the HyperExchange network will send the same amount of HIOU tokens to the senders corresponding HyperExchange account after the transaction has been confirmed. \n\n\nWhen the HyperExchange system is initialised or when a new Senator joins the network, the multi-signature account (denominated in BTC, LTC or others) needs to be created or updated to reflect all current Senators.\n\n\nAccount types include:\n\n\n1) HyperExchange Account:         \n\nTo participate within the network, users are required to create a HyperExchange account. This account will allow users to store, trade and stake multiple assets on the HyperExchange, including HIOU, HX and others.   \n\n\n2) Tunnel Account:    \n\nWhen a user creates an account in the HyperExchange, the network generates a corresponding tunnel account and the two accounts are bound together. When using bounded accounts, users will be subject to a maximum of 10,000 transactions per day. Any transactions above this limit will require verification and approval from a Citizen. (This 10,000-maximum limit can be adjusted through consensus).      \n\n\n3). Hot and Cold Multi-signature Account: \n\nCross-chain assets pledged to the network will be stored in hot and cold multi-signature wallets. Through consensus, these hot and cold multi-signature wallets are created and managed by all current Senators.", 
            "title": "Account Creation"
        }, 
        {
            "location": "/advanced/cross-chain/cross-chain-deposit/", 
            "text": "In addition to a HyperExchange account, users will also have a number of associated tunnel accounts. Through the HyperExchange bundled light wallet component derived from other asset chains, users can deposit assets from other asset chains or from centralised exchanges directly to their bounded tunnel account.\n\n\nIf a Citizen on the HyperExchange detects a transfer to a user\ns associated multi-signed deposit address, they wait for the blocks to reach a certain amount of confirmations. After this, the associated HyperExchange account will be indexed through the \nfrom\n address of the deposit, and credited a corresponding amount of HIOU (HXBTC/HXLTC, etc) tokens through consensus on the HyperExchange. After this, these credited tokens will be frozen (block m) until the block reaches a certain height (for example, m+17). From here, these assets \nunfreeze\n and become \navailable\n to be transacted.\nDepositing assets in the HyperExchange is divided into the following sections:      \n\n\na.  The user deposits assets into their associated tunnel account. This transaction confirmation depends on the confirmation time on the original asset chain. For example, BTC would require 6 blocks of confirmation, while LTC would require 12.\n\n\nb.  The process of transferring funds from a tunnel account to the corresponding multi-signature wallet is managed by Senator consensus. This transaction confirmation also relies on the confirmation time on the original asset chain. For example, BTC would require 6 blocks of confirmation, while LTC would require 12.\n\n\nc.  On the HyperExchange network, a Citizen generates corresponding HIOU tokens, which are then distributed to the user through consensus - this requires 17 confirmed blocks.\n\n\nThe operational flow chart for this process is as follows:\n\n\n\n\nDuring its operation, the Indicator will simplify human to computer interaction by packaging the majority of processes. The user only needs to follow simple steps to complete cross-chain transactions.", 
            "title": "Cross-chain Deposit Process"
        }, 
        {
            "location": "/advanced/cross-chain/cross-chain-withdrawall/", 
            "text": "At any point in time while using the network, a user may initiate a withdrawal transaction, which includes withdrawing assets from other chains.\n\n\nWhen a Senator receives a withdrawal transaction, they sign the transaction and will broadcast it to the network. When it comes to a Citizen\ns turn to produce a block, the Citizen will collect Senators\n signatures and will verify whether at least 2/3 of Senators have signed the transaction. If the specified conditions are met, the transaction and all collected signatures are packaged into a block. Otherwise, the transaction will not be packaged, but will be handled by the next batch of citizens.\n\n\nAfter a transaction is packaged into a block, the corresponding HIOU (such as HXBTC, HXLTC, etc.) tokens, owned by the user is destroyed. After verifying the transaction, the Senator first determines whether there is a large enough balance in the multi-signature hot wallet to facilitate the withdraw. If sufficient, a withdrawal transaction from a hot multi-signature wallet to the cash withdrawal address is signed by the Senators, and the withdrawal is enabled. If the balance is insufficient, an asset deposit from a multi-signature cold wallet to a multi-signature hot wallet is required. A Citizen will initiate the transfer process after the assets in the hot wallet are determined to be sufficient.\n\n\nThe Cross-link withdrawal process is divided into two steps:\n\n\n1). When a user initiates a withdrawal request on the HyperExchange, the request is first packaged by the Citizen (average 2.5 seconds), and waits for no less than 2/3 of Senator\ns signatures enabling the withdrawal request to be collected. If more than one-third of Senator\ns do not approve the request, the transaction is voided.\n\n\n2). When the packaged transaction collects 2/3 of signatures from Senators, it will generate a corresponding asset chain debit transaction. This transaction will be broadcasted by a Citizen to the corresponding asset chain for confirmation (meaning it will need to wait for a corresponding number of block confirmations e.g. BTC requires 6 confirmations). On the HyperExchange network, a Citizen packages this withdrawal transaction. When the transaction is approved, the cash withdrawal transaction is completed.\n\n\nThe specific technical implementation process is as follows:\n\n\nAfter a user initiates a withdrawal application, a Citizen initiates the corresponding original transaction from the multi-signature address transfer to the user\ns target address, and the original transaction is packaged in the src_trx, and broadcasted to the HyperExchange.\n\n\nAfter the Senator synchronizes to src_trx and verifies the transaction, the src_trx signature is wrapped to the sig_ trx and then the Citizen conducts the bookkeeping process.\n\n\nWhen the network collects enough signatures from Senators, a Citizen packages those signatures to generate a complete implementation transaction, and then they call the corresponding asset chain\ns transaction broadcast interface through the light wallet component built into the Indicator, and then broadcasts this to the corresponding assets chain.\n\n\nThe underlying operational flow chart of this process is as follows:", 
            "title": "Cross-chain Withdrawal Process"
        }, 
        {
            "location": "/advanced/cross-chain/financial-balance/", 
            "text": "If assets in the hot multi-signature account exceeds 3 times that of the specified limit, a fund rebalancing process is initiated. During this process, assets will be transferred from the multi-signature hot wallet address to the multi-signature cold wallet address.  \n\n\nThe specific technical implementation plan is as follows:   \n\n\nA senator initiates a rebalance process, this triggers a transaction which is packaged on the chain, other Senators will then verify that transaction. After being successfully verified, the signature of the transaction will be broadcasted and packaged by Citizens.\n\n\nWhen a Citizen receives 2/3 or more of Senators\n signatures, the corresponding asset chain transaction producing HIOU tokens will be confirmed, and will be broadcasted to the original chain, thus completing the rebalance process.", 
            "title": "Financial Balance Strategy"
        }, 
        {
            "location": "/advanced/cross-chain/fund-rebalance/", 
            "text": "A dynamic fund rebalancing process is conducted every 10,000 blocks, with the total amount of assets within a multi-signature hot wallet adjusted to a specified range.\n\n\nThis rebalancing transaction is then created by the Citizen who generated the block. This transaction will need to be signed by 2/3 of all Senators and then be broadcasted through the network.", 
            "title": "Dynamic Fund Rebalancing"
        }, 
        {
            "location": "/advanced/smart-contract/about-smart-contract/", 
            "text": "Smart contracts help HyperExchange users achieve complex cross-chain transactions, asset certifications, etc., while laying the foundation for building cross-chain distributed commercial applications in the ecosystem.", 
            "title": "About Smart Contract"
        }, 
        {
            "location": "/advanced/smart-contract/purchase-rule/", 
            "text": "Pending purchase orders utilise smart contracts.\n\n\nPending purchase orders are able to be partially filled.    \n\n\nPending purchase orders are able to be cancelled.       \n\n\nThe matching deal and the withdrawal of the pending order are both transactions conducted through smart contracts.  \n\n\nBuying pending orders, matching pending orders, and cancelling purchases all incur fees.\n\n\n\n\nFigure: Pending purchase orders", 
            "title": "Pending purchase order functionality rules"
        }, 
        {
            "location": "/advanced/smart-contract/smart-contract-template/", 
            "text": "Pending orders utilise smart contracts.\n\n\nMatching pending orders are completed through smart contracts, enabling scalability, more complexity in orders (such as transaction discounts) and limiting the minimum number of orders per transaction. \n\n\nConsidering that most of the order entry logic is the same and to avoid transferring new smart contract bytecode each time a contract is created, contracts can be registered in the chain as a template. Each contract template has a unique on-chain address. When creating a contract, you can use information such as the contract template address or the creator\ns address, instead of using the bytecode, thus saving costs associated with chain storage space.\n\n\nFully abstract templates significantly reduce the threshold for contract use.\n\n\nThe multi-asset transaction on the chain is not linked to the chain, and the user executes a buy or sell order on the chain, and other users actively match the corresponding order.", 
            "title": "Smart Contract Template"
        }, 
        {
            "location": "/advanced/smart-contract/smart-contract-fee/", 
            "text": "On the HyperExchange chain, transferring assets, creating smart contracts, creating smart contract templates, call contract, depositing to contracts and withdrawing from contracts, etc. all require transaction fees. \n\n\nUsers can initiate a transaction fee order to purchase a HIOU with HX tokens.\n\n\nWhen a user initiates a transaction, they may use HX or other assets to pay fees. The network will then automatically match the corresponding transaction fee for the transaction fee acceptance order.\n\n\nTransaction fee acceptance order cannot be reversed at any time. It is required to initiate the application for withdrawal that transaction first. After a block has been generated and the transaction fee acceptance order is not matched and used by a user, the withdrawal order can then be initiated. If the transaction fee acceptance order is used with a block generation cycle, the application for withdrawal will be rejected. The user needs to re-initiate the application later.\n\n\nUsers can initiate a handling acceptance fee for pending orders and can purchase a HIOU with HX tokens, which are then used to arrange the exchange of fees when pending orders are price matched.", 
            "title": "Fee structure"
        }, 
        {
            "location": "/advanced/smart-contract/smart-contract-feetype/", 
            "text": "The minimum fee to conduct a transaction within the HyperExchange network is set at 0.00001 HX (this fee can be modified if a community vote is taken and consensus is reached).\n\n\nTable: Smart Contract Fee\n\n\n\n\n\n\n\n\n\n\nFee\n\n\nBelongs to\n\n\n\n\n\n\n\n\n\n\nTransfer fee\n\n\nBase transaction fee (HX)\n\n\nSystem fee address\n\n\n\n\n\n\nContract creation fee\n\n\nBase transaction fee (HX)\n\n\nSystem fee address\n\n\n\n\n\n\nContract template creation fee\n\n\nBase transaction fee (HX)\n\n\nSystem fee address\n\n\n\n\n\n\nContract use fee\n\n\nBase transaction fee (HX)\n\n\nSystem fee address\n\n\n\n\n\n\nContract asset charging fee\n\n\nContract use fee (HX)\n\n\nSystem fee address\n\n\n\n\n\n\nWithdrawal of contract asset(s) fees\n\n\n.01% of the assets that are withdrawn (no fees on the contract creator) ; Contract use fee (HX)\n\n\nA certain percentage of the contract is withdrawn into the asset pool, contract invoking fee enters system fee address\n\n\n\n\n\n\nOthers\n\n\nBasic transaction fee (HX)\n\n\nSystem fee address", 
            "title": "Types of Fees"
        }, 
        {
            "location": "/advanced/pov/network-role/", 
            "text": "There are four roles that exist within the HyperExchange ecosystem: Tourist, Candidate Citizen, Citizen, and Senator.\n\n\n\n\nTourist\n\n\nIncludes all users on the HyperExchange chain and all users on other chains that interoperate with the HyperExchange network.\n\n\n\n\nCitizen\n\n\nA Citizen is a block generator and community governor of the HyperExchange chain, responsible for validating transactions and block generation. Citizens operate as decentralised mining pools on the chain. Candidate Citizens can become Citizens by providing multiple assets to stake on the chain (HSR/HC will receive a higher weighting), assets of which can be provided by themselves or supported by other users. If a Candidate Citizen does not have sufficient assets to pledge, it will be nearly impossible for them to become a Citizen.\n\n\n\n\nSenator\n\n\nA Senator is an asset manager and community administrator in the HyperExchange ecosystem. By consensus, a Senator is responsible for managing assets on hot and cold multi- signature addresses on different chains and for cross-chain interconnection. The total number of Senator is fixed to 15, which can be replaced and cannot be increased or decreased, divided into 5 safe Senator and 10 campaign Senator, safe Senator is determined only by the votes of these 5 Senator, and the campaign Senator is determined by the votes of Citizen.", 
            "title": "Network Roles"
        }, 
        {
            "location": "/advanced/pov/network-role/#tourist", 
            "text": "Includes all users on the HyperExchange chain and all users on other chains that interoperate with the HyperExchange network.", 
            "title": "Tourist"
        }, 
        {
            "location": "/advanced/pov/network-role/#citizen", 
            "text": "A Citizen is a block generator and community governor of the HyperExchange chain, responsible for validating transactions and block generation. Citizens operate as decentralised mining pools on the chain. Candidate Citizens can become Citizens by providing multiple assets to stake on the chain (HSR/HC will receive a higher weighting), assets of which can be provided by themselves or supported by other users. If a Candidate Citizen does not have sufficient assets to pledge, it will be nearly impossible for them to become a Citizen.", 
            "title": "Citizen"
        }, 
        {
            "location": "/advanced/pov/network-role/#senator", 
            "text": "A Senator is an asset manager and community administrator in the HyperExchange ecosystem. By consensus, a Senator is responsible for managing assets on hot and cold multi- signature addresses on different chains and for cross-chain interconnection. The total number of Senator is fixed to 15, which can be replaced and cannot be increased or decreased, divided into 5 safe Senator and 10 campaign Senator, safe Senator is determined only by the votes of these 5 Senator, and the campaign Senator is determined by the votes of Citizen.", 
            "title": "Senator"
        }, 
        {
            "location": "/advanced/pov/asset-collateral/", 
            "text": "By pledging assets, Citizens are selected to produce blocks and obtain block rewards. Tourists can also participate in mining and obtain mining rewards by pledging assets through Citizens. According to the RPPOM consensus mechanism, after a new block is generated, the system will automatically follow the underlying protocol and distribute rewards to citizens and their supporters (users who pledged their assets with Citizens), according to their weighting.\n\n\nThis kind of pledging mechanism has the following advantages:\n\n\n\n\n\n\nCollateral mining and rewards sharing are jointly verified by the entire network. After a new block is generated, the internal underlying protocol will distribute those block rewards to Citizens according to their weighting. There will be no uncertainties unlike those seen in centralised mining pools.\n\n\n\n\n\n\n\n\nSimilar PoS mining pool users are required to transfer their assets to their relevant pool,whereas the HyperExchange chain only stake assets, meaning, the users private key is still in their possession, there is no need to physically transfer it to a Citizen, thus there will be no security problems and users can withdraw their staked assets at any time.", 
            "title": "Asset Collateral"
        }, 
        {
            "location": "/advanced/pov/consensus-protocol/", 
            "text": "The basic requirement for a Citizen to compete for validation rights, is a collateral deposit. This deposit can consist of HX and all types of HIOU. The greater the number of collateral deposits, the greater the weight to be factored into the algorithm. RPPOM relies on 25 Citizens that are randomly selected at the beginning of each round, based on the aggregated weight of their funds.\n\n\nThe rules for selecting a new Citizen and generating a new block are as follows:\n\n\nWhenever the number of blocks reaches a multiple of 25, the process to select a new citizen begins.\n\n\n\n\n\n\n\n\nSettlement price: Each Senator has the obligation to provide the settlement price of HIOU via consensus. Each Senator provides this by calculating the exchange rate between HIOU and HX, according to real time prices on exchanges. The final settlement price is reached by calculating the average of all the remaining provided prices after removing the highest and lowest price provided. The settlement price will only affect the weight of a Candidate Citizen when the Citizen is competing to generate blocks.\n\n\nEvery 25 blocks a new citizen is selected, and subsequent blocks are in turn generated by a chosen Citizen. Therefore, fluctuation in settlement price of these 25 blocks does not affect the eligibility status of the Citizen generating blocks. During a new Citizen selection stage, the previous HIOU settlement price will be used to recalculate the Citizen  pledged weight. Then, based on that weight, a Citizen is selected for the current round. Therefore, fluctuations in settlement price would not affect the weight of the Citizen in the current round.\n\n\n\n\n\n\n\n\n\n\n\n\n25 Citizens are selected from the pool of candidate Citizens who meet the minimum pledging requirements to participate in block production. When calculating the amount of Citizen deposits, the sum of all HIOUs and HX pledged by Citizens are converted into HX, based on the settlement price. For example, Citizen A has pledged 10 BTC, 10 LTC, and 10 HX. The current settlement price is 1BTC: 100 HX, 1LTC: 10 HX. Thus, the total value pledged from Citizen A is 1110 HX.\n\n\nHyperExchange exchanges all pledged assets of Candidate Citizens into HX by price feeding, thus eliminating unqualified Candidate Citizens (those who do not meet minimum asset requirements). The network also orders Candidates from largest to smallest in terms of assets pledged to form a biginteger, and will give each candidate a valid \nbatch number\n. A hash number generated by random seeds will then do modulo operation on the biginteger in order to get a \npick number\n. When a \nbatch number\n of candidates matches the pick number, this candidate will become a citizen. \n\n\nIn this theory, Hyper Exchange will select 25 citizens in 25 rolls, and those citizens will take turns in producing blocks.\n\n\n\n\n\n\n\n\n\n\nThe RPPOM consensus mechanism allows the network to accurately generate a block every 5 seconds, with only one authorized producer generating blocks at any point in time. If a block is not produced within the specified time, the producer of the block will be skipped and replaced by the next Citizen. When one or more Citizens do not generate a block, there will be a delay of 10 seconds or more on the blockchain.\n\n\n\n\n\n\n\n\n\n\nWhen 100% of Citizens participate in the network, it will take an average of 2.5s for each transaction to be broadcasted throughout the network and to be 99.9% confirmed.\n\n\nHowever, to avoid unforeseen circumstances such as software bugs, network congestion, or a malicious Citizen creating two or more forks, a node needs to wait for 17 block confirmations in order to ensure that a transaction is absolutely irreversible. Based on the configuration of the network, this takes an average of 85 seconds. By default, all nodes will consider this block to be irreversible when 17 out of the 25 Citizens in the block reach consensus.", 
            "title": "Consensus Protocol/Algorithm"
        }, 
        {
            "location": "/advanced/pov/POV/", 
            "text": "POV is an extremely secure protocol that has the ability to safeguard against various malicious attacks and unexpected situations, providing a highly secure network and ensuring extensive asset protection. The following are some extreme situations which are able to be mitigated when using a POV consensus mechanism:\n\n\n\n\n\n\nIn the HyperExchange network, Citizens play an important role in maintaining the stability of the system. Assuming that some randomly chosen Citizens fail to carry out their duties, and as long as not all 25 elected Citizens default on their obligations, the stability of the chain will not be affected. Only one Citizen needs to be online in order to generate the 25 allotted blocks. Therefore, even in this extremely unlikely situation, the network can still operate effectively until new Citizens are selected. Under normal circumstances, if a Citizen does not generate a block for 5 consecutive rounds, then their participation rate will be reduced, which in turn will reduce their chances of being re-elected as a block node in the future. The calculation of a Citizen pledged asset amount will be adjusted by their participation rate based on the formula: Citizen final pledge amount of HX = User pledge amount of HX multiply by participation rate (0-100%). Therefore, Citizens are extremely incentivised to remain acting as a high-quality node, further ensuring that the probability of all 25 Citizens going offline is extremely unlikely to occur.\n\n\n\n\n\n\n\n\n\n\nAnother extreme situation could be where a Citizen maliciously generates 2 different blocks at the same time and subsequent Citizens continue to generate blocks based on that malicious block. Here, when the current round of block generation ends, the network will automatically transfer to whichever chain is longer. In such a scenario, as long as the block receives more than 17 confirmations, a double spending [12] attack can be avoided.\n\n\nIn the case where a mining pool holds a large amount of assets on the blockchain, but less than 51%, and assuming that the pool\ns asset allocation is perfect, this still does not guarantee that in each block production round that pool will hold more than 50% of block generation nodes. Hence, receiving more than 17 confirmations for each block still allows the network to avoid double spending attacks. \n\n\n\n\n\n\n\n\n\n\n\n\nIn the case of mining pools jointly holding more than 51% of assets on the blockchain, problems such as transaction rollbacks can occur. However, HX and HIOU assets can be used to mine in a pool, and this risk can be mitigated further when considering that HIOUs are managed by Senator consensus. \n\n\nHowever, if the mining pools are jointly harming the system, they will face the following repercussions:\n\n\n1) The participation rate of all miners involved will be reduced to 0% according to the consensus model (i.e. no matter how many assets are pledged, their chances of being re-elected as a block node in the future will be reduced to 0)\n\n\n2) All HIOUs that have been pledged in mining pools by miners will be frozen and restricted until further notice. Whether or not these frozen assets will be released depends on the amount of harm caused by that pool. \n\n\nAll involved mining pools will face the loss of their registration fee and all HIOU assets pledged in the pool, while users who have pledged assets to miners in that pool will need to enter an appeal process. From here, a Senator consensus will decide whether or not to unfreeze their assets.", 
            "title": "Security Features of a POV Consensus Mechanism"
        }, 
        {
            "location": "/advanced/community-governance/community-overview/", 
            "text": "To successfully ensure long-term progress whilst maintaining community involvement, must implement a complete and robust governance mechanism. Bitcoin relies on developer groups and miners to coordinate updates, but this process is slow due to disagreements between both groups, which historically has ultimately resulted in forking. Similarly, Ethereum split into ETH and ETC after adopting a hard fork to solve their DAO hacking incident. With these examples, as well as general sentiment in the industry, it is clear that a well-designed community governance model has always been a significant objective to achieve.\n\n\nOne of the main considerations behind HyperExchange is a well-designed community governance mechanism. Administrators of the community are known as \nSenators\n and \nCitizens\n, both of which jointly manage cross-chain assets through a consensus mechanism, and participate in the formulation and revision of community rules.", 
            "title": "Overview"
        }, 
        {
            "location": "/advanced/community-governance/select-senator/", 
            "text": "1.Total amount of Senators is 15 fixed, not less, not more, but replaceable. \n\n\n2.15 Senators are divided into two parts with entirely same rights, however, replacement methods are different. \n\n\n\n\n5 permanent Senators, which are entitled to initiate replacement.\n\n\n10 campaign senators on selection board, any random citizen can initiate a proposal of replacement, and proceed replacement after all Citizens voting. \n\n\n\n\n3.It remains 15 senators to governance the community after replacement.", 
            "title": "Selecting a Senator"
        }, 
        {
            "location": "/advanced/community-governance/senator-right/", 
            "text": "Senators are responsible for the ongoing management of the HyperExchange chain. Their duties include modifying parameters and processing fees through consensus, changing the minimum amount of required pledged assets from Citizens\n. \nSenators are responsible for the management of cross-chain assets. They manage these by creating hot and cold multi-signature wallets, with withdrawals not being approved until at least 2/3 of Senators reach consensus.\n\n\nSenators will receive 20% of contractual withdrawal fees and 30% of block rewards.", 
            "title": "Senator Rights and Duties"
        }, 
        {
            "location": "/advanced/community-governance/senator-replace-rule/", 
            "text": "As a part of the governance and operation of the HyperExchange chain, Citizens are involved in the replacement of Senators. The replacement process is as follows:\n\n\n\n\n5 fixed Senators\n\n\nThe 5 Senators are replaced by the process as following:\n\n\n\n\nnew Senator registers as an on-chain user(need spend 5HX)\n\n\nregister to be a senator(need spend 10000HX)\n\n\nAny random existing Senator initiates a proposal to nominate the new Senator and the Senator to be replaced. \n\n\nthe rest 4 Senators confirm such a proposal\n\n\nSenator  the new Senator becomes candidate Senator after 2/3 signatures confirmation\n\n\nthe new 15 Senators launch cross-chain wallet replacement process\n\n\nNew Senator officially becomes a Senator after wallet replacement process finished. The Senator who just has been replaced loses its identity. \n\n\nNew Senator begins to get mining reward and other reword, the Senator who just has been replaced becomes ordinary registered user. \n\n\n\n\n\n\n10 campaigns Senator\n\n\nThese 10 Senator replacement processes is more complicated, please find it as following:\n\n\n1.A certain amount of hc is required as a security deposit before the election\n\n\n2.new Senator registers and becomes on-chain user\n\n\n3.Any Citizen initiates a replacement proposal, the process is as follows:\n\n\n\n\nduring the period of such a proposal, there should be a normal state of Senator without any campaign \n\n\nmaximum nomination amount for Senators replacement is 3, in order to keep a secure system\n\n\nAfter the proposal is initiated by any Citizen, the entire chain is in collection period, lasting 16,000 blocks (about 1 day), which is part of the election cycle.\n\n\n\n\nAll Citizen proposals are screened in the following order of priority (prior to the previous conditions), and finally only one proposal is confirmed\n\n\ni. The maximum amount of the campaign payment in the proposal is given priority\n\n\nIi. The maximum amount citizen pledge assets is given priority\n\n\nIii. Earlier proposal block confirmation is given priority\n\n\nIv. Earlier Packing within the same block is given priority\n\n\n\n\n\n\n4.After the end of the proposal collection period, the sole proposal should be selected and voting period started.\n\n\n\n\nThis cycle lasts for 80,000 blocks (approximately 5 days)\n\n\nAll Citizen can initiate voting during this period\n\n\nTake all Citizens pledged assets as total weight, proposal is passed when more than 2/3 weight of citizens confirm.\n\n\nIf the voting period does not meet the conditions of proposal, the proposal becomes invalid\n\n\n\n\n5.When the proposal for voting period is passed, it will enter replacement period.\n\n\n\n\nDuring this period, the new Senator is required to submit cross-chain asset management information (ie public key, all cross-chain assets, and initiate asset transfer transactions)\n\n\nThis cycle lasts for 80,000 blocks (approximately 5 days)\n\n\nIf asset is  successfully transferred during this period, replacement of old Senator by new Senator is completed. \n\n\nif unable to provide till the end of this period, proposal becomes invalid. \n\n\n\n\n6.the entire chain finishes election cycle after voting period, which means new replacement nomination can be initiated.\n\n\n\n\nThe campaign cycle\n\n\nThe campaign cycle starts since confirmation of the first on-chain proposal, finishes when new Senator completes asset wallet replacement and gets reward. Campaign cycle is a one-line process that cannot be paralleled, which ensuring that no excessive states will be generated, avoid causing unnecessary coding errors.\n\n\n\n\nThe four states described in the process has been explained in details in the campaign process, please see summary as below: \n\n\n\n\nNo campaign status \u2013 no replace proposal is going on in this status, any proposal could be initiated in this status. HX chain should always be in this status apart from election cycle.\n\n\nProposal Collection \u2013 When HX chain is in \u201cno campaign\u201d status and any proposal initiated by Citizen is confirmed in blocks, the block has entered into the proposal collection status, which lasts 16,000 blocks and ends immediately after 16,000 blocks.\n\n\nVoting Collection \u2013Proposal collection status is initiated by a proposal, in which case at least one (and only one) proposal will enter voting collection phase. All Citizens have to vote on this proposal in such status. This status lasts for 80,000 blocks and ends immediately after 80,000 blocks.\n\n\nSenator replacement status \u2013 it will be Senator Replacement stage if there is enough Citizens to vote (2/3) in voting collection status, otherwise it will return directly to \u201cno campaign\u201d status. In such status, all Senators initiate asset multi-sign address change transaction and enter \u201cno campaign\u201d status after all transactions have been completed. At this point, the new Senator replaces the old Senator and begins to receive reward. This status lasts for 80,000 blocks and ends immediately after 80,000 blocks. It enters \nno campaign\n status, proposal becomes invalid, original Senators remain unchanged.\n\n\n\n\n\n\ncost of proposal\n\n\nProposal can be initiated by any Citizen, multiple proposals may be initiated during proposal collection status. Here is a description of the cost of proposal:\n\n\n\n\nEvery proposal has a cost, that is, the initiation of proposal requires a certain fee, minimum 100HX, no upper limit.\n\n\nProposal fee can be increased, but each increase must be an integer multiple of 100HX.\n\n\nThis fee is not charged by anyone but will be destroyed immediately. That is to say, as long as a proposal is packaged into a block, the fee in the proposal has been destroyed.\n\n\nEven a proposal is not confirmed as a voting proposal by the end of the proposal collection period, fee will not be returned.\nThe reason of having cost of proposal is to prevent initiating the proposal endlessly by malicious node. A normal node does not need to pay too much fee when initiating a proposal. Even is not selected in one election, it can be used for the next time election.\nMeanwhile, after proposal confirmation, voting phase remains. Even if malicious node wins the right to confirm the proposal, if there is not enough Citizen voting support, it will still fail to be elected with unnecessary consumption of HX.", 
            "title": "Citizens Involvement in the Replacement of Senators"
        }, 
        {
            "location": "/advanced/community-governance/senator-replace-rule/#5-fixed-senators", 
            "text": "The 5 Senators are replaced by the process as following:   new Senator registers as an on-chain user(need spend 5HX)  register to be a senator(need spend 10000HX)  Any random existing Senator initiates a proposal to nominate the new Senator and the Senator to be replaced.   the rest 4 Senators confirm such a proposal  Senator  the new Senator becomes candidate Senator after 2/3 signatures confirmation  the new 15 Senators launch cross-chain wallet replacement process  New Senator officially becomes a Senator after wallet replacement process finished. The Senator who just has been replaced loses its identity.   New Senator begins to get mining reward and other reword, the Senator who just has been replaced becomes ordinary registered user.", 
            "title": "5 fixed Senators"
        }, 
        {
            "location": "/advanced/community-governance/senator-replace-rule/#10-campaigns-senator", 
            "text": "These 10 Senator replacement processes is more complicated, please find it as following:  1.A certain amount of hc is required as a security deposit before the election  2.new Senator registers and becomes on-chain user  3.Any Citizen initiates a replacement proposal, the process is as follows:   during the period of such a proposal, there should be a normal state of Senator without any campaign   maximum nomination amount for Senators replacement is 3, in order to keep a secure system  After the proposal is initiated by any Citizen, the entire chain is in collection period, lasting 16,000 blocks (about 1 day), which is part of the election cycle.   All Citizen proposals are screened in the following order of priority (prior to the previous conditions), and finally only one proposal is confirmed  i. The maximum amount of the campaign payment in the proposal is given priority  Ii. The maximum amount citizen pledge assets is given priority  Iii. Earlier proposal block confirmation is given priority  Iv. Earlier Packing within the same block is given priority    4.After the end of the proposal collection period, the sole proposal should be selected and voting period started.   This cycle lasts for 80,000 blocks (approximately 5 days)  All Citizen can initiate voting during this period  Take all Citizens pledged assets as total weight, proposal is passed when more than 2/3 weight of citizens confirm.  If the voting period does not meet the conditions of proposal, the proposal becomes invalid   5.When the proposal for voting period is passed, it will enter replacement period.   During this period, the new Senator is required to submit cross-chain asset management information (ie public key, all cross-chain assets, and initiate asset transfer transactions)  This cycle lasts for 80,000 blocks (approximately 5 days)  If asset is  successfully transferred during this period, replacement of old Senator by new Senator is completed.   if unable to provide till the end of this period, proposal becomes invalid.    6.the entire chain finishes election cycle after voting period, which means new replacement nomination can be initiated.", 
            "title": "10 campaigns Senator"
        }, 
        {
            "location": "/advanced/community-governance/senator-replace-rule/#the-campaign-cycle", 
            "text": "The campaign cycle starts since confirmation of the first on-chain proposal, finishes when new Senator completes asset wallet replacement and gets reward. Campaign cycle is a one-line process that cannot be paralleled, which ensuring that no excessive states will be generated, avoid causing unnecessary coding errors.   The four states described in the process has been explained in details in the campaign process, please see summary as below:    No campaign status \u2013 no replace proposal is going on in this status, any proposal could be initiated in this status. HX chain should always be in this status apart from election cycle.  Proposal Collection \u2013 When HX chain is in \u201cno campaign\u201d status and any proposal initiated by Citizen is confirmed in blocks, the block has entered into the proposal collection status, which lasts 16,000 blocks and ends immediately after 16,000 blocks.  Voting Collection \u2013Proposal collection status is initiated by a proposal, in which case at least one (and only one) proposal will enter voting collection phase. All Citizens have to vote on this proposal in such status. This status lasts for 80,000 blocks and ends immediately after 80,000 blocks.  Senator replacement status \u2013 it will be Senator Replacement stage if there is enough Citizens to vote (2/3) in voting collection status, otherwise it will return directly to \u201cno campaign\u201d status. In such status, all Senators initiate asset multi-sign address change transaction and enter \u201cno campaign\u201d status after all transactions have been completed. At this point, the new Senator replaces the old Senator and begins to receive reward. This status lasts for 80,000 blocks and ends immediately after 80,000 blocks. It enters  no campaign  status, proposal becomes invalid, original Senators remain unchanged.", 
            "title": "The campaign cycle"
        }, 
        {
            "location": "/advanced/community-governance/senator-replace-rule/#cost-of-proposal", 
            "text": "Proposal can be initiated by any Citizen, multiple proposals may be initiated during proposal collection status. Here is a description of the cost of proposal:   Every proposal has a cost, that is, the initiation of proposal requires a certain fee, minimum 100HX, no upper limit.  Proposal fee can be increased, but each increase must be an integer multiple of 100HX.  This fee is not charged by anyone but will be destroyed immediately. That is to say, as long as a proposal is packaged into a block, the fee in the proposal has been destroyed.  Even a proposal is not confirmed as a voting proposal by the end of the proposal collection period, fee will not be returned.\nThe reason of having cost of proposal is to prevent initiating the proposal endlessly by malicious node. A normal node does not need to pay too much fee when initiating a proposal. Even is not selected in one election, it can be used for the next time election.\nMeanwhile, after proposal confirmation, voting phase remains. Even if malicious node wins the right to confirm the proposal, if there is not enough Citizen voting support, it will still fail to be elected with unnecessary consumption of HX.", 
            "title": "cost of proposal"
        }, 
        {
            "location": "/advanced/community-governance/community-advantages/", 
            "text": "Senators manage assets and govern communities through a consensus mechanism. Citizens use that consensus mechanism to vote on whether or not to replace a Senator. The interests of the two parties are aligned and they maintain each other, ensuring optimal network security and stability.\n\n\nThe solution of keeping 5 permanent Senators prevents the possibility of intentionally withdraw cross-chain assets by controlling more 2/3 Senators through voting mechanism.\n\n\nThe interests of Senators are closely related to the interests of the community. Senators are rewarded with incentives and benefits provided through the HyperExchange ecosystem.", 
            "title": "Advantages of Community Governance"
        }, 
        {
            "location": "/research/ide/ide-introduce/", 
            "text": "HX Smart Conctract IDE\n\n\nIDE is mostly used for writing and translating contract and on-chain registration, debug functionality will be added in the future. \n\n\nThe main functions are briefly described below:\n\n\n\n\nuvlua/java/c#/kotlin can be used when writing contract on IDE, it provides functionalities such as code association, templates and etc.\uff08For example, newtoken contract template\uff09\n\n\nIDE helps user to write and translate languages within a finger tap, which makes it much more convenient to generate contract into bytecode. \n\n\nIDE uses file system to manage contracts, you can easily manage many original files there and displayed as file system form in IDE. \n\n\nBackstage offers official chains and corresponding testing chains of CTC, UB, HX and etc, which can realizes part of functionalities of the wallet of each chain, such as account management, registration and transaction.  \n\n\nIDE support contract release. User can release smart contract onto the chain after successfully testing it in a test environment. \n\n\nIt manages registered contracts and allows users to review registered contacts.", 
            "title": "IDE Introduce"
        }, 
        {
            "location": "/research/ide/ide-introduce/#hx-smart-conctract-ide", 
            "text": "IDE is mostly used for writing and translating contract and on-chain registration, debug functionality will be added in the future.   The main functions are briefly described below:   uvlua/java/c#/kotlin can be used when writing contract on IDE, it provides functionalities such as code association, templates and etc.\uff08For example, newtoken contract template\uff09  IDE helps user to write and translate languages within a finger tap, which makes it much more convenient to generate contract into bytecode.   IDE uses file system to manage contracts, you can easily manage many original files there and displayed as file system form in IDE.   Backstage offers official chains and corresponding testing chains of CTC, UB, HX and etc, which can realizes part of functionalities of the wallet of each chain, such as account management, registration and transaction.    IDE support contract release. User can release smart contract onto the chain after successfully testing it in a test environment.   It manages registered contracts and allows users to review registered contacts.", 
            "title": "HX Smart Conctract IDE"
        }, 
        {
            "location": "/research/ide/ide-using/", 
            "text": "IDE Using\n\n\nWe will introduce how to use HX IDE in this page.\n\n\nDownload HX IDE\n\n\nYou can visit website:\nhttp://www.anychain.org/\n to download HX IDE,now just support for Win7 above platform. Select the 64-bit and 32-bit versions of your system to download.\n\n\nStart IDE\n\n\nOnce you\nve downloaded it, you\nll get a zip file, unpack it into any directory on your computer, and then open the directory with an AnyChain.exe file inside.double-click on the file to launch your HX IDE.\n\n\n\n\nFirst start IDE need to setup a store path:\n\n\n\n\nMain Window\n\n\n\n\nMenu Bar Description:\n\n\n1.In \nFile\n menu, include\n\n\n\n\n\n\nNew File\n :create new uvlua/java/c#/kotlin contract file.\n\n\n\n\n\n\nImport File\n :import local uvlua/java/c#/kotlin contract file.\n\n\n\n\n\n\nSave/Save All/Close/Close All\n :save opened file/save all opened files/close opened file/close all opened file.\n\n\n\n\n\n\nConfigure\n :change language/theme/chaintype/startchain.\n\n\n\n\n\n\n\n\n2.In \nEdit\n menu, include \nRedo\n and \nUndo\n.\n\n\n3.In \nContract\n menu, include \nRegister Contract/UpgradeCcontract/CallContract\n.\n\n\n4.In \nDebug\n menu, include \nCompile/Debug/Step/Stop/TabBreak/CleanBreak\n.\n\n\n5.In \nTool\n menu include:\n\n\n\n\n\n\nConsole\n :you can excute rpc command here.\n\n\n\n\n\n\nAccountManager\n :you can create a new account or import an account.\n\n\n\n\n\n\nTransfer\n :you can send a transfer transaction.\n\n\n\n\n\n\n6.In \nHelp\n menu include:\n\n\n\n\n\n\nHelp F1\n: Jump to the web site of the contract programming document.\n\n\n\n\n\n\nAbout\n: about us.", 
            "title": "IDE Using"
        }, 
        {
            "location": "/research/ide/ide-using/#ide-using", 
            "text": "We will introduce how to use HX IDE in this page.", 
            "title": "IDE Using"
        }, 
        {
            "location": "/research/ide/ide-using/#download-hx-ide", 
            "text": "You can visit website: http://www.anychain.org/  to download HX IDE,now just support for Win7 above platform. Select the 64-bit and 32-bit versions of your system to download.", 
            "title": "Download HX IDE"
        }, 
        {
            "location": "/research/ide/ide-using/#start-ide", 
            "text": "Once you ve downloaded it, you ll get a zip file, unpack it into any directory on your computer, and then open the directory with an AnyChain.exe file inside.double-click on the file to launch your HX IDE.   First start IDE need to setup a store path:", 
            "title": "Start IDE"
        }, 
        {
            "location": "/research/ide/ide-using/#main-window", 
            "text": "Menu Bar Description:  1.In  File  menu, include    New File  :create new uvlua/java/c#/kotlin contract file.    Import File  :import local uvlua/java/c#/kotlin contract file.    Save/Save All/Close/Close All  :save opened file/save all opened files/close opened file/close all opened file.    Configure  :change language/theme/chaintype/startchain.     2.In  Edit  menu, include  Redo  and  Undo .  3.In  Contract  menu, include  Register Contract/UpgradeCcontract/CallContract .  4.In  Debug  menu, include  Compile/Debug/Step/Stop/TabBreak/CleanBreak .  5.In  Tool  menu include:    Console  :you can excute rpc command here.    AccountManager  :you can create a new account or import an account.    Transfer  :you can send a transfer transaction.    6.In  Help  menu include:    Help F1 : Jump to the web site of the contract programming document.    About : about us.", 
            "title": "Main Window"
        }, 
        {
            "location": "/faq/wallet-usage/wallet-usage/", 
            "text": "HX-Indicator Usage Q/A\n\n\nQ\uff1aHX-Indicator how to upgrade\n\n\nA\uff1aAt left bottom, click \nHelp\n -\n \nsoftware update\n, click to check the update, if there is a new version of the release, it will be automatically downloaded, click the update immediately, then automatically restart the wallet, the wallet interface will be displayed after success.\n\n\nQ\uff1aWhen upgrading, click update now and keep reminding that the wallet is closing or loading\n\n\nA\uff1aIf the wait time is long, open the task manager and end the processhx_node.exe/hx_cli.exe/HXIndicator.exe, Download the latest version from the official website, locate the HXIndicator.exe file and double-click it. After success, you will be prompted to enter your wallet password.\n\n\nQ\uff1aWhen starting HXIndicator.exe, if shows loading a long time or prompt failed to start hx_node.exe\n\n\nA\uff1aIf loading is still displayed, open the task manager, end the process hx_node.exe, hx_cli.exe, HXIndicator.exe, find the data path of hx, move the \nblockchain\n folder to the recycle bin, and do not delete other files.\n\n\nQ\uff1aThe prompt block cannot be synchronized\n\n\nA\uff1aClick the time in the lower right corner of the computer, find the Internet time -\n change Settings -\n immediately update, re-open the HXIndicator.exe, start synchronization.\n\n\nQ\uff1aHow long does HC recharge arrive in the account\n\n\nA\uff1aNormally, you need 8 blocks confirm to Tunnel account, and then \nallot\n and wait for 4 blocks confirm to go to the HX chain.\n\n\nQ\uff1aContract registration prompt failed\n\n\nA\uff1aTake note that the HXIndicator.exe path cannot contain Chinese.", 
            "title": "Hx-indicator usage Questions"
        }, 
        {
            "location": "/faq/wallet-usage/wallet-usage/#hx-indicator-usage-qa", 
            "text": "Q\uff1aHX-Indicator how to upgrade  A\uff1aAt left bottom, click  Help  -   software update , click to check the update, if there is a new version of the release, it will be automatically downloaded, click the update immediately, then automatically restart the wallet, the wallet interface will be displayed after success.  Q\uff1aWhen upgrading, click update now and keep reminding that the wallet is closing or loading  A\uff1aIf the wait time is long, open the task manager and end the processhx_node.exe/hx_cli.exe/HXIndicator.exe, Download the latest version from the official website, locate the HXIndicator.exe file and double-click it. After success, you will be prompted to enter your wallet password.  Q\uff1aWhen starting HXIndicator.exe, if shows loading a long time or prompt failed to start hx_node.exe  A\uff1aIf loading is still displayed, open the task manager, end the process hx_node.exe, hx_cli.exe, HXIndicator.exe, find the data path of hx, move the  blockchain  folder to the recycle bin, and do not delete other files.  Q\uff1aThe prompt block cannot be synchronized  A\uff1aClick the time in the lower right corner of the computer, find the Internet time -  change Settings -  immediately update, re-open the HXIndicator.exe, start synchronization.  Q\uff1aHow long does HC recharge arrive in the account  A\uff1aNormally, you need 8 blocks confirm to Tunnel account, and then  allot  and wait for 4 blocks confirm to go to the HX chain.  Q\uff1aContract registration prompt failed  A\uff1aTake note that the HXIndicator.exe path cannot contain Chinese.", 
            "title": "HX-Indicator Usage Q/A"
        }, 
        {
            "location": "/faq/re-pledging-of-asset-model/", 
            "text": "The unique re-pledging model utilised within the HyperExchange enables the generation of complicated trading logic through the use of smart contracts.\n\n\n\n\n\n\nCollateral assets provided to Citizens by Tourists can be re-pledged through smart contracts to other users, to provide them with the ability to participate in financial services on the chain, such as collateralised loans.\n\n\n\n\n\n\nAssets cannot be re-pledged more than once at a time.\n\n\n\n\n\n\nTourist A has previously pledged assets to a Citizen. Tourist A can borrow an asset from Tourist B, by re-pledging their pledged assets through a smart contract. If Tourist A breaks the contract, or does not have sufficient funds for remittance, the assets Tourist A re-pledged will be automatically deducted, to make a sufficient payment to Tourist B.\n\n\n\n\n\n\nWhen Tourist A re-pledges their assets to a Citizen, the rights to block rewards and distribution rewards from these assets still belong to Tourist A until payment is made.\n\n\n\n\n\n\nThe specific borrowing contract logic is implemented in smart contracts. Tourists can also develop versatile financial derivatives contracts.\n\n\n\n\n\n\nThe method for re-pledging assets to Citizens is as follows:\n\n\n Sources", 
            "title": "The re-pledging of assets Model"
        }, 
        {
            "location": "/faq/contract-virtual-machine/", 
            "text": "The implementation of the smart contract virtual machine is completed by using a Turing Complete bytecode which is specifically designed for blockchain smart contracts. Compilers that implement statically-typed high-level programming languages (such as C#, Java, TypeScript, etc) will compile smart contract bytecode from high-level languages.\n\n\nSmart contract virtual machine:\n\n\nThe smart contract virtual machine is implemented as a Turing-complete bytecode virtual machine. It can be deterministic in runtime, has controllable execution logic and monitorable status changes.\n\n\nSmart contract language:\n\n\nA subset of the main features of existing programming languages such as C#, Java, TypeScript and other popular languages are used as the programming language for smart contracts, which is compiled to bytecodes that can be used by users who build these contracts.\n\n\nBuilt-in library for smart contracts:\n\n\nThe built-in libraries for smart contracts include common numeric operations and string operations, etc., as well as querying, trading, etc. These libraries can be invoked when writing these contracts.\n\n\nSmart calls to each other:\n\n\nAfter a smart contract is deployed on the chain, it can call other smart contracts/built-in native contracts or be invoked by other smart contracts in addition to being directly invoked by the user or accessing assets.\n\n\nSome of the functional logic can be implemented by smart contracts and deployed on the chain as a third-party library to be used by other smart contracts on the chain, and function as a blockchain extension.\n\n\nFunctional scope and restrictions of smart contracts:\n\n\nSmart contracts use Turing complete programming language to write business logic, query data on the chain, access the state of the contract storage in a deterministic nature, call other smart contracts/native contracts, and output return information to the caller.\nRestrictions: Cannot read out-of-chain data; cannot non-deterministically generate inconsistent logic for each node; the number of execution instructions and the amount of memory used are controlled by the blockchain; the blockchain can terminate the execution of smart contracts at any time, such as when the cost exceeds the budget.\n\n\nStatus of storage of smart contracts:\n\n\nEach smart contract has a separate storage space called \nstorage\n. The storage format of \nStorage\n is an unstructured data structure. Instead of storing the latest \nstorage\n on the chain each time, the chain stores the changes to the \nstorage\n of the smart contracts. For example, when invoking a smart contract, if the contracts \nstorage\n is changed from {\nname\n: \nchain\n } to {\nname\n: \nchain\n, \ncount\n: 123 }, then only the changed part: {\ncount\n: 123 } is stored, and even if when calculating the fee for contract invoking, the \nstorage\n section charges only the size of the changed part rather than the size of the full storage. Therefore, even if the storage space of a smart contract is relatively large, as long as the amount of changes in each call contract is not large, the incremental data on the chain and the processing fee will not be high.\n\n\nSmart contract status query:\n\n\nThe smart contract can directly query the \nstorage\n value, and can also retrieve data in the nested data structure through SQL-like programming language. When smart contract \nstorage\n is large, the data load can be reduced in this way to increase the query speed, avoid a full table scan, and increase upper limit data access. For example: The \nstorage\n structure of a smart contract is similar to:\n{\n \nname\n: \nblockchain\n,\n \nuserBalances\n: [\n { \nuserAddress\n: \na\n, \namount\n: 10000, \nfreeze\n: false },\n { \nuserAddress\n: \nb\n, \namount\n: 20000, \nfreeze\n: true },\n { \nuserAddress\n: \nc\n, \namount\n: 30000, \nfreeze\n: false }, \nContinue this for a few hundred thousand lines\n ]\n}\n\n\nYou can use the SQL syntax like var freezedUsers = storage.query (\nselect userBalance.userAddress from userBalances as userBalance where freeze=true\n) to query out addresses of all accounts in the smart contracts. This greatly reduces the amount of data reading and writing, and avoids a full table scan. In addition, this can meet requirements in business scenarios that store more data in the smart contract, with each read consisting only of a small amount of data. For example, this can be utilised in a smart contract to achieve simple Push exchanges, realise smart contract assets, for contract insurance, etc.", 
            "title": "Smart Contracts and Virtual Machines"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#smart-contract-virtual-machine", 
            "text": "The smart contract virtual machine is implemented as a Turing-complete bytecode virtual machine. It can be deterministic in runtime, has controllable execution logic and monitorable status changes.", 
            "title": "Smart contract virtual machine:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#smart-contract-language", 
            "text": "A subset of the main features of existing programming languages such as C#, Java, TypeScript and other popular languages are used as the programming language for smart contracts, which is compiled to bytecodes that can be used by users who build these contracts.", 
            "title": "Smart contract language:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#built-in-library-for-smart-contracts", 
            "text": "The built-in libraries for smart contracts include common numeric operations and string operations, etc., as well as querying, trading, etc. These libraries can be invoked when writing these contracts.", 
            "title": "Built-in library for smart contracts:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#smart-calls-to-each-other", 
            "text": "After a smart contract is deployed on the chain, it can call other smart contracts/built-in native contracts or be invoked by other smart contracts in addition to being directly invoked by the user or accessing assets.  Some of the functional logic can be implemented by smart contracts and deployed on the chain as a third-party library to be used by other smart contracts on the chain, and function as a blockchain extension.", 
            "title": "Smart calls to each other:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#functional-scope-and-restrictions-of-smart-contracts", 
            "text": "Smart contracts use Turing complete programming language to write business logic, query data on the chain, access the state of the contract storage in a deterministic nature, call other smart contracts/native contracts, and output return information to the caller.\nRestrictions: Cannot read out-of-chain data; cannot non-deterministically generate inconsistent logic for each node; the number of execution instructions and the amount of memory used are controlled by the blockchain; the blockchain can terminate the execution of smart contracts at any time, such as when the cost exceeds the budget.", 
            "title": "Functional scope and restrictions of smart contracts:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#status-of-storage-of-smart-contracts", 
            "text": "Each smart contract has a separate storage space called  storage . The storage format of  Storage  is an unstructured data structure. Instead of storing the latest  storage  on the chain each time, the chain stores the changes to the  storage  of the smart contracts. For example, when invoking a smart contract, if the contracts  storage  is changed from { name :  chain  } to { name :  chain ,  count : 123 }, then only the changed part: { count : 123 } is stored, and even if when calculating the fee for contract invoking, the  storage  section charges only the size of the changed part rather than the size of the full storage. Therefore, even if the storage space of a smart contract is relatively large, as long as the amount of changes in each call contract is not large, the incremental data on the chain and the processing fee will not be high.", 
            "title": "Status of storage of smart contracts:"
        }, 
        {
            "location": "/faq/contract-virtual-machine/#smart-contract-status-query", 
            "text": "The smart contract can directly query the  storage  value, and can also retrieve data in the nested data structure through SQL-like programming language. When smart contract  storage  is large, the data load can be reduced in this way to increase the query speed, avoid a full table scan, and increase upper limit data access. For example: The  storage  structure of a smart contract is similar to:\n{\n  name :  blockchain ,\n  userBalances : [\n {  userAddress :  a ,  amount : 10000,  freeze : false },\n {  userAddress :  b ,  amount : 20000,  freeze : true },\n {  userAddress :  c ,  amount : 30000,  freeze : false },  Continue this for a few hundred thousand lines\n ]\n}  You can use the SQL syntax like var freezedUsers = storage.query ( select userBalance.userAddress from userBalances as userBalance where freeze=true ) to query out addresses of all accounts in the smart contracts. This greatly reduces the amount of data reading and writing, and avoids a full table scan. In addition, this can meet requirements in business scenarios that store more data in the smart contract, with each read consisting only of a small amount of data. For example, this can be utilised in a smart contract to achieve simple Push exchanges, realise smart contract assets, for contract insurance, etc.", 
            "title": "Smart contract status query:"
        }, 
        {
            "location": "/faq/concurrency-model/", 
            "text": "By distributing smart contract transactions to concurrent execution pipelines, it is possible to increase the ability of a large number of contract transactions to execute concurrently and shorten overall transaction execution time.\n\n\n\n\n\n\nAll smart contracts that need to be executed within a block time will be divided into different pipelines for execution. Pipelines refer specifically to the contract handler, which means that different pipelines can perform contract execution simultaneously in different threads.\n\n\n\n\n\n\nPipes are divided into serial pipes and parallel pipes. Parallel pipes can be executed in parallel. Serial pipes cannot be executed in parallel with other pipes. There is only one serial pipe at any given time.\n\n\n\n\n\n\nAfter a pipeline starts, the smart contract transaction is executed serially.\n\n\n\n\n\n\nFirst execute a smart contract in the serial pipeline and then parallelly execute it in multiple parallel pipes.\n\n\n\n\n\n\nThe list of read or modified accounts/contract addresses is referred to as the list of dependent addresses in a transaction. Smart contract transactions can be pre-executed in the client to obtain this list. Ordinary transactions also rely on these lists. Conflicting transactions that rely on address lists cannot be placed on different channels.\n\n\n\n\n\n\nTransactions that are not pre-attached to the dependent address lists can enter the serial pipeline, but their fees will increase.\n\n\n\n\n\n\nWhen the list of dependent addresses of a contract statement conflicts with the actual executed list of dependent addresses, the execution fails, a penalty fee is collected and a blank transaction is packaged.\n\n\n\n\n\n\nWhen executing pipelines in parallel, contract transactions under most scenarios can be significantly improved (by a factor of at least 4).", 
            "title": "Concurrency Model"
        }, 
        {
            "location": "/faq/consensus/", 
            "text": "Smart contracts need to obtain a consensus-based random number in order to work. To generate this number, the input data must be using chain related data. Here are two methods for obtaining random numbers:\n\n\nSimple random number:\n\n\nThe contract invokes an interface to obtain a random number, and provides a random number based on the current random seed.\n\n\nComplex random number:\n\n\nThe user first specifies a set of consecutive blocks in the contract. The system then uses the prev_secret of the block set as an input to generate a random number. The user can specify a set of blocks that have not been generated to be specified in the contract. After the block set is generated, the random number is determined.\n\n\nUsers can directly invoke the interface in the contract to get a simple random number. For this method, there is a possibility that they can choose not to package the invocation based on the results of random numbers and their own interests, should the stakeholders of execution result are the current block producer and the contract invocation is single use. \n\n\nWhen users want to avoid this situation, they can use complex random numbers. A complex random number takes the \nprev_secret\n of a set of continuous blocks as an input. If the block producer wants to generate a random number, the \nprev_secret\n of the current block needs to be adjusted according to that of other blocks in the set. However, the \nprev_secret\n will have been determined in a previous round of production blocks and cannot be modified, meaning that producers cannot control the generation of random numbers.", 
            "title": "Consensus-based, Random Number Generator"
        }, 
        {
            "location": "/faq/consensus/#simple-random-number", 
            "text": "The contract invokes an interface to obtain a random number, and provides a random number based on the current random seed.", 
            "title": "Simple random number:"
        }, 
        {
            "location": "/faq/consensus/#complex-random-number", 
            "text": "The user first specifies a set of consecutive blocks in the contract. The system then uses the prev_secret of the block set as an input to generate a random number. The user can specify a set of blocks that have not been generated to be specified in the contract. After the block set is generated, the random number is determined.  Users can directly invoke the interface in the contract to get a simple random number. For this method, there is a possibility that they can choose not to package the invocation based on the results of random numbers and their own interests, should the stakeholders of execution result are the current block producer and the contract invocation is single use.   When users want to avoid this situation, they can use complex random numbers. A complex random number takes the  prev_secret  of a set of continuous blocks as an input. If the block producer wants to generate a random number, the  prev_secret  of the current block needs to be adjusted according to that of other blocks in the set. However, the  prev_secret  will have been determined in a previous round of production blocks and cannot be modified, meaning that producers cannot control the generation of random numbers.", 
            "title": "Complex random number:"
        }, 
        {
            "location": "/faq/event-rollback/", 
            "text": "Events\n refer to specific pieces of data that are generated within the contract and are recorded on the blockchain. Once an event occurs, all blockchain nodes can observe their corresponding data. \nRollbacks\n refer to the binding of methods of handling an \nevent\n in a contract. When a specific type of event is triggered, the corresponding binding method will be executed. The official wallet provides a default script rollback, which can also be customised by the user on a situational basis.\n\n\nWhen the Citizen node executes a contract and triggers an event, it will package the event into a block, and broadcasts it onto the chain. When a smart contract is invoked at different time or under different external conditions, it may continue in different branches of the contract code and execute different code logic. For the invoker, the status of the contract execution is difficult to know. With the event mechanism, the user has the ability to known the status of the contract execution and hence obtain the result of the contract execution.\n\n\nWith this ability, the user can take relevant actions based on corresponding events they have received, such as re-initiating a transaction, initiating a contract invocation, or performing local actions (such as logging, database logging, making HTTP requests, and so on). Users can even make programs connected to the blockchain with decision-making ability, executing practical decisions and implementing different operations according to outcomes.", 
            "title": "Events and Rollbacks"
        }, 
        {
            "location": "/faq/local-query/", 
            "text": "The data in a smart contract\ns \nstorage\n area can be queried through the contract interface. This will incur fees, and needs to wait for block packaging for results. For some simple query functions that do not involve consensus, the contract supports a local (offline) query interface. By querying local blockchain data, the current status of the contract is able to be accessed quickly, and does not incur fees.", 
            "title": "Local Query Interface"
        }, 
        {
            "location": "/faq/asset-block-import-model/", 
            "text": "Each new asset blockchain is linked by using a plug-in mode. Ordinary nodes can choose whether to mount cross-chain plugins. Citizens and Senators are forced to mount all cross-chain plugins.\nEach time a new cross-chain plugin is added, the process is as follows:\n\n\n\n\n\n\nCitizens and Senators negotiate a downtime of the network;\n\n\n\n\n\n\nCitizens and Senators restart and load plugins in batches, within the agreed time;\n\n\n\n\n\n\nAll Senators must increase their collateral deposit to a pre-defined amount;\n\n\n\n\n\n\nAfter reaching an agreed time, an initialisation operation of the new token type is executed (this process involves creating new multi-signature addresses, broadcasting to the network new parameters related to the new token implementation and deciding upon a settlement price);\n\n\n\n\n\n\nConduct the blockchain update;\n\n\n\n\n\n\nAn ordinary node may decide to mount any new cross-chain plugin they desire. (Any ordinary node can select whichever cross-chain plugin they would like to mount. This is an independent process, unaffected by the consensus mechanism)", 
            "title": "Asset Block Import Model"
        }
    ]
}