(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{366:function(n,e,a){"use strict";a.r(e);var t=a(0),s=Object(t.a)({},function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"uvm-assembly-language-examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uvm-assembly-language-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" uvm assembly language examples")]),this._v(" "),e("pre",[e("code",[this._v('.upvalues 1  ;L1;  comment test\n\n; comment here\n.func main 5 0 2 ; source: @test.lua ; maxstacksize: 5, params: 0, vararg: 2 (declared vararg)\n.begin_const\n"asd"\n"Hello\\nabc"\n" world!"\n.end_const\n\n\n.begin_upvalue\n1 0\n.end_upvalue\n\n\n.begin_code\nloadk %0 const "asd"\nclosure %1 subroutine_2\n\nmove %2 %1\nloadk %3 const "Hello\\nabc"  ;L10; this is a line position comment\nloadk %4 const " world!"\ncall %2 3 1\nreturn %0 1\n.end_code\n\n\n.func subroutine_2 5 0 1 ; maxstacksize: 5, params: 0, vararg: 1 (uses vararg)\n.begin_const\n"table"\n"concat"\n","\n"print"\n.end_const\n\n\n.begin_upvalue\n0 0\n.end_upvalue\n\n\n.begin_code\ngettabup %0 @0 const "table" ; debug name: _ENV\ngettable %0 %0 const "concat"\nnewtable %1 0 0\nvararg %2 0\nsetlist %1 0 1\nloadk %2 const ","\ncall %0 3 2\nclosure %1 subroutine_3\nmove %2 %1\ngettabup %3 @0 const "print" ; debug name: _ENV\nmove %4 %0\ntailcall %2 3 0\nreturn %2 0\nreturn %0 1\n.end_code\n\n\n.func subroutine_3 4 2 0 ; maxstacksize: 4, params: 2, vararg: 0 (does not use varag)\n.begin_const\n.end_const\n\n\n.begin_upvalue\n.end_upvalue\n\n\n.begin_code\nmove %2 %0\nmove %3 %1\ntailcall %2 2 0\nreturn %2 0\nreturn %0 1\n.end_code')])])])},[],!1,null,null,null);e.default=s.exports}}]);