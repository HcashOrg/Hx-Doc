(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{314:function(a,e,t){"use strict";t.r(e);var n=t(0),l=Object(n.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"table类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table类型","aria-hidden":"true"}},[a._v("#")]),a._v(" table类型")]),a._v(" "),t("p",[a._v("table类型是内置的一个基本类型，每个table值包含数组部分和哈希表两个部分，其中数组部分的索引从1开始，record类型在运行时也是表现为table类型。")]),a._v(" "),t("p",[a._v("字面量语法是{}表示空table，也可以用形如  { key1 = value1, key2 = value2, ['key3'] = value3, ... }的形式初始化一个table值。")]),a._v(" "),t("p",[a._v("table可以用点操作符或者中括号的方式修改和查询其中某个索引的值，比如:")]),a._v(" "),t("pre",[t("code",[a._v("let a = { name='uvm', age=1 }\na[1] = 123   -- 给a的数组部分加入一个值123\na['abc'] = 'China'    -- 给a的哈希表部分插入/修改索引’abc’对应的值\na.abc = 'China'    -- 效果同a[‘abc’]\nlet b1 = a.name     -- 读取a的哈希表部分的’name’索引对应的值赋值给新变量b1\nlet b2 = a['name']    -- 同 a.name\nlet b3 = a[1]             -- 读取a的数组部分的第1个值赋值给新变量b3\n")])])])},[],!1,null,null,null);e.default=l.exports}}]);