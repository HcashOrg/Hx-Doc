(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{194:function(e,_,n){"use strict";n.r(_);var t=n(0),v=Object(t.a)({},function(){var e=this,_=e.$createElement,n=e._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"hyperexchange项目编译指导"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hyperexchange项目编译指导","aria-hidden":"true"}},[e._v("#")]),e._v(" HyperExchange项目编译指导")]),e._v(" "),n("h2",{attrs:{id:"编译"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编译","aria-hidden":"true"}},[e._v("#")]),e._v(" 编译")]),e._v(" "),n("p",[n("strong",[e._v("HX-Node")]),e._v(" 需要64位操作系统来构建；")]),e._v(" "),n("p",[n("strong",[e._v("HX-Node")]),e._v(" 需要Boost版本1.64.0或更新版本。不支持早于1.64的版本。")]),e._v(" "),n("ul",[n("li",[n("router-link",{attrs:{to:"/zh/wallets/hx-building/#1"}},[e._v("Ubuntu (64-bit) Linux")])],1),e._v(" "),n("li",[n("router-link",{attrs:{to:"/zh/wallets/hx-building/#2"}},[e._v("OS X")])],1),e._v(" "),n("li",[n("router-link",{attrs:{to:"/zh/wallets/hx-building/#3"}},[e._v("Windows")])],1)]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"1"}},[e._v("UBUNTU下编译")]),e._v(" "),n("hr"),e._v(" "),n("blockquote",[n("p",[n("strong",[e._v("Ubuntu 16.04 LTS (64-bit) 构建和安装说明")])])]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("在Ubuntu 16.04 LTS（64位）上进行全新安装需要以下依赖项：")]),e._v(" "),n("pre",[n("code",[e._v("sudo apt-get update\nsudo apt-get install autoconf cmake make automake libtool git libboost-all-dev libssl-dev g++ libcurl4-openssl-dev libleveldb-dev\n")])]),e._v(" "),n("blockquote",[n("p",[n("strong",[e._v("构建 Crosschain Privatekey项目")])])]),e._v(" "),n("pre",[n("code",[e._v("git clone https://github.com/BlockLink/blocklink_crosschain_privatekey\ncd blocklink_crosschain_privatekey\ncmake -DCMAKE_BUILD_TYPE=Release .\nmake\n")])]),e._v(" "),n("blockquote",[n("p",[n("strong",[e._v("构建 Eth Crosschain Privatekey项目")])])]),e._v(" "),n("pre",[n("code",[e._v("git clone https://github.com/BlockLink/eth_crosschain_privatekey.git\ncd eth_crosschain_privatekey/eth_sign/cryptopp/\nmake\ncd ..\ncmake .\nmake\n")])]),e._v(" "),n("blockquote",[n("p",[n("strong",[e._v("构建 HyperExchange Node项目")])])]),e._v(" "),n("p",[e._v("将crosschain privatekey项目和Eth Crosschain Privatekey项目生成的lib库路径添加到环境变量里，请使用您环境中blocklink_crosschain_privatekey和eth_crosschain_privatekey的路径替换下面命令中的路径。")]),e._v(" "),n("pre",[n("code",[e._v("`export CROSSCHAIN_PRIVATEKEY_PROJECT=~/blocklink_crosschain_privatekey`\n`export ETH_CROSSCHAIN_PROJECT=~/eth_crosschain_privatekey`\n\n\ngit clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\ngit submodule update --init --recursive\ncmake .\nmake\n")])]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"2"}},[e._v("MAC OS下编译")]),e._v(" "),n("blockquote",[n("p",[n("strong",[e._v("HyperExchange Node MAC系统下构建说明")])])]),e._v(" "),n("p",[e._v("1.按照以下说明安装XCode及其命令行工具:"),n("a",{attrs:{href:"https://guide.macports.org/#installing.xcode",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://guide.macports.org/#installing.xcode"),n("OutboundLink")],1),e._v("。在OS X 10.11（El Capitan）及更新版本中，当在终端中运行devloper命令时，系统将提示您安装开发人员工具。可能不需要此步骤。")]),e._v(" "),n("p",[e._v("2.按照以下说明安装软件: "),n("a",{attrs:{href:"http://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://brew.sh/"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("3.初始化Homebrew:")]),e._v(" "),n("pre",[n("code",[e._v("brew doctor\nbrew update\n")])]),e._v(" "),n("p",[e._v("4.安装依赖项：")]),e._v(" "),n("pre",[n("code",[e._v("brew install boost cmake git openssl autoconf automake libtool\nbrew link --force openssl \n")])]),e._v(" "),n("p",[e._v("5.可选。要支持导入比特币钱包文件：")]),e._v(" "),n("pre",[n("code",[e._v("brew install berkeley-db\n")])]),e._v(" "),n("p",[e._v("6.可选。在LevelDB中使用TCMalloc：")]),e._v(" "),n("pre",[n("code",[e._v("brew install google-perftools\n")])]),e._v(" "),n("p",[e._v("7.构建 Crosschain Privatekey项目")]),e._v(" "),n("pre",[n("code",[e._v("git clone https://github.com/BlockLink/blocklink_crosschain_privatekey\ncd blocklink_crosschain_privatekey\ncmake .\nmake\n")])]),e._v(" "),n("p",[e._v("8.构建 Eth Crosschain Privatekey项目")]),e._v(" "),n("pre",[n("code",[e._v("git clone https://github.com/BlockLink/eth_crosschain_privatekey.git\ncd eth_crosschain_privatekey/eth_sign/cryptopp/\nmake\ncd ..\ncmake .\nmake\n")])]),e._v(" "),n("p",[e._v("9.下载HyperExchange源码:")]),e._v(" "),n("pre",[n("code",[e._v("git clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\n")])]),e._v(" "),n("p",[e._v("10.编译HyperExchange:")]),e._v(" "),n("p",[e._v("将crosschain privatekey项目和Eth Crosschain Privatekey项目生成的lib库路径添加到环境变量里，请使用您环境中blocklink_crosschain_privatekey和eth_crosschain_privatekey的路径替换下面命令中的路径。")]),e._v(" "),n("pre",[n("code",[e._v("`export CROSSCHAIN_PRIVATEKEY_PROJECT=~/blocklink_crosschain_privatekey`\n`export ETH_CROSSCHAIN_PROJECT=~/eth_crosschain_privatekey`\n\ngit submodule update --init --recursive\ncmake .\nmake\n")])]),e._v(" "),n("p",[e._v("注意：如其他地方所述，HyperExchange依赖于第三方库“Boost”和“OpenSSL”。这些库需要处于某些版本范围内。目前，Boost需要比它高1.64或更新。OpenSSL需要在1.0.x范围内。")]),e._v(" "),n("p",[e._v("Boost: 你可以用brew检查当前的boost版本:")]),e._v(" "),n("pre",[n("code",[e._v("brew search boost\n")])]),e._v(" "),n("p",[e._v("安装其他的boost版本(比如1.64.0):")]),e._v(" "),n("pre",[n("code",[e._v("brew install boost@1.64\n")])]),e._v(" "),n("p",[e._v("OpenSSL: 您可能拥有比所需版本更旧的OpenSSL版本。如果是这样，使用brew进行升级:")]),e._v(" "),n("pre",[n("code",[e._v("brew upgrade openssl\n")])]),e._v(" "),n("p",[e._v("使用这些新版本进行编译：我们现在必须告诉cmake这些库的位置。而不是上面提到的“cmake。”，用以下命令：")]),e._v(" "),n("pre",[n("code",[e._v("cmake -DBOOST_ROOT=/usr/local/opt/boost@1.64 -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl .\n")])]),e._v(" "),n("p",[e._v("然后进行编译")]),e._v(" "),n("pre",[n("code",[e._v("make\n")])]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"3"}},[e._v(" Visual Studio 2017下构建")]),e._v(" "),n("blockquote",[n("p",[e._v("前提条件")])]),e._v(" "),n("ul",[n("li",[e._v("Microsoft Visual C ++ 2017 Update 1（免费的Express版本可以使用）")]),e._v(" "),n("li",[e._v("如果您有多个MSVS安装，请使用目标版本的MSVS Developer控制台。")]),e._v(" "),n("li",[e._v("此版本适用于64位二进制文​​件。")])]),e._v(" "),n("blockquote",[n("p",[e._v("设置目录结构")])]),e._v(" "),n("p",[e._v("1.为所有项目创建一个基本目录。我把所有东西放在D：\\ hyperexchange中，你可以使用你喜欢的任何路径。在几个bat文件和makefile中，此目录将被称为GRA_ROOT：")]),e._v(" "),n("pre",[n("code",[e._v("mkdir D:\\hyperexchange\n")])]),e._v(" "),n("p",[e._v("2.下载hyperexchange源码")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\ngit clone https://github.com/HcashOrg/HyperExchange.git\ncd HyperExchange\ngit submodule update --init --recursive\n")])]),e._v(" "),n("p",[e._v("3.下载CMake")]),e._v(" "),n("p",[e._v("在下面的网站下载cmake的最新版本"),n("a",{attrs:{href:"https://cmake.org/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://cmake.org/cmake/resources/software.html"),n("OutboundLink")],1),e._v(" (例如 3.12.2). 将其解压缩到您的基本目录，这将创建一个类似于的目录 "),n("code",[e._v("D:\\hyperexchange\\cmake-3.12.2-win64-x64")]),e._v(". 将此目录重命名为 "),n("code",[e._v("D:\\hyperexchange\\CMake")]),e._v(".")]),e._v(" "),n("p",[e._v("如果您已经在系统的其他地方安装了CMake，则可以使用它，但是hyperexchange Core有一些bat文件，希望它位于基本目录的CMake子目录中，因此这些脚本需要调整。")]),e._v(" "),n("p",[e._v("4.Boost")]),e._v(" "),n("p",[e._v("hyperexchange依赖于boost1.64.0或者更新的版本。您可以从源代码构建它们。")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("下载boost源码 "),n("a",{attrs:{href:"http://www.boost.org/users/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.boost.org/users/download/"),n("OutboundLink")],1)])]),e._v(" "),n("li",[n("p",[e._v("解压到基本目录里 "),n("code",[e._v("D:\\hyperexchange")]),e._v(".")])]),e._v(" "),n("li",[n("p",[e._v("将产生一个像"),n("code",[e._v("D:\\hyperexchange\\boost_1_64_0")]),e._v("的目录.")])])]),e._v(" "),n("p",[e._v("5.OpenSSL")]),e._v(" "),n("p",[e._v("HyperExchange依赖OpenSSL版本1.0.2，您必须从源代码构建它。")]),e._v(" "),n("ul",[n("li",[e._v("从 "),n("a",{attrs:{href:"http://www.openssl.org/source/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.openssl.org/source/"),n("OutboundLink")],1),e._v("下载openssl源码")]),e._v(" "),n("li",[e._v("解压缩到基目录 "),n("code",[e._v("D:\\hyperexchange")])]),e._v(" "),n("li",[e._v("这将创建一个类似的目录 "),n("code",[e._v("D:\\hyperexchange\\openssl-1.0.2o")]),e._v(".")])]),e._v(" "),n("p",[e._v("6.Crosschain Privatekey项目构建")]),e._v(" "),n("p",[e._v("HyperExchange依赖于libboost，您必须从源代码构建它。")]),e._v(" "),n("ul",[n("li",[e._v("从"),n("a",{attrs:{href:"https://github.com/BlockLink/blocklink_crosschain_privatekey",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/BlockLink/blocklink_crosschain_privatekey"),n("OutboundLink")],1),e._v("下载Crosschain Privatekey源码")]),e._v(" "),n("li",[e._v("解压缩到基目录 "),n("code",[e._v("D:\\hyperexchange")])]),e._v(" "),n("li",[e._v("这将创建一个类似的目录 "),n("code",[e._v("D:\\hyperexchange\\blocklink_crosschain_privatekey")]),e._v(".")])]),e._v(" "),n("p",[e._v("7.Eth Crosschain Privatekey项目构建")]),e._v(" "),n("p",[e._v("HyperExchange依赖于libboost，您必须从源代码构建它。")]),e._v(" "),n("ul",[n("li",[e._v("从"),n("a",{attrs:{href:"https://github.com/BlockLink/eth_crosschain_privatekey.git",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/BlockLink/eth_crosschain_privatekey.git"),n("OutboundLink")],1),e._v("下载Eth Crosschain Privatekey源码")]),e._v(" "),n("li",[e._v("解压缩到基目录 "),n("code",[e._v("D:\\hyperexchange")]),e._v("，将leveldb.rar也解压到基目录 "),n("code",[e._v("D:\\hyperexchange")])]),e._v(" "),n("li",[e._v("这将创建一个类似的目录 "),n("code",[e._v("D:\\hyperexchange\\eth_crosschain_privatekey")]),e._v("和"),n("code",[e._v("D:\\hyperexchange\\leveldb")]),e._v(".")])]),e._v(" "),n("p",[e._v("最后，您的基本目录应如下所示（64位版本的目录名称略有不同）：")]),e._v(" "),n("pre",[n("code",[e._v("D:\\hyperexchange\n+- HyperExchange\n+- boost_1_64_0\n+- CMake\n+- openssl-1.0.2o\n+- blocklink_crosschain_privatekey\n+- eth_crosschain_privatekey\n+- leveldb\n")])]),e._v(" "),n("blockquote",[n("p",[e._v("构建依赖库项")])]),e._v(" "),n("p",[e._v("1.编译 OpenSSL DLLs")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\openssl-1.0.2o\nperl Configure VC-WIN64A --prefix=D:\\hyperexchange\\OpenSSL\nms\\do_win64a\nnmake -f ms\\ntdll.mak\nnmake -f ms\\ntdll.mak install\n")])]),e._v(" "),n("p",[e._v("如果在执行命令 "),n("code",[e._v("nmake -f ms\\ntdll.mak")]),e._v('时发生如"NMAKE : fatal error U1077"，请使用 '),n("code",[e._v("VS2013 x64 native tool command prompt")]),e._v("工具执行该命令。")]),e._v(" "),n("p",[e._v("2.编译Boost")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\boost_1_64_0\nbootstrap.bat\n.\\b2.exe address-model=64\n")])]),e._v(" "),n("p",[e._v("3.构建Crosschain Privatekey")]),e._v(" "),n("p",[e._v("设置环境编译：")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\blocklink_crosschain_privatekey\nnotepad setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset CROSSCHAIN_PRIVATEKEY_PROJECT=%GRA_ROOT%/blocklink_crosschain_privatekey\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%CROSSCHAIN_PRIVATEKEY_PROJECT%;%PATH%\n\necho Setting up VS2017 environment...\ncall "%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat" x86_amd64\n')])]),e._v(" "),n("p",[e._v('在我的电脑上，VS150COMNTOOLS变量指:"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"，请在PC上设置文件vcvarsall.bat的正确路径。')]),e._v(" "),n("p",[e._v("注意保持斜杠和反斜杠与示例一致")]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("编译")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\blocklink_crosschain_privatekey\nnotepad run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('setlocal\ncall "d:\\hyperexchange\\blocklink_crosschain_privatekey\\setenv_x64.bat"\ncd %GRA_ROOT%\\blocklink_crosschain_privatekey\ncmake-gui -G "Visual Studio 15"\n')])]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("这会弹出cmake gui，但是如果你之前使用过CMake可能会显示错误的数据，那么修复：")]),e._v(" "),n("ul",[n("li",[e._v("Where is the source code: "),n("code",[e._v("D:/hyperexchange/blocklink_crosschain_privatekey")])]),e._v(" "),n("li",[e._v("Where to build the binaries: "),n("code",[e._v("D:/hyperexchange/blocklink_crosschain_privatekey/x64")])])]),e._v(" "),n("p",[e._v("然后点击Configure.它可能会要求您为此项目指定生成器; 如果是，请选择Visual Studio 15 2017 Win64进行64位构建，然后选择Use default native compilers。查看输出并修复任何错误。然后点击Generate。")]),e._v(" "),n("p",[e._v("启动Visual Studio并加载 D:\\hyperexchange\\blocklink_crosschain_privatekey\\x64\\blocklink_crosschain_privatekey.sln")]),e._v(" "),n("p",[e._v("将Active Configuration设置为 "),n("code",[e._v("RelWithDebInfo")]),e._v(", 确保Active Solution platform 是 "),n("code",[e._v("x64")]),e._v(" 。")]),e._v(" "),n("p",[e._v("生成解决方案")]),e._v(" "),n("p",[e._v("编译成功后，选择编译"),n("code",[e._v("INSTALL")]),e._v(" ，在blocklink_crosschain_privatekey下将会生成目录 "),n("code",[e._v("third_libs")]),e._v("，里面有 "),n("code",[e._v("blocklink_libbitcoin.lib")]),e._v(" 和 "),n("code",[e._v("blocklink_libbitcoin_secp256k1.lib")]),e._v("。")]),e._v(" "),n("p",[e._v("4.构建Eth Crosschain Privatekey")]),e._v(" "),n("p",[e._v("编译cryptlib.lib")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\cryptopp\n找到cryptest.sln文件并双击，会在vs2017中打开该工程；\n解决方案配置选择“Release”，解决方案平台选择“X64”；\n选择项目cryptlib项目，右键点击生成；\n将D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\cryptopp\\x64\\Output\\Release下生成的cryptlib.lib拷贝到D:\\hyperexchange\\eth_crosschain_privatekey\\libs，如果没有libs路径请创建该路径。\n")])]),e._v(" "),n("p",[e._v("设置环境变量：")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\nnotepad setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset ETH_CROSSCHAIN_PROJECT=%GRA_ROOT%/eth_crosschain_privatekey/eth_sign\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%ETH_CROSSCHAIN_PROJECT%;%PATH%\n\necho Setting up VS2017 environment...\ncall "%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat" x86_amd64\n')])]),e._v(" "),n("p",[e._v('在我的电脑上，VS150COMNTOOLS变量指:"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"，请在PC上设置文件vcvarsall.bat的正确路径。')]),e._v(" "),n("p",[e._v("注意保持斜杠和反斜杠与示例一致")]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("编译")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\nnotepad run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('setlocal\ncall "d:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\setenv_x64.bat"\ncd %GRA_ROOT%\\eth_crosschain_privatekey\\eth_sign\ncmake-gui -G "Visual Studio 15"\n')])]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("这会弹出cmake gui，但是如果你之前使用过CMake可能会显示错误的数据，那么修复：")]),e._v(" "),n("ul",[n("li",[e._v("Where is the source code: "),n("code",[e._v("D:/hyperexchange/eth_crosschain_privatekey/eth_sign")])]),e._v(" "),n("li",[e._v("Where to build the binaries: "),n("code",[e._v("D:/hyperexchange/eth_crosschain_privatekey/eth_sign/x64")])])]),e._v(" "),n("p",[e._v("然后点击Configure.它可能会要求您为此项目指定生成器; 如果是，请选择Visual Studio 15 2017 Win64进行64位构建，然后选择Use default native compilers。查看输出并修复任何错误。然后点击Generate。")]),e._v(" "),n("p",[e._v("启动Visual Studio并加载 D:\\hyperexchange\\eth_crosschain_privatekey\\x64\\eth_crosschain_privatekey.sln")]),e._v(" "),n("p",[e._v("将Active Configuration设置为 "),n("code",[e._v("Release")]),e._v(", 确保Active Solution platform 是 "),n("code",[e._v("x64")]),e._v(" 。")]),e._v(" "),n("p",[e._v("点击项目eth_sign，右键选择属性，在C/C++->目录->附加包含目录里添加boost路径：D:\\hyperexchange\\boost_1_64_0；添加leveldb的头文件路径：D:\\hyperexchange\\leveldb\\include；在库管理器->常规->附加依赖项里添加：leveldb.lib，在附加库目录里添加：D:\\hyperexchange\\leveldb\\x64\\Release；点击应用确定；在eth_sign项目下找到levelDB.cpp文件，右键点击属性，将从生成中排除选择为是；")]),e._v(" "),n("p",[e._v("生成解决方案")]),e._v(" "),n("p",[e._v("编译成功后，将D:\\hyperexchange\\eth_crosschain_privatekey\\eth_sign\\x64\\Release路径下的eth_sign.lib文件拷贝到D:\\hyperexchange\\eth_crosschain_privatekey\\libs，如果没有libs路径请创建该路径。")]),e._v(" "),n("blockquote",[n("p",[e._v("构建hyperexchange")])]),e._v(" "),n("p",[e._v("1.设置环境变量：")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\HyperExchange\nnotepad setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('@echo off\nset GRA_ROOT=d:/hyperexchange\nset OPENSSL_ROOT=%GRA_ROOT%\\OpenSSL\nset OPENSSL_ROOT_DIR=%OPENSSL_ROOT%\nset OPENSSL_INCLUDE_DIR=%OPENSSL_ROOT%\\include\nset BOOST_ROOT=%GRA_ROOT%\\boost_1_64_0\nset CROSSCHAIN_PRIVATEKEY_PROJECT=%GRA_ROOT%/blocklink_crosschain_privatekey\nset ETH_CROSSCHAIN_PROJECT=%GRA_ROOT%/eth_crosschain_privatekey\n\nset PATH=%GRA_ROOT%\\CMake\\bin;%BOOST_ROOT%\\stage\\lib;%OPENSSL_ROOT%\\lib\\;%CROSSCHAIN_PRIVATEKEY_PROJECT%;%ETH_CROSSCHAIN_PROJECT;%PATH%\n\necho Setting up VS2017 environment...\ncall "%VS150COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat" x86_amd64\n')])]),e._v(" "),n("p",[e._v('在我的电脑上，VS150COMNTOOLS变量指:"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"，请在PC上设置文件vcvarsall.bat的正确路径。')]),e._v(" "),n("p",[e._v("注意保持斜杠和反斜杠与示例一致")]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("setenv_x64.bat\n")])]),e._v(" "),n("p",[e._v("2.运行 CMake:")]),e._v(" "),n("pre",[n("code",[e._v("D:\ncd D:\\hyperexchange\\HyperExchange\nnotepad run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("在打开的notepad输入以下内容，保存并退出。")]),e._v(" "),n("pre",[n("code",[e._v('setlocal\ncall "d:\\hyperexchange\\HyperExchange\\setenv_x64.bat"\ncd %GRA_ROOT%\\HyperExchange\ncmake-gui -G "Visual Studio 15"\n')])]),e._v(" "),n("p",[e._v("然后执行下面的bat文件")]),e._v(" "),n("pre",[n("code",[e._v("run_cmake_x64.bat\n")])]),e._v(" "),n("p",[e._v("这会弹出cmake gui，但是如果你之前使用过CMake可能会显示错误的数据，那么修复：")]),e._v(" "),n("ul",[n("li",[e._v("Where is the source code: "),n("code",[e._v("D:/hyperexchange/HyperExchange")])]),e._v(" "),n("li",[e._v("Where to build the binaries: "),n("code",[e._v("D:/hyperexchange/HyperExchange/x64")])])]),e._v(" "),n("p",[e._v("然后点击Configure.它可能会要求您为此项目指定生成器; 如果是，请选择Visual Studio 15 2017 Win64进行64位构建，然后选择Use default native compilers。查看输出并修复任何错误。然后点击Generate。")]),e._v(" "),n("p",[e._v("3.启动Visual Studio并加载D:\\hyperexchange\\x64\\hyperexchange.sln")]),e._v(" "),n("p",[e._v("4.将Active Configuration设置为 "),n("code",[e._v("RelWithDebInfo")]),e._v(", 确保Active Solution platform 是 "),n("code",[e._v("x64")]),e._v(" 。")]),e._v(" "),n("p",[e._v("5.生成解决方案")]),e._v(" "),n("p",[e._v("6.编译"),n("code",[e._v("INSTALL")]),e._v("，该目标将所有必需的文件复制到您的D:\\hyperexchange\\HyperExchange\\install目录中，然后将所有这些文件复制到该bin目录中。")]),e._v(" "),n("hr")])},[],!1,null,null,null);_.default=v.exports}}]);