(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{375:function(e,a,n){"use strict";n.r(a);var t=n(0),r=Object(t.a)({},function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"数组类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 数组类型")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("uvm中数组类型是用动态数组实现的，长度可变")])]),e._v(" "),n("li",[n("p",[e._v("数组类型是可以存储若干个同类型值的数据结构，类型声明语法是Array"),n("T",[e._v("，其中T用具体某个类型替换，")])],1)]),e._v(" "),n("li",[n("p",[e._v("数组字面量语法是")]),e._v(" "),n("p",[e._v("[ value1, value2, … ]")])])]),e._v(" "),n("p",[e._v("例如：")]),e._v(" "),n("pre",[n("code",[e._v("let a: Array<int> = [ 1, 2, 3 ]     -- 注意，这里``>``和``=``两个符号不能连接在一起\nlet b: int = a[1]    \n")])]),e._v(" "),n("ul",[n("li",[e._v("数组类型和数组字面量支持嵌套和保护table字面量")])]),e._v(" "),n("p",[e._v("例如:")]),e._v(" "),n("pre",[n("code",[e._v("type Person = { name: string, age: int default 0 }\n\nlet p1 = Person({name='p1'})\nlet p2 = Person({name='p2', age=24})\nlet persons: Array<Array<Person> > = [ [p1, p2], [p2, p3], [p3] ]       -- 注意，这里``>``和``>``不能连接在一起，否则会被识别为``>>``\n")])]),e._v(" "),n("ul",[n("li",[e._v("Array"),n("T",[e._v("类型的值的增删改查可以使用内置模块table模块来操作")])],1)]),e._v(" "),n("p",[e._v("例如:")]),e._v(" "),n("pre",[n("code",[e._v("var a = [1,2,3]\ntable.append(a, 4)  -- 添加值到数组\na[3] = 100  -- 修改数组第3个元素\nlet array_length1 = table.length(a)  -- 获取数组长度\nlet array_length2 = #a  -- 另一种获取数组长度的方式\ntable.remove(a, 2)  -- 删除a数组中第2个元素（1-based索引)\n\nvar k: int, v: int = 0, 0\nfor k, v in pairs(a) do\n    pprint(k, v)  -- 遍历数组a，k和v分别是a中每一项的索引和值，索引从1开始\nend")])])])},[],!1,null,null,null);a.default=r.exports}}]);